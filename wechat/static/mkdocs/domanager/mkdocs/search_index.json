{
    "docs": [
        {
            "location": "/",
            "text": "\u6b22\u8fce\u6765\u5230\u5b85\u5fc5\u5907\n\n\n \n\u8be5\u7f51\u7ad9\u4e3a\u6211\u7684\u4e2a\u4eba\u516c\u4f17\u53f7\u7684\u535a\u5ba2\u5730\u5740\uff0c\u6700\u65b0\u6700\u5feb\u8d44\u6599\u8bf7\u5173\u6ce8\u516c\u4f17\u53f7\n\n\n \n\n\n\u8be5\u9875\u9762\u4e3a\n\u6253\u9020\u5c5e\u4e8e\u81ea\u5df1\u7684\u76d1\u63a7\u7cfb\u7edf\u4e4bOracle\u6027\u80fd\u76d1\u63a7\n\u4e3b\u9875\u9762\n\n\n\u66f4\u591a\u5185\u5bb9\u8bf7\u70b9\u51fb\n\u8fd4\u56de\u9996\u9875\n\n\n \n\n \n\n \n\n \n\n\n\u6b22\u8fce\u626b\u63cf\u5173\u6ce8\u4e2a\u4eba\u516c\u4f17\u53f7\n\u5b85\u5fc5\u5907",
            "title": "\u9996\u9875"
        },
        {
            "location": "/#_1",
            "text": "\u8be5\u7f51\u7ad9\u4e3a\u6211\u7684\u4e2a\u4eba\u516c\u4f17\u53f7\u7684\u535a\u5ba2\u5730\u5740\uff0c\u6700\u65b0\u6700\u5feb\u8d44\u6599\u8bf7\u5173\u6ce8\u516c\u4f17\u53f7     \u8be5\u9875\u9762\u4e3a \u6253\u9020\u5c5e\u4e8e\u81ea\u5df1\u7684\u76d1\u63a7\u7cfb\u7edf\u4e4bOracle\u6027\u80fd\u76d1\u63a7 \u4e3b\u9875\u9762  \u66f4\u591a\u5185\u5bb9\u8bf7\u70b9\u51fb \u8fd4\u56de\u9996\u9875           \u6b22\u8fce\u626b\u63cf\u5173\u6ce8\u4e2a\u4eba\u516c\u4f17\u53f7 \u5b85\u5fc5\u5907",
            "title": "\u6b22\u8fce\u6765\u5230\u5b85\u5fc5\u5907"
        },
        {
            "location": "/1.1/",
            "text": "\u4f7f\u7528Django\u76d1\u63a7Oracle TOP SQL \u4ecb\u7ecd\n\n\n2017-12-04 Python \u5b85\u5fc5\u5907\n\n\n\u524d\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528Python\u642d\u5efa\u4e00\u4e2a\u7f51\u7ad9\u5e76\u4e14\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u5176\u4e2d\u6267\u884cOracle\u547d\u4ee4\u5e76\u5728\u524d\u7aef\u663e\u793a\u51fa\u6765 \n\n\n\u7136\u540e\u8bb2\u8ff0\u81ea\u5b9a\u4e49\u547d\u4ee4\u76f8\u5173\u7684\u77e5\u8bc6\n\n\n\u7cbe\u5f69\u5185\u5bb9\u53ef\u901a\u8fc7\u516c\u4f17\u53f7\u81ea\u5b9a\u4e49\u83dc\u5355\u67e5\u770b\u4e5f\u53ef\u76f4\u63a5\u67e5\u770b\u6211\u7684\u7f51\u7ad9\n\n\nhttp://www.zhaibibei.cn/oms/1.1/\n\n\nhttp://www.zhaibibei.cn/oms/2.1/\n\n\nhttp://www.zhaibibei.cn/oms/3.1/\n\n\n\u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528Django\u83b7\u53d6\u6570\u636e\u5e93\u7684\u4fe1\u606f\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8bf4\u7684\u662f\u5982\u4f55\u901a\u8fc7Django\u521b\u5efa\u7684\u7f51\u7ad9\u6765\u76d1\u63a7Oracle\u7684TOP SQL\n\n\n\u6ce8\u610f\u4e8b\u9879\n\n\n\u524d\u9762\u7684\u5185\u5bb9\u6211\u4f7f\u7528\u7684\u662fCentOS 6.8+ Python 2.7 \u7684\u73af\u5883\n\n\n\u4ece\u8fd9\u671f\u5f00\u59cb\u5df2\u7ecf\u6539\u6210\u4e86CentOS 7 +Python 3.6 \u7684\u73af\u5883\n\n\n\u5173\u4e8e\u5982\u4f55\u8fc1\u79fb\u5c06\u5728\u540e\u9762\u4ecb\u7ecd\n\n\n1.\u6574\u4f53\u6d41\u7a0b\u56fe\n\n\n\u6211\u4eec\u9488\u5bf9TOP SQL \u8fd9\u4e2a\u76d1\u63a7\u6a21\u5757\u7684\u4e3b\u8981\u6709\u5982\u4f55\u6d41\u7a0b\n\n\n\n\n\n\n\n\n\u9996\u5148\u6bcf\u5c0f\u65f6\u6293\u53d6v$sqlarea\u89c6\u56fe\u7684SQL \u6570\u636e\uff0c\u5305\u62ec\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\uff0cCPU \u65f6\u95f4\u7b49\n\n\n\n\n\n\n\u7136\u540e\u5c06\u6293\u5230\u7684\u6570\u636e\u5b58\u5165MySQL\u6570\u636e\u5e93\n\n\n\n\n\n\n\u63a5\u4e0b\u6765\u4f7f\u7528Django\u8bfb\u53d6MySQL\u6570\u636e\u5e93\u91cc\u9762\u7684\u6570\u636e\n\n\n\n\n\n\n\u7528pandas\u5c06\u83b7\u53d6\u5230\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u4e3b\u8981\u4e3a\u5bf9\u4e24\u4e2a\u65f6\u95f4\u70b9\u7684\u6027\u80fd\u6570\u636e\u8fdb\u884c\u5dee\u503c\u8ba1\u7b97\uff0c\u7136\u540e\u8fdb\u884c\u6392\u5e8f\u5f97\u51faTOP SQL \u8bed\u53e5\n\n\n\n\n\n\n\u6700\u540e\u5c06\u5904\u7406\u8fc7\u7684\u6570\u636e\u901a\u8fc7highchats \u5728\u524d\u7aef\u663e\u793a\n\n\n\n\n\n\n\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u6211\u5c06\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u505a\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u8c22\u8c22\n\n\n2. \u4e00\u4e9b\u6548\u679c\u56fe\n\n\n\u4e0b\u9762\u662f\u4e00\u4e9b\u6548\u679c\u56fe\uff0c\u5df2\u7ecf\u7528\u5728\u4e86\u6211\u65e5\u5e38\u7684\u76d1\u63a7\u4e0a\uff0c\u4f7f\u7528ajax\u5168\u7a0b\u9875\u9762\u65e0\u8df3\u8f6c",
            "title": "1.\u4f7f\u7528Django\u76d1\u63a7Oracle TOP SQL \u4ecb\u7ecd"
        },
        {
            "location": "/1.1/#djangooracle-top-sql",
            "text": "2017-12-04 Python \u5b85\u5fc5\u5907  \u524d\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528Python\u642d\u5efa\u4e00\u4e2a\u7f51\u7ad9\u5e76\u4e14\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u5176\u4e2d\u6267\u884cOracle\u547d\u4ee4\u5e76\u5728\u524d\u7aef\u663e\u793a\u51fa\u6765   \u7136\u540e\u8bb2\u8ff0\u81ea\u5b9a\u4e49\u547d\u4ee4\u76f8\u5173\u7684\u77e5\u8bc6  \u7cbe\u5f69\u5185\u5bb9\u53ef\u901a\u8fc7\u516c\u4f17\u53f7\u81ea\u5b9a\u4e49\u83dc\u5355\u67e5\u770b\u4e5f\u53ef\u76f4\u63a5\u67e5\u770b\u6211\u7684\u7f51\u7ad9  http://www.zhaibibei.cn/oms/1.1/  http://www.zhaibibei.cn/oms/2.1/  http://www.zhaibibei.cn/oms/3.1/  \u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528Django\u83b7\u53d6\u6570\u636e\u5e93\u7684\u4fe1\u606f  \u63a5\u4e0b\u6765\u6211\u4eec\u8bf4\u7684\u662f\u5982\u4f55\u901a\u8fc7Django\u521b\u5efa\u7684\u7f51\u7ad9\u6765\u76d1\u63a7Oracle\u7684TOP SQL  \u6ce8\u610f\u4e8b\u9879  \u524d\u9762\u7684\u5185\u5bb9\u6211\u4f7f\u7528\u7684\u662fCentOS 6.8+ Python 2.7 \u7684\u73af\u5883  \u4ece\u8fd9\u671f\u5f00\u59cb\u5df2\u7ecf\u6539\u6210\u4e86CentOS 7 +Python 3.6 \u7684\u73af\u5883  \u5173\u4e8e\u5982\u4f55\u8fc1\u79fb\u5c06\u5728\u540e\u9762\u4ecb\u7ecd",
            "title": "\u4f7f\u7528Django\u76d1\u63a7Oracle TOP SQL \u4ecb\u7ecd"
        },
        {
            "location": "/1.1/#1",
            "text": "\u6211\u4eec\u9488\u5bf9TOP SQL \u8fd9\u4e2a\u76d1\u63a7\u6a21\u5757\u7684\u4e3b\u8981\u6709\u5982\u4f55\u6d41\u7a0b     \u9996\u5148\u6bcf\u5c0f\u65f6\u6293\u53d6v$sqlarea\u89c6\u56fe\u7684SQL \u6570\u636e\uff0c\u5305\u62ec\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\uff0cCPU \u65f6\u95f4\u7b49    \u7136\u540e\u5c06\u6293\u5230\u7684\u6570\u636e\u5b58\u5165MySQL\u6570\u636e\u5e93    \u63a5\u4e0b\u6765\u4f7f\u7528Django\u8bfb\u53d6MySQL\u6570\u636e\u5e93\u91cc\u9762\u7684\u6570\u636e    \u7528pandas\u5c06\u83b7\u53d6\u5230\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u4e3b\u8981\u4e3a\u5bf9\u4e24\u4e2a\u65f6\u95f4\u70b9\u7684\u6027\u80fd\u6570\u636e\u8fdb\u884c\u5dee\u503c\u8ba1\u7b97\uff0c\u7136\u540e\u8fdb\u884c\u6392\u5e8f\u5f97\u51faTOP SQL \u8bed\u53e5    \u6700\u540e\u5c06\u5904\u7406\u8fc7\u7684\u6570\u636e\u901a\u8fc7highchats \u5728\u524d\u7aef\u663e\u793a    \u63a5\u4e0b\u6765\u7684\u51e0\u5929\u6211\u5c06\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u505a\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u8c22\u8c22",
            "title": "1.\u6574\u4f53\u6d41\u7a0b\u56fe"
        },
        {
            "location": "/1.1/#2",
            "text": "\u4e0b\u9762\u662f\u4e00\u4e9b\u6548\u679c\u56fe\uff0c\u5df2\u7ecf\u7528\u5728\u4e86\u6211\u65e5\u5e38\u7684\u76d1\u63a7\u4e0a\uff0c\u4f7f\u7528ajax\u5168\u7a0b\u9875\u9762\u65e0\u8df3\u8f6c",
            "title": "2. \u4e00\u4e9b\u6548\u679c\u56fe"
        },
        {
            "location": "/1.2/",
            "text": "\u4f7f\u7528Django\u83b7\u53d6Oracle TOP SQL\u6570\u636e\u5e76\u5b58\u5165MySQL\u6570\u636e\u5e93\n\n\n2017-12-05 Python \u5b85\u5fc5\u5907\n\n\n\u524d\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528Python\u642d\u5efa\u4e00\u4e2a\u7f51\u7ad9\u5e76\u4e14\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u5176\u4e2d\u6267\u884cOracle\u547d\u4ee4\u5e76\u5728\u524d\u7aef\u663e\u793a\u51fa\u6765 \n\u7136\u540e\u8bb2\u8ff0\u81ea\u5b9a\u4e49\u547d\u4ee4\u76f8\u5173\u7684\u77e5\u8bc6\n\n\n\u7cbe\u5f69\u5185\u5bb9\u53ef\u901a\u8fc7\u516c\u4f17\u53f7\u81ea\u5b9a\u4e49\u83dc\u5355\u67e5\u770b\u4e5f\u53ef\u76f4\u63a5\u67e5\u770b\u6211\u7684\u7f51\u7ad9\n\n\nhttp://www.zhaibibei.cn/oms/1.1/\n\n\nhttp://www.zhaibibei.cn/oms/2.1/\n\n\nhttp://www.zhaibibei.cn/oms/3.1/\n\n\n\u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528Django\u83b7\u53d6\u6570\u636e\u5e93\u7684\u4fe1\u606f \n\u63a5\u4e0b\u6765\u6211\u4eec\u8bf4\u7684\u662f\u5982\u4f55\u901a\u8fc7Django\u521b\u5efa\u7684\u7f51\u7ad9\u6765\u76d1\u63a7Oracle\u7684TOP SQL\n\n\n\u6ce8\u610f\u4e8b\u9879\n\n\n\u524d\u9762\u7684\u5185\u5bb9\u6211\u4f7f\u7528\u7684\u662fCentOS 6.8+ Python 2.7 \u7684\u73af\u5883 \n\n\n\u4ece\u8fd9\u671f\u5f00\u59cb\u5df2\u7ecf\u6539\u6210\u4e86CentOS 7 +Python 3.6 \u7684\u73af\u5883 \n\n\n\u5173\u4e8e\u5982\u4f55\u8fc1\u79fb\u5c06\u5728\u540e\u9762\u4ecb\u7ecd\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms\n\n\n\u4e0a\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u65b0\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u547d\u4ee4\uff0c\u8fd9\u8282\u8bb2\u8ff0\u5982\u4f55\u4f7f\u7528\u5176\u83b7\u53d6Oracle\u5e38\u89c1\u7684\u6027\u80fd\u6307\u6807\uff0c\u5982\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\uff0cCPU Time,\u7b49\u5f85\u4e8b\u4ef6\u7b49\u5e76\u4fdd\u5b58\u5728MySQL\u6570\u636e\u5e93\u4e2d\n\n\n1. \u65b0\u5efaMySQL\u8868\u5b58\u653e\u76d1\u63a7\u6570\u636e\n\n\n\u6211\u4eec\u65e5\u5e38\u5728\u8fd0\u7ef4Oracle\u6570\u636e\u5e93\u65f6\u6709\u5f88\u591a\u6307\u6807\u9700\u8981\u8003\u8651\n\n\n\u8fd9\u91cc\u6211\u6311\u9009\u4e86\u4e00\u4e9b\u65e5\u5e38\u68c0\u67e5\u7684\u9879\u76ee\n\n\n\n\n\n\n\u7269\u7406\u8bfb:oracle_diskreads\n\n\n\n\n\n\n\u903b\u8f91\u8bfb:oracle_buffergets\n\n\n\n\n\n\n\u6267\u884c\u65f6\u95f4:oracle_elapsedtime\n\n\n\n\n\n\nCPU \u65f6\u95f4:oracle_cputime\n\n\n\n\n\n\nTOP\u7b49\u5f85\u4e8b\u4ef6:oracle_topevent\n\n\n\n\n\n\n1.1 \u6dfb\u52a0models\n\n\n\u8fd9\u91cc\u5217\u51fa\u6765\u51e0\u4e2a\u8868\u7684\u521b\u5efa\uff0c\u5168\u90e8\u4ee3\u7801\u8bf7\u67e5\u770b\u6211\u7684github\u4e3b\u9875\n\n\n\u6ce8\u610f\u8fd9\u91cc\u4e0d\u540c\u4e8ePython2.7\u7248\u672c\uff0c\u539f\u6765\u7684\nunicode\n\u5728\u8fd9\u91cc\u4f7f\u7528\nstr\n\n\nvim models.py\n\n\n\nclass oracle_diskreads(models.Model):\n\n    ipaddress=models.GenericIPAddressField()\n\n    tnsname=models.CharField(max_length=50)\n\n    sql_time=models.BigIntegerField(blank=True)\n\n    sql_id=models.CharField(max_length=50)\n\n    disk_reads=models.BigIntegerField(blank=True)\n\n    executions=models.BigIntegerField(blank=True)\n\n    cpu_time=models.BigIntegerField(blank=True,null=True)\n\n    elapsed_time=models.BigIntegerField(blank=True,null=True)\n\n    module=models.CharField(max_length=65,null=True)\n\n    sql_text=models.CharField(max_length=1000)\n\n    def __str__(self):\n\n        return self.tnsname\n\n    class Meta:\n\n        app_label='monitor'\n\n\n\n\nclass oracle_topevent(models.Model):\n\n    ipaddress=models.GenericIPAddressField()\n\n    tnsname=models.CharField(max_length=50)\n\n    sql_time=models.CharField(max_length=100)\n\n    event_name=models.CharField(max_length=100)\n\n    total_waits=models.BigIntegerField(blank=True)\n\n    total_timeouts=models.BigIntegerField(blank=True)\n\n    wait_time=models.BigIntegerField(blank=True)\n\n    def __str__(self):\n\n        return self.tnsname\n\n    class Meta:\n\n        app_label='monitor'\n\n\n\n\n1.2 \u521b\u5efa\u6570\u636e\u5e93\u8868\n\n\n[oms@LProAP-MONITOR1 mysite]$ python manage.py  makemigrations\n\n[oms@LProAP-MONITOR1 mysite]$ python manage.py  migrate\n\n\n\n\n1.3 \u6dfb\u52a0\u81f3admin\u7ba1\u7406\n\n\nvim admin.py\n\nfrom django.contrib import admin\n\n# Register your models here.\n\nfrom monitor.models import oraclelist\nfrom monitor.models import oraclestatus\nfrom monitor.models import oracle_buffergets\nfrom monitor.models import oracle_diskreads\nfrom monitor.models import oracle_elapsedtime\nfrom monitor.models import oracle_cputime\nfrom monitor.models import oracle_topevent\nfrom monitor.models import linuxlist\n\n\nadmin.site.register(oraclelist)\nadmin.site.register(oraclestatus)\nadmin.site.register(oracle_buffergets)\nadmin.site.register(oracle_diskreads)\nadmin.site.register(oracle_elapsedtime)\nadmin.site.register(oracle_cputime)\nadmin.site.register(oracle_topevent)\nadmin.site.register(linuxlist)\n\n\n\n\n\n\n\u4ee5\u4e0a\u5c31\u5b8c\u6210\u4e86\u8868\u7684\u521b\u5efa\uff0c\u4e00\u4e9b\u5b57\u6bb5\u7684\u89e3\u91ca\u5982\u4e0b:\n\n\n\n\n\n\nipaddress:Oracle\u6570\u636e\u5e93\u7684IP\u5730\u5740\n\n\n\n\n\n\ntnsname:Oracle\u6570\u636e\u5e93\u7684TNS\u540d\u79f0\n\n\n\n\n\n\nsql_time:\u8be5\u8bed\u53e5\u83b7\u53d6\u5230\u7684\u65f6\u95f4\n\n\n\n\n\n\nsql_id:Oracle SQL\u8bed\u53e5\u7684SQL ID,\u7531\u4e8e\u6211\u8fd9\u67099i\u7684\u5e93\uff0c\u6240\u4ee5\u5b9e\u9645\u635e\u53d6\u7684\u662fhash_value\u7684\u503c\n\n\n\n\n\n\nexecutions:Oracle SQL \u8bed\u53e5\u7684\u6267\u884c\u6b21\u6570\n\n\n\n\n\n\nelapsed_time:Oracle SQL \u8bed\u53e5\u6267\u884c\u7684\u65f6\u95f4\n\n\n\n\n\n\nmodule:Oracle SQL \u8bed\u53e5\u6267\u884c\u7684\u6a21\u5757\n\n\n\n\n\n\nsql_text:Oracle SQL \u8bed\u53e5\u7684\u6587\u672c(\u8fd9\u91cc\u4ece\u7a7a\u95f4\u7a7a\u95f4\u8003\u8651\uff0c\u53ea\u622a\u53d6\u524d40\u4e2a\u5b57\u7b26)\n\n\n\n\n\n\nevent_name:\u7b49\u5f85\u4e8b\u4ef6\u7684\u540d\u79f0\n\n\n\n\n\n\ntotal_waits:\u7b49\u5f85\u4e8b\u4ef6\u7b49\u5f85\u7684\u6b21\u6570\n\n\n\n\n\n\ntotal_timeouts:\u7b49\u5f85\u4e8b\u4ef6\u8d85\u65f6\u6b21\u6570\n\n\n\n\n\n\nwait_time:\u7b49\u5f85\u4e8b\u4ef6\u7b49\u5f85\u7684\u65f6\u95f4\n\n\n\n\n\n\n2. \u7f16\u5199\u81ea\u5b9a\u4e49\u547d\u4ee4\u83b7\u53d6\u6307\u6807\u5e76\u5b58\u5165\u6570\u636e\u5e93\n\n\n\u5982\u4f55\u521b\u5efa\u81ea\u5b9a\u4e49\u547d\u4ee4\u8bf7\u53c2\u8003:\n\n\nhttp://www.zhaibibei.cn/oms/3.1/\n\n\n2.1 \u4e3b\u4f53\u7a0b\u5e8f\n\n\n\u8fd9\u91cc\u6211\u4eec\u7528oracle_topsql_mysql.py\u7a0b\u5e8f\u6765\u83b7\u53d6Oracle TOP SQL\n\n\nvim monitor/management/commands/oracle_topsql_mysql.py\n\n\n#coding=utf-8\nfrom django.core.management.base import BaseCommand\nfrom django.contrib.contenttypes.models import ContentType\nimport os\nimport cx_Oracle\nimport time\nfrom monitor.command.sendmail_phone import *\nfrom monitor.command.getoracleinfo_topsql import *\nclass Command(BaseCommand):\n    def handle(self, *args, **options):\n        ip=oraclelist.objects.all().order_by('tnsname')\n        #sql_time=str(time.time()).split('.')[0]\n        sql_time=str(time.mktime(time.strptime(time.strftime('%Y%m%d %H', time.localtime()),'%Y%m%d %H'))).split('.')[0]\n        for i in ip:\n                ipaddress1=i.ipaddress\n                username=i.username\n                password=i.password\n                port=i.port\n                tnsname1=i.tnsname\n                try:\n                    db = cx_Oracle.connect(username+'/'+password+'@'+ipaddress1+':'+port+'/'+tnsname1 ,mode=cx_Oracle.SYSDBA)\n                    cursor = db.cursor()\n                    buffergets=getbuffergets(cursor)\n                    cputime=getcputime(cursor)\n                    topevent1=gettopevent(cursor)\n                    cursor.close()\n                    db.close()\n                    for j in buffergets:\n                        sql_id=j[0]\n                        buffer_gets=j[1]\n                        executions=j[2]\n                        cpu_time=j[3]\n                        sql_text=j[6]\n                        insert.save()\n                    #print ('ss')\n\n                        disk_reads=k[1]\n                        executions=k[2]\n                        cpu_time=k[3]\n                        elapsed_time=k[4]\n                        module=k[5]\n                        sql_text=k[6]\n                        insert=oracle_diskreads(ipaddress=ipaddress1,tnsname=tnsname1,sql_time=sql_time,sql_id=sql_id,cpu_time=cpu_time,elapsed_time=elapsed_time,executions=executions,disk_reads=disk_reads,module=module,sql_text=sql_text)\n                        insert.save()\n\n                    for l in elapsedtime:\n                        sql_id=l[0]\n                        executions=l[2]\n                        cpu_time=l[3]\n                        elapsed_time=l[1]\n                        module=l[4]\n                        sql_text=l[5]\n                        insert=oracle_elapsedtime(ipaddress=ipaddress1,tnsname=tnsname1,sql_time=sql_time,sql_id=sql_id,cpu_time=cpu_time,elapsed_time=elapsed_time,executions=executions,module=module,sql_text=sql_text)\n                        insert.save()\n\n                    for m in cputime:\n                        sql_id=m[0]\n                        executions=m[2]\n                        cpu_time=m[1]\n                        elapsed_time=m[3]\n                        module=m[4]\n                        sql_text=m[5]\n                        insert=oracle_cputime(ipaddress=ipaddress1,tnsname=tnsname1,sql_time=sql_time,sql_id=sql_id,cpu_time=cpu_time,elapsed_time=elapsed_time,executions=executions,module=module,sql_text=sql_text)\n                        insert.save()\n                    for n in topevent1:\n                        event_name=n[0]\n                        total_waits=n[1]\n                        total_timeouts=n[2]\n                        wait_time=n[3]\n                        insert=oracle_topevent(ipaddress=ipaddress1,tnsname=tnsname1,sql_time=sql_time,event_name=event_name,total_waits=total_waits,total_timeouts=total_timeouts,wait_time=wait_time)\n                        insert.save()\n\n                except Exception as e:\n                    content= (i.ipaddress+' is Unreachable,The reason is '+str(e)).strip()\n                    send_mail_phone(to_list,'Oracle Performance Monitor Exception Occured',content)\n                    print( content)\n\n\n\n\n\n2.2 \u8c03\u7528\u7684\u51fd\u6570\n\n\n\u4e0a\u9762\u4e3b\u4f53\u7a0b\u5e8f\u8c03\u7528\u4e86\u4e00\u4e9b\u51fd\u6570\u7528\u4e8e\u4eceOracle\u6570\u636e\u5e93\u83b7\u53d6\u5fc5\u8981\u7684\u6570\u636e\n\n\n\u6587\u4ef6\u8def\u5f84\u4e3amonitor/command/getoracleinfo_topsql.py\n\n\n\u8fd9\u91cc\u9009\u53d6\u51e0\u4e2a\uff0c\u5177\u4f53\u7684\u53c2\u89c1\u6211\u7684github\u4e3b\u9875,\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574\n\n\ndef getbuffergets(cursor):\n\n    s=cursor.execute('select hash_value, abs(buffer_gets),abs(executions) ,abs(cpu_time),abs(elapsed_time),module,substr(sql_text,0,40) from v$sqlarea where abs(buffer_gets)>100000')\n\n    row=s.fetchall()\n\n    return row\n\n\n\n\ndef getdiskreads(cursor):\n\n    s=cursor.execute('select hash_value, abs(disk_reads),abs(executions) ,abs(cpu_time),abs(elapsed_time),module,substr(sql_text,0,40) from v$sqlarea where abs(disk_reads)>100000')\n\n    row=s.fetchall()\n\n    return row\n\n\n\n\ndef gettopevent(cursor):\n\n    s=cursor.execute('select event,abs(total_waits),abs(total_timeouts),abs(time_waited) from v$system_event')\n\n    row=s.fetchall()\n\n    return row\n\n\n\n\n\u8fd9\u4e2a\u7a0b\u5e8f\u8bb2\u89e3\u5982\u4e0b:\n\n\n\n\n\n\n\u5148\u4eceoraclelist\u8868\u4e2d\u83b7\u53d6\u4fe1\u606f\n\n\n\n\n\n\n\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u6570\u636e\u5e93\uff0c\u5f53monitor_type\u4e3a1\u548cperformance_type\u4e3a1\u65f6\u7ee7\u7eed\n\n\n\n\n\n\n\u5229\u7528\u53d6\u51fa\u6765\u7684\u4fe1\u606f\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u5f53\u8fde\u63a5\u6210\u529f\u540e\u6267\u884c\u76f8\u5e94\u7684\u7a0b\u5e8f\u83b7\u53d6TOP SQL\u6570\u636e\uff0c\u83b7\u53d6\u5b8c\u6210\u540e\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\n\n\n\n\n\n\n\u63a5\u4e0b\u6765\u91c7\u7528insert/save\u65b9\u6cd5\u4fdd\u5b58\u5230MySQL\u6570\u636e\u5e93\u4e2d\n\n\n\n\n\n\n2.3 \u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n\n\n\u7531\u4e8e\u6211\u67099i\u7684\u5e93\uff0c\u6240\u4ee5\u7edf\u4e00\u6293\u53d6hash_value\n\n\n\n\n\n\n\u5404\u4e2a\u51fd\u6570\u7684\u5185\u5bb9\u8bf7\u81ea\u884c\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\n\n\n\n\n\n\n\u7531\u4e8e\u51fa\u73b0\u8fc7\u8d1f\u6570\u7684\u60c5\u51b5\u6240\u4ee5\u91c7\u7528\u4e86abs\u51fd\u6570\n\n\n\n\n\n\n\u8fd9\u91cc\u8c03\u7528\u4e86send_mail\u51fd\u6570\u7528\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u5f02\u5e38\u65f6\u901a\u77e5\u6211\n\n\n\n\n\n\n3. \u6700\u7ec8\u7ed3\u679c\n\n\n\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fd0\u884c\n\n\n/usr/bin/python  /home/oms/mysite/manage.py oracle_topsql_mysql \n\n\n\n\n\n\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\u6570\u636e\u5e93\u7684\u4fe1\u606f\u5df2\u7ecf\u4fdd\u5b58\u5728MySQL\u6570\u636e\u5e93\u4e2d\u4e86\n\n\n4. \u8bbe\u7f6e\u81ea\u52a8\u8fd0\u884c\n\n\n\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u6bcf\u5c0f\u65f6\u6267\u884c\u4e00\u6b21\uff0c\u5e76\u91cd\u5b9a\u5411\u6240\u6709\u65e5\u5fd7\u81f3\u4e00\u4e2a\u6587\u4ef6\n\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u8be5\u65e5\u5fd7\u6587\u4ef6\u5224\u65ad\u811a\u672c\u662f\u5426\u6b63\u5e38\u8fd0\u884c\n\n\n0   *   *   *   *   /usr/bin/python  /home/oms/mysite/manage.py oracle_topsql_mysql  >>/home/oms/mysite/crontab.log  2>&1\n\n\n\n\n5. \u6e90\u4ee3\u7801\u4f4d\u7f6e\n\n\nhttps://github.com/bsbforever/oms_django\n\n\n\u597d\u4e86\uff0c\u8fd9\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528\u81ea\u5b9a\u4e49\u547d\u4ee4\u83b7\u53d6Oracle\u6570\u636e\u5e93\u7684\u6027\u80fd\u6307\u6807\u5e76\u4fdd\u5b58\u5728MySQL\u6570\u636e\u5e93\u4e2d\n\n\n\u4e0b\u8282\u4ecb\u7ecd\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u5c55\u793a\u5728\u4e00\u4e2a\u9875\u9762\u4e0a\n\n\n\u8be6\u7ec6\u8bf7\u70b9\u51fb\u9605\u8bfb\u539f\u6587:",
            "title": "2.\u4f7f\u7528Django\u83b7\u53d6Oracle TOP SQL\u6570\u636e\u5e76\u5b58\u5165MySQL\u6570\u636e\u5e93"
        },
        {
            "location": "/1.2/#djangooracle-top-sqlmysql",
            "text": "2017-12-05 Python \u5b85\u5fc5\u5907  \u524d\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528Python\u642d\u5efa\u4e00\u4e2a\u7f51\u7ad9\u5e76\u4e14\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u5176\u4e2d\u6267\u884cOracle\u547d\u4ee4\u5e76\u5728\u524d\u7aef\u663e\u793a\u51fa\u6765 \n\u7136\u540e\u8bb2\u8ff0\u81ea\u5b9a\u4e49\u547d\u4ee4\u76f8\u5173\u7684\u77e5\u8bc6  \u7cbe\u5f69\u5185\u5bb9\u53ef\u901a\u8fc7\u516c\u4f17\u53f7\u81ea\u5b9a\u4e49\u83dc\u5355\u67e5\u770b\u4e5f\u53ef\u76f4\u63a5\u67e5\u770b\u6211\u7684\u7f51\u7ad9  http://www.zhaibibei.cn/oms/1.1/  http://www.zhaibibei.cn/oms/2.1/  http://www.zhaibibei.cn/oms/3.1/  \u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528Django\u83b7\u53d6\u6570\u636e\u5e93\u7684\u4fe1\u606f \n\u63a5\u4e0b\u6765\u6211\u4eec\u8bf4\u7684\u662f\u5982\u4f55\u901a\u8fc7Django\u521b\u5efa\u7684\u7f51\u7ad9\u6765\u76d1\u63a7Oracle\u7684TOP SQL  \u6ce8\u610f\u4e8b\u9879  \u524d\u9762\u7684\u5185\u5bb9\u6211\u4f7f\u7528\u7684\u662fCentOS 6.8+ Python 2.7 \u7684\u73af\u5883   \u4ece\u8fd9\u671f\u5f00\u59cb\u5df2\u7ecf\u6539\u6210\u4e86CentOS 7 +Python 3.6 \u7684\u73af\u5883   \u5173\u4e8e\u5982\u4f55\u8fc1\u79fb\u5c06\u5728\u540e\u9762\u4ecb\u7ecd  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms  \u4e0a\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u65b0\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u547d\u4ee4\uff0c\u8fd9\u8282\u8bb2\u8ff0\u5982\u4f55\u4f7f\u7528\u5176\u83b7\u53d6Oracle\u5e38\u89c1\u7684\u6027\u80fd\u6307\u6807\uff0c\u5982\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\uff0cCPU Time,\u7b49\u5f85\u4e8b\u4ef6\u7b49\u5e76\u4fdd\u5b58\u5728MySQL\u6570\u636e\u5e93\u4e2d",
            "title": "\u4f7f\u7528Django\u83b7\u53d6Oracle TOP SQL\u6570\u636e\u5e76\u5b58\u5165MySQL\u6570\u636e\u5e93"
        },
        {
            "location": "/1.2/#1-mysql",
            "text": "\u6211\u4eec\u65e5\u5e38\u5728\u8fd0\u7ef4Oracle\u6570\u636e\u5e93\u65f6\u6709\u5f88\u591a\u6307\u6807\u9700\u8981\u8003\u8651  \u8fd9\u91cc\u6211\u6311\u9009\u4e86\u4e00\u4e9b\u65e5\u5e38\u68c0\u67e5\u7684\u9879\u76ee    \u7269\u7406\u8bfb:oracle_diskreads    \u903b\u8f91\u8bfb:oracle_buffergets    \u6267\u884c\u65f6\u95f4:oracle_elapsedtime    CPU \u65f6\u95f4:oracle_cputime    TOP\u7b49\u5f85\u4e8b\u4ef6:oracle_topevent",
            "title": "1. \u65b0\u5efaMySQL\u8868\u5b58\u653e\u76d1\u63a7\u6570\u636e"
        },
        {
            "location": "/1.2/#11-models",
            "text": "\u8fd9\u91cc\u5217\u51fa\u6765\u51e0\u4e2a\u8868\u7684\u521b\u5efa\uff0c\u5168\u90e8\u4ee3\u7801\u8bf7\u67e5\u770b\u6211\u7684github\u4e3b\u9875  \u6ce8\u610f\u8fd9\u91cc\u4e0d\u540c\u4e8ePython2.7\u7248\u672c\uff0c\u539f\u6765\u7684 unicode \u5728\u8fd9\u91cc\u4f7f\u7528 str  vim models.py\n\n\n\nclass oracle_diskreads(models.Model):\n\n    ipaddress=models.GenericIPAddressField()\n\n    tnsname=models.CharField(max_length=50)\n\n    sql_time=models.BigIntegerField(blank=True)\n\n    sql_id=models.CharField(max_length=50)\n\n    disk_reads=models.BigIntegerField(blank=True)\n\n    executions=models.BigIntegerField(blank=True)\n\n    cpu_time=models.BigIntegerField(blank=True,null=True)\n\n    elapsed_time=models.BigIntegerField(blank=True,null=True)\n\n    module=models.CharField(max_length=65,null=True)\n\n    sql_text=models.CharField(max_length=1000)\n\n    def __str__(self):\n\n        return self.tnsname\n\n    class Meta:\n\n        app_label='monitor'  class oracle_topevent(models.Model):\n\n    ipaddress=models.GenericIPAddressField()\n\n    tnsname=models.CharField(max_length=50)\n\n    sql_time=models.CharField(max_length=100)\n\n    event_name=models.CharField(max_length=100)\n\n    total_waits=models.BigIntegerField(blank=True)\n\n    total_timeouts=models.BigIntegerField(blank=True)\n\n    wait_time=models.BigIntegerField(blank=True)\n\n    def __str__(self):\n\n        return self.tnsname\n\n    class Meta:\n\n        app_label='monitor'",
            "title": "1.1 \u6dfb\u52a0models"
        },
        {
            "location": "/1.2/#12",
            "text": "[oms@LProAP-MONITOR1 mysite]$ python manage.py  makemigrations\n\n[oms@LProAP-MONITOR1 mysite]$ python manage.py  migrate",
            "title": "1.2 \u521b\u5efa\u6570\u636e\u5e93\u8868"
        },
        {
            "location": "/1.2/#13-admin",
            "text": "vim admin.py\n\nfrom django.contrib import admin\n\n# Register your models here.\n\nfrom monitor.models import oraclelist\nfrom monitor.models import oraclestatus\nfrom monitor.models import oracle_buffergets\nfrom monitor.models import oracle_diskreads\nfrom monitor.models import oracle_elapsedtime\nfrom monitor.models import oracle_cputime\nfrom monitor.models import oracle_topevent\nfrom monitor.models import linuxlist\n\n\nadmin.site.register(oraclelist)\nadmin.site.register(oraclestatus)\nadmin.site.register(oracle_buffergets)\nadmin.site.register(oracle_diskreads)\nadmin.site.register(oracle_elapsedtime)\nadmin.site.register(oracle_cputime)\nadmin.site.register(oracle_topevent)\nadmin.site.register(linuxlist)   \u4ee5\u4e0a\u5c31\u5b8c\u6210\u4e86\u8868\u7684\u521b\u5efa\uff0c\u4e00\u4e9b\u5b57\u6bb5\u7684\u89e3\u91ca\u5982\u4e0b:    ipaddress:Oracle\u6570\u636e\u5e93\u7684IP\u5730\u5740    tnsname:Oracle\u6570\u636e\u5e93\u7684TNS\u540d\u79f0    sql_time:\u8be5\u8bed\u53e5\u83b7\u53d6\u5230\u7684\u65f6\u95f4    sql_id:Oracle SQL\u8bed\u53e5\u7684SQL ID,\u7531\u4e8e\u6211\u8fd9\u67099i\u7684\u5e93\uff0c\u6240\u4ee5\u5b9e\u9645\u635e\u53d6\u7684\u662fhash_value\u7684\u503c    executions:Oracle SQL \u8bed\u53e5\u7684\u6267\u884c\u6b21\u6570    elapsed_time:Oracle SQL \u8bed\u53e5\u6267\u884c\u7684\u65f6\u95f4    module:Oracle SQL \u8bed\u53e5\u6267\u884c\u7684\u6a21\u5757    sql_text:Oracle SQL \u8bed\u53e5\u7684\u6587\u672c(\u8fd9\u91cc\u4ece\u7a7a\u95f4\u7a7a\u95f4\u8003\u8651\uff0c\u53ea\u622a\u53d6\u524d40\u4e2a\u5b57\u7b26)    event_name:\u7b49\u5f85\u4e8b\u4ef6\u7684\u540d\u79f0    total_waits:\u7b49\u5f85\u4e8b\u4ef6\u7b49\u5f85\u7684\u6b21\u6570    total_timeouts:\u7b49\u5f85\u4e8b\u4ef6\u8d85\u65f6\u6b21\u6570    wait_time:\u7b49\u5f85\u4e8b\u4ef6\u7b49\u5f85\u7684\u65f6\u95f4",
            "title": "1.3 \u6dfb\u52a0\u81f3admin\u7ba1\u7406"
        },
        {
            "location": "/1.2/#2",
            "text": "\u5982\u4f55\u521b\u5efa\u81ea\u5b9a\u4e49\u547d\u4ee4\u8bf7\u53c2\u8003:  http://www.zhaibibei.cn/oms/3.1/",
            "title": "2. \u7f16\u5199\u81ea\u5b9a\u4e49\u547d\u4ee4\u83b7\u53d6\u6307\u6807\u5e76\u5b58\u5165\u6570\u636e\u5e93"
        },
        {
            "location": "/1.2/#21",
            "text": "\u8fd9\u91cc\u6211\u4eec\u7528oracle_topsql_mysql.py\u7a0b\u5e8f\u6765\u83b7\u53d6Oracle TOP SQL  vim monitor/management/commands/oracle_topsql_mysql.py\n\n\n#coding=utf-8\nfrom django.core.management.base import BaseCommand\nfrom django.contrib.contenttypes.models import ContentType\nimport os\nimport cx_Oracle\nimport time\nfrom monitor.command.sendmail_phone import *\nfrom monitor.command.getoracleinfo_topsql import *\nclass Command(BaseCommand):\n    def handle(self, *args, **options):\n        ip=oraclelist.objects.all().order_by('tnsname')\n        #sql_time=str(time.time()).split('.')[0]\n        sql_time=str(time.mktime(time.strptime(time.strftime('%Y%m%d %H', time.localtime()),'%Y%m%d %H'))).split('.')[0]\n        for i in ip:\n                ipaddress1=i.ipaddress\n                username=i.username\n                password=i.password\n                port=i.port\n                tnsname1=i.tnsname\n                try:\n                    db = cx_Oracle.connect(username+'/'+password+'@'+ipaddress1+':'+port+'/'+tnsname1 ,mode=cx_Oracle.SYSDBA)\n                    cursor = db.cursor()\n                    buffergets=getbuffergets(cursor)\n                    cputime=getcputime(cursor)\n                    topevent1=gettopevent(cursor)\n                    cursor.close()\n                    db.close()\n                    for j in buffergets:\n                        sql_id=j[0]\n                        buffer_gets=j[1]\n                        executions=j[2]\n                        cpu_time=j[3]\n                        sql_text=j[6]\n                        insert.save()\n                    #print ('ss')\n\n                        disk_reads=k[1]\n                        executions=k[2]\n                        cpu_time=k[3]\n                        elapsed_time=k[4]\n                        module=k[5]\n                        sql_text=k[6]\n                        insert=oracle_diskreads(ipaddress=ipaddress1,tnsname=tnsname1,sql_time=sql_time,sql_id=sql_id,cpu_time=cpu_time,elapsed_time=elapsed_time,executions=executions,disk_reads=disk_reads,module=module,sql_text=sql_text)\n                        insert.save()\n\n                    for l in elapsedtime:\n                        sql_id=l[0]\n                        executions=l[2]\n                        cpu_time=l[3]\n                        elapsed_time=l[1]\n                        module=l[4]\n                        sql_text=l[5]\n                        insert=oracle_elapsedtime(ipaddress=ipaddress1,tnsname=tnsname1,sql_time=sql_time,sql_id=sql_id,cpu_time=cpu_time,elapsed_time=elapsed_time,executions=executions,module=module,sql_text=sql_text)\n                        insert.save()\n\n                    for m in cputime:\n                        sql_id=m[0]\n                        executions=m[2]\n                        cpu_time=m[1]\n                        elapsed_time=m[3]\n                        module=m[4]\n                        sql_text=m[5]\n                        insert=oracle_cputime(ipaddress=ipaddress1,tnsname=tnsname1,sql_time=sql_time,sql_id=sql_id,cpu_time=cpu_time,elapsed_time=elapsed_time,executions=executions,module=module,sql_text=sql_text)\n                        insert.save()\n                    for n in topevent1:\n                        event_name=n[0]\n                        total_waits=n[1]\n                        total_timeouts=n[2]\n                        wait_time=n[3]\n                        insert=oracle_topevent(ipaddress=ipaddress1,tnsname=tnsname1,sql_time=sql_time,event_name=event_name,total_waits=total_waits,total_timeouts=total_timeouts,wait_time=wait_time)\n                        insert.save()\n\n                except Exception as e:\n                    content= (i.ipaddress+' is Unreachable,The reason is '+str(e)).strip()\n                    send_mail_phone(to_list,'Oracle Performance Monitor Exception Occured',content)\n                    print( content)",
            "title": "2.1 \u4e3b\u4f53\u7a0b\u5e8f"
        },
        {
            "location": "/1.2/#22",
            "text": "\u4e0a\u9762\u4e3b\u4f53\u7a0b\u5e8f\u8c03\u7528\u4e86\u4e00\u4e9b\u51fd\u6570\u7528\u4e8e\u4eceOracle\u6570\u636e\u5e93\u83b7\u53d6\u5fc5\u8981\u7684\u6570\u636e  \u6587\u4ef6\u8def\u5f84\u4e3amonitor/command/getoracleinfo_topsql.py  \u8fd9\u91cc\u9009\u53d6\u51e0\u4e2a\uff0c\u5177\u4f53\u7684\u53c2\u89c1\u6211\u7684github\u4e3b\u9875,\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574  def getbuffergets(cursor):\n\n    s=cursor.execute('select hash_value, abs(buffer_gets),abs(executions) ,abs(cpu_time),abs(elapsed_time),module,substr(sql_text,0,40) from v$sqlarea where abs(buffer_gets)>100000')\n\n    row=s.fetchall()\n\n    return row  def getdiskreads(cursor):\n\n    s=cursor.execute('select hash_value, abs(disk_reads),abs(executions) ,abs(cpu_time),abs(elapsed_time),module,substr(sql_text,0,40) from v$sqlarea where abs(disk_reads)>100000')\n\n    row=s.fetchall()\n\n    return row  def gettopevent(cursor):\n\n    s=cursor.execute('select event,abs(total_waits),abs(total_timeouts),abs(time_waited) from v$system_event')\n\n    row=s.fetchall()\n\n    return row  \u8fd9\u4e2a\u7a0b\u5e8f\u8bb2\u89e3\u5982\u4e0b:    \u5148\u4eceoraclelist\u8868\u4e2d\u83b7\u53d6\u4fe1\u606f    \u7136\u540e\u904d\u5386\u6bcf\u4e2a\u6570\u636e\u5e93\uff0c\u5f53monitor_type\u4e3a1\u548cperformance_type\u4e3a1\u65f6\u7ee7\u7eed    \u5229\u7528\u53d6\u51fa\u6765\u7684\u4fe1\u606f\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u5f53\u8fde\u63a5\u6210\u529f\u540e\u6267\u884c\u76f8\u5e94\u7684\u7a0b\u5e8f\u83b7\u53d6TOP SQL\u6570\u636e\uff0c\u83b7\u53d6\u5b8c\u6210\u540e\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5    \u63a5\u4e0b\u6765\u91c7\u7528insert/save\u65b9\u6cd5\u4fdd\u5b58\u5230MySQL\u6570\u636e\u5e93\u4e2d",
            "title": "2.2 \u8c03\u7528\u7684\u51fd\u6570"
        },
        {
            "location": "/1.2/#23",
            "text": "\u7531\u4e8e\u6211\u67099i\u7684\u5e93\uff0c\u6240\u4ee5\u7edf\u4e00\u6293\u53d6hash_value    \u5404\u4e2a\u51fd\u6570\u7684\u5185\u5bb9\u8bf7\u81ea\u884c\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u5f88\u5bb9\u6613\u7406\u89e3    \u7531\u4e8e\u51fa\u73b0\u8fc7\u8d1f\u6570\u7684\u60c5\u51b5\u6240\u4ee5\u91c7\u7528\u4e86abs\u51fd\u6570    \u8fd9\u91cc\u8c03\u7528\u4e86send_mail\u51fd\u6570\u7528\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u5f02\u5e38\u65f6\u901a\u77e5\u6211",
            "title": "2.3 \u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879"
        },
        {
            "location": "/1.2/#3",
            "text": "\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fd0\u884c  /usr/bin/python  /home/oms/mysite/manage.py oracle_topsql_mysql      \u53ef\u4ee5\u770b\u51fa\u6570\u636e\u5e93\u7684\u4fe1\u606f\u5df2\u7ecf\u4fdd\u5b58\u5728MySQL\u6570\u636e\u5e93\u4e2d\u4e86",
            "title": "3. \u6700\u7ec8\u7ed3\u679c"
        },
        {
            "location": "/1.2/#4",
            "text": "\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u6bcf\u5c0f\u65f6\u6267\u884c\u4e00\u6b21\uff0c\u5e76\u91cd\u5b9a\u5411\u6240\u6709\u65e5\u5fd7\u81f3\u4e00\u4e2a\u6587\u4ef6  \u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u8be5\u65e5\u5fd7\u6587\u4ef6\u5224\u65ad\u811a\u672c\u662f\u5426\u6b63\u5e38\u8fd0\u884c  0   *   *   *   *   /usr/bin/python  /home/oms/mysite/manage.py oracle_topsql_mysql  >>/home/oms/mysite/crontab.log  2>&1",
            "title": "4. \u8bbe\u7f6e\u81ea\u52a8\u8fd0\u884c"
        },
        {
            "location": "/1.2/#5",
            "text": "https://github.com/bsbforever/oms_django  \u597d\u4e86\uff0c\u8fd9\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528\u81ea\u5b9a\u4e49\u547d\u4ee4\u83b7\u53d6Oracle\u6570\u636e\u5e93\u7684\u6027\u80fd\u6307\u6807\u5e76\u4fdd\u5b58\u5728MySQL\u6570\u636e\u5e93\u4e2d  \u4e0b\u8282\u4ecb\u7ecd\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u5c55\u793a\u5728\u4e00\u4e2a\u9875\u9762\u4e0a  \u8be6\u7ec6\u8bf7\u70b9\u51fb\u9605\u8bfb\u539f\u6587:",
            "title": "5. \u6e90\u4ee3\u7801\u4f4d\u7f6e"
        },
        {
            "location": "/1.3/",
            "text": "pandas\u548chighcharts\u4ecb\u7ecd\n\n\n2017-12-06 Python \u5b85\u5fc5\u5907\n\n\n\u524d\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528Python\u642d\u5efa\u4e00\u4e2a\u7f51\u7ad9\u5e76\u4e14\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u5176\u4e2d\u6267\u884cOracle\u547d\u4ee4\u5e76\u5728\u524d\u7aef\u663e\u793a\u51fa\u6765\n\n\n\u7136\u540e\u8bb2\u8ff0\u81ea\u5b9a\u4e49\u547d\u4ee4\u76f8\u5173\u7684\u77e5\u8bc6\n\n\n\u7cbe\u5f69\u5185\u5bb9\u53ef\u901a\u8fc7\u516c\u4f17\u53f7\u81ea\u5b9a\u4e49\u83dc\u5355\u67e5\u770b\u4e5f\u53ef\u76f4\u63a5\u67e5\u770b\u6211\u7684\u7f51\u7ad9\n\n\nhttp://www.zhaibibei.cn/oms/1.1/\n\n\nhttp://www.zhaibibei.cn/oms/2.1/\n\n\nhttp://www.zhaibibei.cn/oms/3.1/\n\n\n\u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528Django\u83b7\u53d6\u6570\u636e\u5e93\u7684\u4fe1\u606f\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8bf4\u7684\u662f\u5982\u4f55\u901a\u8fc7Django\u521b\u5efa\u7684\u7f51\u7ad9\u6765\u76d1\u63a7Oracle\u7684TOP SQL\n\n\n\u6ce8\u610f\u4e8b\u9879\n\n\n\u524d\u9762\u7684\u5185\u5bb9\u6211\u4f7f\u7528\u7684\u662fCentOS 6.8+ Python 2.7 \u7684\u73af\u5883 \n\n\n\u4ece\u8fd9\u671f\u5f00\u59cb\u5df2\u7ecf\u6539\u6210\u4e86CentOS 7 +Python 3.6 \u7684\u73af\u5883\n\n\n\u5173\u4e8e\u5982\u4f55\u8fc1\u79fb\u5c06\u5728\u540e\u9762\u4ecb\u7ecd\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms \n\n\n\u6570\u636e\u5904\u7406:pandas \n\n\n\u524d\u7aef\u5c55\u793a:highcharts\n\n\n\u4e0a\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06Oracle TOP SQL\u6570\u636e\u5b58\u5165\u6570\u636e\u5e93\n\n\n\u63a5\u4e0b\u6765\u662f\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u63d0\u53d6\u51fa\u6765\u7136\u540e\u8fdb\u884c\u5904\u7406\u6700\u540e\u5728\u524d\u7aef\u5c55\u793a\n\n\n\u9996\u5148\u4ecb\u7ecd\u51e0\u4e2a\u76f8\u5173\u7684\u6a21\u5757\u548c\u6846\u67b6\n\n\n1.pandas\n\n\n1.1 pandas\u4ecb\u7ecd\n\n\npandas\u662f\u4e00\u4e2a\u57fa\u4e8ePython\u7684\u5f00\u6e90\u7684BSD-licensed \u7684\u6570\u636e\u5206\u6790\u6a21\u5757\n\n\n\u4ed6\u63d0\u4f9b\u4e86\u65b0\u7684\u6570\u636e\u7ed3\u6784(series,dataframe)\u6765\u6ee1\u8db3\u6211\u4eec\u5404\u79cd\u5404\u6837\u7684\u9700\u6c42\uff0c\u800c\u6211\u4eec\u5c31\u4f7f\u7528\u5b83\u6765\u8fdb\u884c\u5206\u6790\n\n\n\u5b98\u65b9\u7f51\u7ad9\u4e3a:\n\n\nhttp://pandas.pydata.org/\n\n\n1.2 \u5982\u4f55\u5b89\u88c5\n\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528pip3\u6765\u5b89\u88c5pandas\u7528\u4e8e\u89e3\u51b3\u4f9d\u8d56\u95ee\u9898\n\n\n\u4f7f\u7528root\u7528\u6237\n\n\n[root@LProAP-MONITOR1 oms]# pip3 install pandas\n\n\n\n\n\n\n1.3 \u9a8c\u8bc1\u5b89\u88c5\n\n\n\u5982\u679cimport\u65e0\u62a5\u9519\u8868\u793apandas\u5b89\u88c5\u6210\u529f\n\n\n\n\n1.4 \u5982\u4f55\u5b66\u4e60\n\n\npandas\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u6df1\u5165\u4e86\u89e3\u53ef\u53c2\u8003\u5b98\u65b9\u6587\u6863\u6216\u8005\u76f8\u5173\u4e66\u7c4d\n\n\n\u4e66\u7c4d\u63a8\u8350\u5229\u7528Python\u8fdb\u884c\u6570\u636e\u5206\u6790\n\n\n\n\n\n\n2. highcharts\n\n\n2.1 highcharts\u4ecb\u7ecd\n\n\nhighcharts\u53ef\u4ee5\u5c06\u6ee1\u8db3\u5176\u8981\u6c42\u7684\u6570\u636e\u8f6c\u5316\u6210\u5404\u79cd\u56fe\u8868(\u6298\u7ebf\u56fe,\u67f1\u72b6\u56fe\u7b49)\u5728\u524d\u7aef\u663e\u793a\n\n\n\n\n\u5b83\u7684\u4f7f\u7528\u662f\u514d\u8d39\u7684\uff0c\u4f46\u5982\u679c\u7528\u4e8e\u76c8\u5229\u9700\u8981\u5546\u4e1a\u6388\u6743\n\n\n\u5b98\u65b9\u7f51\u7ad9:\n\n\nhttps://www.highcharts.com/\n\n\nhttps://www.hcharts.cn/\n\n\n2.2 \u5982\u4f55\u5b89\u88c5\n\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u4ed6\u7684\u4e2d\u6587\u7f51\u7ad9\u4e0b\u8f7d\n\n\nhttps://www.hcharts.cn/download\n\n\n\u4e0b\u8f7d\u5b8c\u6210\u540e\u653e\u5728django\u914d\u7f6e\u6587\u4ef6\u7684static_root\u53d8\u91cf\u7684\u76ee\u5f55\u4e0b\n\n\nvim mysite/mysite/settings.py\n\n\n\nSTATIC_ROOT = '/home/oms/mysite/monitor/static'\n\n\n\n\n\u7136\u540e\u5728template\u6a21\u677f\u4e2d\u5f15\u7528\n\n\n<script src=\"/static/highcharts/js/highcharts.js\"></script>\n\n\n\n\n\u4e5f\u53ef\u76f4\u63a5\u4f7f\u7528\u6211github\u4e0a\u9762\u7684\n\n\n3.\u65f6\u95f4\u63a7\u4ef6\n\n\n\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528My97DatePicker \u6765\u63d0\u4f9b\u65f6\u95f4\u9009\u62e9\u529f\u80fd\n\n\n\n\n\u5b98\u7f51\u7f51\u5740:\n\n\nhttp://www.my97.net/\n\n\n\u548chighcharts\u4e00\u6837\u6211\u4eec\u5c06\u5176\u4e0b\u8f7d\u4e0b\u6765\u653e\u5728static_root\u76ee\u5f55\u4e0b\u5e76\u5728template\u4e2d\u5f15\u7528\n\n\n<script type=\"text/javascript\" src=\"/static/My97DatePicker/WdatePicker.js\"></script>\n\n\n\n\n\u8fd9\u4e9b\u53ef\u76f4\u63a5\u4f7f\u7528\u6211github\u4e0a\u9762\u7684\n\n\n\u597d\u4e86\uff0c\u524d\u7aef\u5c55\u793a\u7684\u524d\u7f6e\u5de5\u5177\u5c31\u4ecb\u7ecd\u5230\u8fd9\uff0c\u4e0b\u8282\u8bb2\u5982\u4f55\u5229\u7528\u4ed6\u4eec\u3002",
            "title": "3.pandas\u548chighcharts\u4ecb\u7ecd"
        },
        {
            "location": "/1.3/#pandashighcharts",
            "text": "2017-12-06 Python \u5b85\u5fc5\u5907  \u524d\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528Python\u642d\u5efa\u4e00\u4e2a\u7f51\u7ad9\u5e76\u4e14\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u5176\u4e2d\u6267\u884cOracle\u547d\u4ee4\u5e76\u5728\u524d\u7aef\u663e\u793a\u51fa\u6765  \u7136\u540e\u8bb2\u8ff0\u81ea\u5b9a\u4e49\u547d\u4ee4\u76f8\u5173\u7684\u77e5\u8bc6  \u7cbe\u5f69\u5185\u5bb9\u53ef\u901a\u8fc7\u516c\u4f17\u53f7\u81ea\u5b9a\u4e49\u83dc\u5355\u67e5\u770b\u4e5f\u53ef\u76f4\u63a5\u67e5\u770b\u6211\u7684\u7f51\u7ad9  http://www.zhaibibei.cn/oms/1.1/  http://www.zhaibibei.cn/oms/2.1/  http://www.zhaibibei.cn/oms/3.1/  \u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528Django\u83b7\u53d6\u6570\u636e\u5e93\u7684\u4fe1\u606f  \u63a5\u4e0b\u6765\u6211\u4eec\u8bf4\u7684\u662f\u5982\u4f55\u901a\u8fc7Django\u521b\u5efa\u7684\u7f51\u7ad9\u6765\u76d1\u63a7Oracle\u7684TOP SQL  \u6ce8\u610f\u4e8b\u9879  \u524d\u9762\u7684\u5185\u5bb9\u6211\u4f7f\u7528\u7684\u662fCentOS 6.8+ Python 2.7 \u7684\u73af\u5883   \u4ece\u8fd9\u671f\u5f00\u59cb\u5df2\u7ecf\u6539\u6210\u4e86CentOS 7 +Python 3.6 \u7684\u73af\u5883  \u5173\u4e8e\u5982\u4f55\u8fc1\u79fb\u5c06\u5728\u540e\u9762\u4ecb\u7ecd  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms   \u6570\u636e\u5904\u7406:pandas   \u524d\u7aef\u5c55\u793a:highcharts  \u4e0a\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06Oracle TOP SQL\u6570\u636e\u5b58\u5165\u6570\u636e\u5e93  \u63a5\u4e0b\u6765\u662f\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u63d0\u53d6\u51fa\u6765\u7136\u540e\u8fdb\u884c\u5904\u7406\u6700\u540e\u5728\u524d\u7aef\u5c55\u793a  \u9996\u5148\u4ecb\u7ecd\u51e0\u4e2a\u76f8\u5173\u7684\u6a21\u5757\u548c\u6846\u67b6",
            "title": "pandas\u548chighcharts\u4ecb\u7ecd"
        },
        {
            "location": "/1.3/#1pandas",
            "text": "",
            "title": "1.pandas"
        },
        {
            "location": "/1.3/#11-pandas",
            "text": "pandas\u662f\u4e00\u4e2a\u57fa\u4e8ePython\u7684\u5f00\u6e90\u7684BSD-licensed \u7684\u6570\u636e\u5206\u6790\u6a21\u5757  \u4ed6\u63d0\u4f9b\u4e86\u65b0\u7684\u6570\u636e\u7ed3\u6784(series,dataframe)\u6765\u6ee1\u8db3\u6211\u4eec\u5404\u79cd\u5404\u6837\u7684\u9700\u6c42\uff0c\u800c\u6211\u4eec\u5c31\u4f7f\u7528\u5b83\u6765\u8fdb\u884c\u5206\u6790  \u5b98\u65b9\u7f51\u7ad9\u4e3a:  http://pandas.pydata.org/",
            "title": "1.1 pandas\u4ecb\u7ecd"
        },
        {
            "location": "/1.3/#12",
            "text": "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528pip3\u6765\u5b89\u88c5pandas\u7528\u4e8e\u89e3\u51b3\u4f9d\u8d56\u95ee\u9898  \u4f7f\u7528root\u7528\u6237  [root@LProAP-MONITOR1 oms]# pip3 install pandas",
            "title": "1.2 \u5982\u4f55\u5b89\u88c5"
        },
        {
            "location": "/1.3/#13",
            "text": "\u5982\u679cimport\u65e0\u62a5\u9519\u8868\u793apandas\u5b89\u88c5\u6210\u529f",
            "title": "1.3 \u9a8c\u8bc1\u5b89\u88c5"
        },
        {
            "location": "/1.3/#14",
            "text": "pandas\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u6df1\u5165\u4e86\u89e3\u53ef\u53c2\u8003\u5b98\u65b9\u6587\u6863\u6216\u8005\u76f8\u5173\u4e66\u7c4d  \u4e66\u7c4d\u63a8\u8350\u5229\u7528Python\u8fdb\u884c\u6570\u636e\u5206\u6790",
            "title": "1.4 \u5982\u4f55\u5b66\u4e60"
        },
        {
            "location": "/1.3/#2-highcharts",
            "text": "",
            "title": "2. highcharts"
        },
        {
            "location": "/1.3/#21-highcharts",
            "text": "highcharts\u53ef\u4ee5\u5c06\u6ee1\u8db3\u5176\u8981\u6c42\u7684\u6570\u636e\u8f6c\u5316\u6210\u5404\u79cd\u56fe\u8868(\u6298\u7ebf\u56fe,\u67f1\u72b6\u56fe\u7b49)\u5728\u524d\u7aef\u663e\u793a   \u5b83\u7684\u4f7f\u7528\u662f\u514d\u8d39\u7684\uff0c\u4f46\u5982\u679c\u7528\u4e8e\u76c8\u5229\u9700\u8981\u5546\u4e1a\u6388\u6743  \u5b98\u65b9\u7f51\u7ad9:  https://www.highcharts.com/  https://www.hcharts.cn/",
            "title": "2.1 highcharts\u4ecb\u7ecd"
        },
        {
            "location": "/1.3/#22",
            "text": "\u6211\u4eec\u53ef\u4ee5\u5728\u4ed6\u7684\u4e2d\u6587\u7f51\u7ad9\u4e0b\u8f7d  https://www.hcharts.cn/download  \u4e0b\u8f7d\u5b8c\u6210\u540e\u653e\u5728django\u914d\u7f6e\u6587\u4ef6\u7684static_root\u53d8\u91cf\u7684\u76ee\u5f55\u4e0b  vim mysite/mysite/settings.py\n\n\n\nSTATIC_ROOT = '/home/oms/mysite/monitor/static'  \u7136\u540e\u5728template\u6a21\u677f\u4e2d\u5f15\u7528  <script src=\"/static/highcharts/js/highcharts.js\"></script>  \u4e5f\u53ef\u76f4\u63a5\u4f7f\u7528\u6211github\u4e0a\u9762\u7684",
            "title": "2.2 \u5982\u4f55\u5b89\u88c5"
        },
        {
            "location": "/1.3/#3",
            "text": "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528My97DatePicker \u6765\u63d0\u4f9b\u65f6\u95f4\u9009\u62e9\u529f\u80fd   \u5b98\u7f51\u7f51\u5740:  http://www.my97.net/  \u548chighcharts\u4e00\u6837\u6211\u4eec\u5c06\u5176\u4e0b\u8f7d\u4e0b\u6765\u653e\u5728static_root\u76ee\u5f55\u4e0b\u5e76\u5728template\u4e2d\u5f15\u7528  <script type=\"text/javascript\" src=\"/static/My97DatePicker/WdatePicker.js\"></script>  \u8fd9\u4e9b\u53ef\u76f4\u63a5\u4f7f\u7528\u6211github\u4e0a\u9762\u7684  \u597d\u4e86\uff0c\u524d\u7aef\u5c55\u793a\u7684\u524d\u7f6e\u5de5\u5177\u5c31\u4ecb\u7ecd\u5230\u8fd9\uff0c\u4e0b\u8282\u8bb2\u5982\u4f55\u5229\u7528\u4ed6\u4eec\u3002",
            "title": "3.\u65f6\u95f4\u63a7\u4ef6"
        },
        {
            "location": "/1.4/",
            "text": "\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6TOP SQL\u8bed\u53e5\n\n\n2017-12-08 Oracle \u5b85\u5fc5\u5907\n\n\n\u8fd9\u8282\u8bb2\u5982\u4f55\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6TOP SQL\u8bed\u53e5\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms \n\n\n\u6570\u636e\u5904\u7406:pandas \n\n\n\u524d\u7aef\u5c55\u793a:highcharts\n\n\n\n\n\u4e0a\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06Oracle TOP SQL\u6570\u636e\u5b58\u5165\u6570\u636e\u5e93\n\n\n\u63a5\u4e0b\u6765\u662f\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u63d0\u53d6\u51fa\u6765\u7136\u540e\u8fdb\u884c\u5904\u7406\u6700\u540e\u5728\u524d\u7aef\u5c55\u793a\n\n\n\u8fd9\u8282\u8bb2\u5982\u4f55\u5229\u7528pandas\u5904\u7406\u6570\u636e\u6765\u83b7\u53d6TOPSQL\u8bed\u53e5\n\n\nTOP SQL\u83b7\u53d6\u539f\u7406\n\n\n\u901a\u8fc7\u524d\u9762\u7684\u7ae0\u8282\u6211\u4eec\u83b7\u53d6\u4e86\u6bcf\u4e2a\u5c0f\u65f6v$sqlare\u89c6\u56fe\u91cc\u9762\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4ee5\nmonitor_oracle_diskreads\n \u4e3a\u4f8b\uff0c\u5177\u4f53\u6570\u636e\u5982\u4e0b\u56fe\n\n\n\n\n\u4e0a\u9762\u7684\u6392\u5e8f\u662f\u6ca1\u6709\u89c4\u5f8b\u7684\uff0c\u6211\u4eec\u9996\u5148\u901a\u8fc7SQL\u8bed\u53e5\u67e5\u8be2\u51fa\u6307\u5b9a\u7684\u6570\u636e\u5e93\u572815:00\u81f316:00\u4e2d\u6240\u6709SQL\u8bed\u53e5,\u5e76\u6309\u7167sql_id\u548csql_time\u964d\u5e8f\u6392\u5217(\u65f6\u95f4\u91c7\u7528\u65f6\u95f4\u6233\u7684\u5f62\u5f0f)\n\n\n select * from monitor_oracle_diskreads where sql_time <= 1512633600 and sql_time >= 1512630000 and tnsname='DCPROD' and ipaddress='10.65.1.119' order by sql_id ,sql_time desc\n\n\n\n\n\n\n\u7531\u4e8e\u6211\u9009\u62e9\u65f6\u95f4\u6bb5\u95f4\u9694\u4e00\u4e2a\u5c0f\u65f6\uff0c\u6240\u4ee5\u4e0a\u9762\u67e5\u8be2\u7ed3\u679c\u6bcf\u4e2asql_id\u5bf9\u5e94\u4e24\u884c\u6570\u636e\uff0c\u5176\u4e2d16:00\u7684\u6570\u636e\u5728\u4e0a\u9762\u4e00\u884c\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981pandas\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u8ba1\u7b97\u6bcf\u4e2asql_id\u5bf9\u5e94\u7684disk_reads\u7b49\u680f\u4f4d\u7684\u5dee\u503c\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b:\n\n\n\n\n\n\nSQL_ID\u8fdb\u884c\u5206\u7ec4\n\n\n\n\n\n\n\u5386\u5404\u4e2a\u5206\u7ec4\uff0c\u5c06\u5404\u4e2a\u7ec4\u7684\u7b2c\u4e00\u4e2a\u503c\u51cf\u53bb\u6700\u540e\u4e00\u4e2a\u503c\uff0c\u5c06\u7ed3\u679c\u653e\u5165\u5217\u8868\u4e2d\u4f9b\u540e\u7eed\u4f7f\u7528\uff0c\u8fd9\u91cc\u6ce8\u610f\u4e00\u70b9\uff0c\u7531\u4e8e\u540e\u9762\u6211\u4eec\u8981\u8ba1\u7b97\u5e73\u5747\u6bcf\u6b21\u7684\u503c\uff0c\u4f1a\u6709\u5206\u6bcd\u4e3a\u96f6\u7684\u72b6\u51b5\uff0c\u6240\u4ee5\u8fd9\u91cc\u5148\u505a\u5224\u65ad\u5982\u679c\u6267\u884c\u6b21\u6570\u4e3a0\u5219\u5c06\u5206\u6bcd\u53d8\u4e3a1\n\n\n\n\n\n\n\u5c06\u6574\u7406\u540e\u7684\u7ed3\u679c\u683c\u5f0f\u5316\u6210pandas\u7684DataFrame\u683c\u5f0f\n\n\n\n\n\n\n\u7528pandas\u6392\u5e8f\u51fd\u6570\u4ee5disk_reads\u7684\u503c\u6765\u964d\u5e8f\u6392\u5217\uff0c\u5f97\u5230TOP\u8bed\u53e5\n\n\n\n\n\n\n\u8fd0\u884c\u7ed3\u679c\n\n\n\u5982\u4e0b\u4e3a\u8fd0\u884c\u540e\u7684\u7ed3\u679c\uff0c\u8fd9\u91cc\u4ee5topevent\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u770b\u5230\u4e3a\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u5728\u5d4c\u5957\u4e00\u4e9b\u5217\u8868\uff0c\u8fd9\u79cd\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u683c\u5f0f\n\n\n\n\n\u4e0b\u9762\u4e3a\u7a0b\u5e8f\u7684\u622a\u56fe:\n\n\n\n\n\u6e90\u4ee3\u7801\u4f4d\u7f6e\n\n\n\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801\n\n\nhttps://github.com/bsbforever/oms_django\n\n\n\u4e0b\u8282\u4e3a\u5982\u4f55\u8bb2\u5982\u4f55\u5728\u524d\u7aef\u663e\u793a",
            "title": "4.\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6TOP SQL\u8bed\u53e5"
        },
        {
            "location": "/1.4/#pandastop-sql",
            "text": "2017-12-08 Oracle \u5b85\u5fc5\u5907  \u8fd9\u8282\u8bb2\u5982\u4f55\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6TOP SQL\u8bed\u53e5  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms   \u6570\u636e\u5904\u7406:pandas   \u524d\u7aef\u5c55\u793a:highcharts   \u4e0a\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06Oracle TOP SQL\u6570\u636e\u5b58\u5165\u6570\u636e\u5e93  \u63a5\u4e0b\u6765\u662f\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u63d0\u53d6\u51fa\u6765\u7136\u540e\u8fdb\u884c\u5904\u7406\u6700\u540e\u5728\u524d\u7aef\u5c55\u793a  \u8fd9\u8282\u8bb2\u5982\u4f55\u5229\u7528pandas\u5904\u7406\u6570\u636e\u6765\u83b7\u53d6TOPSQL\u8bed\u53e5",
            "title": "\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6TOP SQL\u8bed\u53e5"
        },
        {
            "location": "/1.4/#top-sql",
            "text": "\u901a\u8fc7\u524d\u9762\u7684\u7ae0\u8282\u6211\u4eec\u83b7\u53d6\u4e86\u6bcf\u4e2a\u5c0f\u65f6v$sqlare\u89c6\u56fe\u91cc\u9762\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4ee5 monitor_oracle_diskreads  \u4e3a\u4f8b\uff0c\u5177\u4f53\u6570\u636e\u5982\u4e0b\u56fe   \u4e0a\u9762\u7684\u6392\u5e8f\u662f\u6ca1\u6709\u89c4\u5f8b\u7684\uff0c\u6211\u4eec\u9996\u5148\u901a\u8fc7SQL\u8bed\u53e5\u67e5\u8be2\u51fa\u6307\u5b9a\u7684\u6570\u636e\u5e93\u572815:00\u81f316:00\u4e2d\u6240\u6709SQL\u8bed\u53e5,\u5e76\u6309\u7167sql_id\u548csql_time\u964d\u5e8f\u6392\u5217(\u65f6\u95f4\u91c7\u7528\u65f6\u95f4\u6233\u7684\u5f62\u5f0f)   select * from monitor_oracle_diskreads where sql_time <= 1512633600 and sql_time >= 1512630000 and tnsname='DCPROD' and ipaddress='10.65.1.119' order by sql_id ,sql_time desc   \u7531\u4e8e\u6211\u9009\u62e9\u65f6\u95f4\u6bb5\u95f4\u9694\u4e00\u4e2a\u5c0f\u65f6\uff0c\u6240\u4ee5\u4e0a\u9762\u67e5\u8be2\u7ed3\u679c\u6bcf\u4e2asql_id\u5bf9\u5e94\u4e24\u884c\u6570\u636e\uff0c\u5176\u4e2d16:00\u7684\u6570\u636e\u5728\u4e0a\u9762\u4e00\u884c  \u63a5\u4e0b\u6765\u6211\u4eec\u8981pandas\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u8ba1\u7b97\u6bcf\u4e2asql_id\u5bf9\u5e94\u7684disk_reads\u7b49\u680f\u4f4d\u7684\u5dee\u503c\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b:    SQL_ID\u8fdb\u884c\u5206\u7ec4    \u5386\u5404\u4e2a\u5206\u7ec4\uff0c\u5c06\u5404\u4e2a\u7ec4\u7684\u7b2c\u4e00\u4e2a\u503c\u51cf\u53bb\u6700\u540e\u4e00\u4e2a\u503c\uff0c\u5c06\u7ed3\u679c\u653e\u5165\u5217\u8868\u4e2d\u4f9b\u540e\u7eed\u4f7f\u7528\uff0c\u8fd9\u91cc\u6ce8\u610f\u4e00\u70b9\uff0c\u7531\u4e8e\u540e\u9762\u6211\u4eec\u8981\u8ba1\u7b97\u5e73\u5747\u6bcf\u6b21\u7684\u503c\uff0c\u4f1a\u6709\u5206\u6bcd\u4e3a\u96f6\u7684\u72b6\u51b5\uff0c\u6240\u4ee5\u8fd9\u91cc\u5148\u505a\u5224\u65ad\u5982\u679c\u6267\u884c\u6b21\u6570\u4e3a0\u5219\u5c06\u5206\u6bcd\u53d8\u4e3a1    \u5c06\u6574\u7406\u540e\u7684\u7ed3\u679c\u683c\u5f0f\u5316\u6210pandas\u7684DataFrame\u683c\u5f0f    \u7528pandas\u6392\u5e8f\u51fd\u6570\u4ee5disk_reads\u7684\u503c\u6765\u964d\u5e8f\u6392\u5217\uff0c\u5f97\u5230TOP\u8bed\u53e5    \u8fd0\u884c\u7ed3\u679c  \u5982\u4e0b\u4e3a\u8fd0\u884c\u540e\u7684\u7ed3\u679c\uff0c\u8fd9\u91cc\u4ee5topevent\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u770b\u5230\u4e3a\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u5728\u5d4c\u5957\u4e00\u4e9b\u5217\u8868\uff0c\u8fd9\u79cd\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u683c\u5f0f   \u4e0b\u9762\u4e3a\u7a0b\u5e8f\u7684\u622a\u56fe:",
            "title": "TOP SQL\u83b7\u53d6\u539f\u7406"
        },
        {
            "location": "/1.4/#_1",
            "text": "\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801  https://github.com/bsbforever/oms_django  \u4e0b\u8282\u4e3a\u5982\u4f55\u8bb2\u5982\u4f55\u5728\u524d\u7aef\u663e\u793a",
            "title": "\u6e90\u4ee3\u7801\u4f4d\u7f6e"
        },
        {
            "location": "/1.5/",
            "text": "\u5229\u7528Django\u5728\u524d\u7aef\u5c55\u793aTOP SQL\u4fe1\u606f(\u9644\u6e90\u4ee3\u7801)\n\n\n2017-12-08 Python \u5b85\u5fc5\u5907\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms \n\n\n\u6570\u636e\u5904\u7406:pandas\n\n\n\u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9a\u65f6\u83b7\u53d6TOP SQL\u8bed\u53e5\u4ee5\u53ca\u5982\u4f55\u5229\u7528pandas\u5904\u7406\u6570\u636e\n\n\n\u8fd9\u8282\u8bb2\u5982\u4f55\u8ba9\u5176\u5728\u524d\u7aef\u663e\u793a\n\n\n\u5efa\u7acb\u9875\u9762\u7684\u6b65\u9aa4\n\n\n\n\n\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u8fd9\u5f20\u56fe\u7684\u6b65\u9aa4\u6765\u8bf4\u660e\u5982\u4f55\u5efa\u7acb\u9875\u9762\n\n\n1. urls.py\u9875\u9762\n\n\n\nfrom django.conf.urls import  url, include\nfrom monitor import views\n\nurlpatterns = [\n    url(r'^$', views.index, name='index'),\n    url(r'^oracle_command/$',views.oracle_command, name='oracle_command'),\n    url(r'^commandresult/$',views.commandresult, name='commandresult'),\n    url(r'^oracle_status$',views.oracle_status, name='oracle_status'),\n    url(r'^oracle_performance$',views.oracle_performance, name='oracle_performance'),\n    url(r'^performance$',views.performance, name='performance'),\n    url(r'^oracle_topevent$',views.oracle_topevent, name='oracle_topevent'),\n    url(r'^check_topsql$',views.check_topsql, name='check_topsql'),\n    url(r'^addbaseline$',views.addbaseline, name='addbaseline'),\n    url(r'^check_hitratio$',views.check_hitratio, name='check_hitratio'),\n    url(r'^linux_list$',views.linux_list, name='linux_list'),\n]\n\n\n\n\ncheck_topsql\u4e3a\u5c55\u793aOracle TOP SQL\u7684\u9875\u9762\n\n\n2. views.py\n\n\ndef check_topsql(request):\n    if request.method == 'POST': # If the form has been submitted...\n        form = charts_topsql(request.POST) # A form bound to the POST data\n        if form.is_valid(): # All validation rules pass\n            top = form.cleaned_data['top']\n            starttime1  = request.POST['starttime']\n            endtime1  = request.POST['endtime']\n            ipaddress = form.cleaned_data['ipaddress'].split(':')[0]\n            tnsname = form.cleaned_data['ipaddress'].split(':')[1]\n            topsql_type= form.cleaned_data['topsql_type'].split(':')[0]\n            topsql_col=form.cleaned_data['topsql_type'].split(':')[1]\n            title=tnsname+'-'+topsql_type+'-'+str(starttime1)+'-'+str(endtime1)\n\n            if starttime1 =='' or endtime1 =='':\n                return HttpResponse('Please give the Start and End time')\n            else:\n                starttime=int(str(time.mktime(time.strptime(starttime1,'%Y%m%d %H'))).split('.')[0])\n                endtime=int(str(time.mktime(time.strptime(endtime1,'%Y%m%d %H'))).split('.')[0])+60\n            if  starttime>endtime:\n                return HttpResponse('The Start time must larger than the End time')\n                #starttime=int(str(time.mktime(time.strptime(starttime1,'%Y%m%d %H:%M:%S'))))\n                #endtime=int(str(time.mktime(time.strptime(endtime1,'%Y%m%d %H:%M:%S'))))\n            else:\n                    if  topsql_type=='diskreads':\n                        row=check_topsql_diskreads(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_type=='buffergets':\n                        row=check_topsql_buffergets(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_type=='elapsedtime':\n                        row=check_topsql_elapsedtime(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_type=='cputime':\n                        row=check_topsql_cputime(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_col=='topsegment':\n                        row=check_topsql_topsegment(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_col=='segmentsizechange':\n                        row=check_segmentsizechange(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    else:\n                        row=check_topsql_topevent(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n\n\n                    top10sql=row['top10sql']\n                    #outsql=row['outsql']\n                    if topsql_type=='buffergets' or topsql_type=='diskreads':\n                        tr=['SQL_ID','SQL \u8bed\u53e5',topsql_type,'\u6b21\u6570','\u6570\u636e\u5757\u6570/\u6b21','CPU\u65f6\u95f4(S)/\u6b21','\u65f6\u95f4(S)/\u6b21','\u6a21\u5757']\n                    elif topsql_type=='elapsedtime':\n                        tr=['SQL_ID','SQL \u8bed\u53e5',topsql_type,'\u6b21\u6570','\u5e73\u5747\u65f6\u95f4(S)','CPU\u65f6\u95f4(S)/\u6b21','\u6a21\u5757']\n                    elif topsql_type=='cputime':\n                        tr=['SQL_ID','SQL \u8bed\u53e5',topsql_type,'\u6b21\u6570','\u5e73\u5747CPU\u65f6\u95f4(S)','\u6267\u884c\u65f6\u95f4(S)/\u6b21','\u6a21\u5757']\n                    elif topsql_col=='topsegment':\n                        tr=['\u7528\u6237','\u5bf9\u8c61\u540d','\u5206\u533a\u540d','\u5bf9\u8c61\u7c7b\u578b','\u503c']\n                    elif topsql_col=='segmentsizechange':\n                        tr=['\u7528\u6237','\u5bf9\u8c61\u540d','\u5206\u533a\u540d','\u5bf9\u8c61\u7c7b\u578b','\u8868\u7a7a\u95f4','\u5927\u5c0f/M','\u5927\u5c0f\u53d8\u5316\u91cf/M','\u5757\u53d8\u5316\u91cf/Blocks','\u6bcf\u5929\u5927\u5c0f\u53d8\u5316\u91cf/M']\n                    else:\n                        tr=['\u4e8b\u4ef6\u540d\u79f0','\u7b49\u5f85\u65f6\u95f4','\u7b49\u5f85\u6b21\u6570','\u5e73\u5747\u7b49\u5f85\u65f6\u95f4','\u7b49\u5f85\u8d85\u65f6\u6b21\u6570']\n                    #dic ={'title':title,'tr':tr,'top10sql':top10sql,'outsql':outsql}\n                    dic ={'title':title,'tr':tr,'top10sql':top10sql}\n                    if topsql_type=='buffergets' or topsql_type=='diskreads':\n                        return render_to_response('oracle_topsql_8.html',dic)\n                    elif topsql_type=='elapsedtime' or topsql_type=='cputime':\n                        return render_to_response('oracle_topsql_7.html',dic)\n                    elif topsql_type=='topevent':\n                        return render_to_response('oracle_topsql_5.html',dic)\n\n\n\n        else:\n           return render(request, 'check_topsql.html', {'form': form})\n    else:\n        form = charts_topsql() # An unbound form\n        d1=datetime.datetime.now()\n        etime= d1.strftime(\"%Y%m%d %H\")\n        stime=(d1-datetime.timedelta(hours=1)).strftime(\"%Y%m%d %H\")\n        dic={'form':form,'etime':etime,'stime':stime}\n        return render(request, 'check_topsql.html', dic)\n\n\n\n\n\u4e0a\u9762\u7684url\u8bbe\u5b9a\u8c03\u7528views.py\u91cc\u9762\u7684check_topsql\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8bb2\u89e3\u5982\u4e0b:\n\n\n\n\n\n\n\u9996\u5148\u5224\u65ad\u8bf7\u6c42\u7684\u65b9\u6cd5\u662f\u4e0d\u662fpost(\u63d0\u4ea4\u8868\u5355\u524d)\uff0c\u5982\u679c\u4e0d\u662f\u5219\u6253\u5f00check_topsql.html\u9875\u9762\uff0ccharts_topsql\u4e3a\u5b9a\u4e49\u7684\u8868\u5355\uff0c\u53ef\u5728forms.py\u4e2d\u5b9a\u4e49\n\n\n\n\n\n\n\u5982\u679c\u8bf7\u6c42\u65b9\u6cd5\u4e3apost(\u63d0\u4ea4\u8868\u5355\u540e)\uff0c\u9996\u5148\u9a8c\u8bc1\u8f93\u5165\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u6b63\u786e\u5219\u83b7\u53d6\u76f8\u5e94\u7684ipaddress,tnsname,topsql_type\u7b49\u4fe1\u606f\n\n\n\n\n\n\n\u63a5\u4e0b\u6765\u6839\u636etopsql\u7684\u7c7b\u578b(\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\u7b49)\u8c03\u7528monitor/command/views_oracletopsql.py\u6587\u4ef6\u91cc\u9762\u7684\u65b9\u6cd5\u6765\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8bb2\u89e3\u5728\u4e0a\u4e00\u7ae0\u8282\uff0c\u5927\u5bb6\u53ef\u81ea\u884c\u67e5\u770b\n\n\n\n\n\n\n\u6700\u540e\u6211\u4eec\u5c06TOP SQL\u76f8\u5173\u7684\u5185\u5bb9\u5c01\u88c5\u6210\u5b57\u5178\u91cd\u5b9a\u5411\u5230\u76f8\u5e94\u7684template\u6587\u4ef6\u4e2d\n\n\n\n\n\n\n3. template\u6587\u4ef6\n\n\n\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528oracle_topsql_n.html\u6587\u4ef6\u6765\u663e\u793aTOP SQL\n\n\n<div id='newadd'>\n<h3>{{title}}</h3>\n<table class=\"table\">\n  <thead>\n    <tr>\n{% for i in tr %}\n        <th>{{i}}</th>\n{%endfor%}\n    </tr>\n  </thead>\n{% for a,b,c,d,e in top10sql %}\n<tbody>\n            <tr>\n                <td>{{a}}</td>\n                <td>{{b}}</td>\n                <td>{{c}}</td>\n                <td>{{d}}</td>\n                <td>{{e}}</td>\n            </tr>\n</tbody>\n{% endfor %}\n</table>\n\n</div>\n\n\n\n\n\u8fd9\u91cc\u901a\u8fc7\u4e00\u4e2a\u8868\u683c\u6765\u5c55\u73b0\u6570\u636e\u5e93TOP SQL\u7684\u60c5\u51b5\n\n\nDjango\u5141\u8bb8\u5728html\u6587\u4ef6\u5185\u90e8\u4f7f\u7528for\u5faa\u73af\u7684\u5f62\u5f0f\u6765\u8fed\u4ee3\u5217\u8868\n\n\n5.\u6548\u679c\u5c55\u793a\n\n\n\u9996\u5148\u662f\u8868\u5355\u63d0\u4ea4\u4e4b\u524d\u7684\u754c\u9762\n\n\n\n\n\u8fd9\u91cc\u9009\u62e9\u9700\u8981\u67e5\u8be2\u7684\u6570\u636e\u5e93\u4ee5\u53ca\u8d77\u6b62\u65f6\u95f4\uff0c\u65f6\u95f4\u8d8a\u77ed\u8d8a\u7cbe\u786e\uff0c\u5176\u4e2dTop\u680f\u4f4d\u4ee3\u8868\u9700\u8981\u83b7\u53d6\u524d\u591a\u5c11\u4e2aTOP SQL\u8bed\u53e5\uff0c\u9ed8\u8ba4\u4e3a10\n\n\n\u70b9\u51fb\u63d0\u4ea4\u540e\u4f1a\u5c55\u793a\u51faTOP SQL \u8bed\u53e5\u4ee5\u53caTOP \u7b49\u5f85\u4e8b\u4ef6\n\n\n\n\n\n\n6. \u6e90\u4ee3\u7801\u4f4d\u7f6e\n\n\n\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801\n\n\nhttps://github.com/bsbforever/oms_django\n\n\nTOP SQL\u76d1\u63a7\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u4e0b\u6b21\u8bb2\u5982\u4f55\u5c55\u793a Oracle\u6027\u80fd\u8d8b\u52bf\uff0c\u5982\u7269\u7406\u8bfb\uff0cDB Time\u7b49",
            "title": "5.\u5229\u7528Django\u5728\u524d\u7aef\u5c55\u793aTOP SQL\u4fe1\u606f"
        },
        {
            "location": "/1.5/#djangotop-sql",
            "text": "2017-12-08 Python \u5b85\u5fc5\u5907  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms   \u6570\u636e\u5904\u7406:pandas  \u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9a\u65f6\u83b7\u53d6TOP SQL\u8bed\u53e5\u4ee5\u53ca\u5982\u4f55\u5229\u7528pandas\u5904\u7406\u6570\u636e  \u8fd9\u8282\u8bb2\u5982\u4f55\u8ba9\u5176\u5728\u524d\u7aef\u663e\u793a",
            "title": "\u5229\u7528Django\u5728\u524d\u7aef\u5c55\u793aTOP SQL\u4fe1\u606f(\u9644\u6e90\u4ee3\u7801)"
        },
        {
            "location": "/1.5/#_1",
            "text": "\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u8fd9\u5f20\u56fe\u7684\u6b65\u9aa4\u6765\u8bf4\u660e\u5982\u4f55\u5efa\u7acb\u9875\u9762",
            "title": "\u5efa\u7acb\u9875\u9762\u7684\u6b65\u9aa4"
        },
        {
            "location": "/1.5/#1-urlspy",
            "text": "from django.conf.urls import  url, include\nfrom monitor import views\n\nurlpatterns = [\n    url(r'^$', views.index, name='index'),\n    url(r'^oracle_command/$',views.oracle_command, name='oracle_command'),\n    url(r'^commandresult/$',views.commandresult, name='commandresult'),\n    url(r'^oracle_status$',views.oracle_status, name='oracle_status'),\n    url(r'^oracle_performance$',views.oracle_performance, name='oracle_performance'),\n    url(r'^performance$',views.performance, name='performance'),\n    url(r'^oracle_topevent$',views.oracle_topevent, name='oracle_topevent'),\n    url(r'^check_topsql$',views.check_topsql, name='check_topsql'),\n    url(r'^addbaseline$',views.addbaseline, name='addbaseline'),\n    url(r'^check_hitratio$',views.check_hitratio, name='check_hitratio'),\n    url(r'^linux_list$',views.linux_list, name='linux_list'),\n]  check_topsql\u4e3a\u5c55\u793aOracle TOP SQL\u7684\u9875\u9762",
            "title": "1. urls.py\u9875\u9762"
        },
        {
            "location": "/1.5/#2-viewspy",
            "text": "def check_topsql(request):\n    if request.method == 'POST': # If the form has been submitted...\n        form = charts_topsql(request.POST) # A form bound to the POST data\n        if form.is_valid(): # All validation rules pass\n            top = form.cleaned_data['top']\n            starttime1  = request.POST['starttime']\n            endtime1  = request.POST['endtime']\n            ipaddress = form.cleaned_data['ipaddress'].split(':')[0]\n            tnsname = form.cleaned_data['ipaddress'].split(':')[1]\n            topsql_type= form.cleaned_data['topsql_type'].split(':')[0]\n            topsql_col=form.cleaned_data['topsql_type'].split(':')[1]\n            title=tnsname+'-'+topsql_type+'-'+str(starttime1)+'-'+str(endtime1)\n\n            if starttime1 =='' or endtime1 =='':\n                return HttpResponse('Please give the Start and End time')\n            else:\n                starttime=int(str(time.mktime(time.strptime(starttime1,'%Y%m%d %H'))).split('.')[0])\n                endtime=int(str(time.mktime(time.strptime(endtime1,'%Y%m%d %H'))).split('.')[0])+60\n            if  starttime>endtime:\n                return HttpResponse('The Start time must larger than the End time')\n                #starttime=int(str(time.mktime(time.strptime(starttime1,'%Y%m%d %H:%M:%S'))))\n                #endtime=int(str(time.mktime(time.strptime(endtime1,'%Y%m%d %H:%M:%S'))))\n            else:\n                    if  topsql_type=='diskreads':\n                        row=check_topsql_diskreads(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_type=='buffergets':\n                        row=check_topsql_buffergets(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_type=='elapsedtime':\n                        row=check_topsql_elapsedtime(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_type=='cputime':\n                        row=check_topsql_cputime(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_col=='topsegment':\n                        row=check_topsql_topsegment(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    elif topsql_col=='segmentsizechange':\n                        row=check_segmentsizechange(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n                    else:\n                        row=check_topsql_topevent(starttime,endtime,ipaddress,tnsname,topsql_type,top)\n\n\n                    top10sql=row['top10sql']\n                    #outsql=row['outsql']\n                    if topsql_type=='buffergets' or topsql_type=='diskreads':\n                        tr=['SQL_ID','SQL \u8bed\u53e5',topsql_type,'\u6b21\u6570','\u6570\u636e\u5757\u6570/\u6b21','CPU\u65f6\u95f4(S)/\u6b21','\u65f6\u95f4(S)/\u6b21','\u6a21\u5757']\n                    elif topsql_type=='elapsedtime':\n                        tr=['SQL_ID','SQL \u8bed\u53e5',topsql_type,'\u6b21\u6570','\u5e73\u5747\u65f6\u95f4(S)','CPU\u65f6\u95f4(S)/\u6b21','\u6a21\u5757']\n                    elif topsql_type=='cputime':\n                        tr=['SQL_ID','SQL \u8bed\u53e5',topsql_type,'\u6b21\u6570','\u5e73\u5747CPU\u65f6\u95f4(S)','\u6267\u884c\u65f6\u95f4(S)/\u6b21','\u6a21\u5757']\n                    elif topsql_col=='topsegment':\n                        tr=['\u7528\u6237','\u5bf9\u8c61\u540d','\u5206\u533a\u540d','\u5bf9\u8c61\u7c7b\u578b','\u503c']\n                    elif topsql_col=='segmentsizechange':\n                        tr=['\u7528\u6237','\u5bf9\u8c61\u540d','\u5206\u533a\u540d','\u5bf9\u8c61\u7c7b\u578b','\u8868\u7a7a\u95f4','\u5927\u5c0f/M','\u5927\u5c0f\u53d8\u5316\u91cf/M','\u5757\u53d8\u5316\u91cf/Blocks','\u6bcf\u5929\u5927\u5c0f\u53d8\u5316\u91cf/M']\n                    else:\n                        tr=['\u4e8b\u4ef6\u540d\u79f0','\u7b49\u5f85\u65f6\u95f4','\u7b49\u5f85\u6b21\u6570','\u5e73\u5747\u7b49\u5f85\u65f6\u95f4','\u7b49\u5f85\u8d85\u65f6\u6b21\u6570']\n                    #dic ={'title':title,'tr':tr,'top10sql':top10sql,'outsql':outsql}\n                    dic ={'title':title,'tr':tr,'top10sql':top10sql}\n                    if topsql_type=='buffergets' or topsql_type=='diskreads':\n                        return render_to_response('oracle_topsql_8.html',dic)\n                    elif topsql_type=='elapsedtime' or topsql_type=='cputime':\n                        return render_to_response('oracle_topsql_7.html',dic)\n                    elif topsql_type=='topevent':\n                        return render_to_response('oracle_topsql_5.html',dic)\n\n\n\n        else:\n           return render(request, 'check_topsql.html', {'form': form})\n    else:\n        form = charts_topsql() # An unbound form\n        d1=datetime.datetime.now()\n        etime= d1.strftime(\"%Y%m%d %H\")\n        stime=(d1-datetime.timedelta(hours=1)).strftime(\"%Y%m%d %H\")\n        dic={'form':form,'etime':etime,'stime':stime}\n        return render(request, 'check_topsql.html', dic)  \u4e0a\u9762\u7684url\u8bbe\u5b9a\u8c03\u7528views.py\u91cc\u9762\u7684check_topsql\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8bb2\u89e3\u5982\u4e0b:    \u9996\u5148\u5224\u65ad\u8bf7\u6c42\u7684\u65b9\u6cd5\u662f\u4e0d\u662fpost(\u63d0\u4ea4\u8868\u5355\u524d)\uff0c\u5982\u679c\u4e0d\u662f\u5219\u6253\u5f00check_topsql.html\u9875\u9762\uff0ccharts_topsql\u4e3a\u5b9a\u4e49\u7684\u8868\u5355\uff0c\u53ef\u5728forms.py\u4e2d\u5b9a\u4e49    \u5982\u679c\u8bf7\u6c42\u65b9\u6cd5\u4e3apost(\u63d0\u4ea4\u8868\u5355\u540e)\uff0c\u9996\u5148\u9a8c\u8bc1\u8f93\u5165\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u6b63\u786e\u5219\u83b7\u53d6\u76f8\u5e94\u7684ipaddress,tnsname,topsql_type\u7b49\u4fe1\u606f    \u63a5\u4e0b\u6765\u6839\u636etopsql\u7684\u7c7b\u578b(\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\u7b49)\u8c03\u7528monitor/command/views_oracletopsql.py\u6587\u4ef6\u91cc\u9762\u7684\u65b9\u6cd5\u6765\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8bb2\u89e3\u5728\u4e0a\u4e00\u7ae0\u8282\uff0c\u5927\u5bb6\u53ef\u81ea\u884c\u67e5\u770b    \u6700\u540e\u6211\u4eec\u5c06TOP SQL\u76f8\u5173\u7684\u5185\u5bb9\u5c01\u88c5\u6210\u5b57\u5178\u91cd\u5b9a\u5411\u5230\u76f8\u5e94\u7684template\u6587\u4ef6\u4e2d",
            "title": "2. views.py"
        },
        {
            "location": "/1.5/#3-template",
            "text": "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528oracle_topsql_n.html\u6587\u4ef6\u6765\u663e\u793aTOP SQL  <div id='newadd'>\n<h3>{{title}}</h3>\n<table class=\"table\">\n  <thead>\n    <tr>\n{% for i in tr %}\n        <th>{{i}}</th>\n{%endfor%}\n    </tr>\n  </thead>\n{% for a,b,c,d,e in top10sql %}\n<tbody>\n            <tr>\n                <td>{{a}}</td>\n                <td>{{b}}</td>\n                <td>{{c}}</td>\n                <td>{{d}}</td>\n                <td>{{e}}</td>\n            </tr>\n</tbody>\n{% endfor %}\n</table>\n\n</div>  \u8fd9\u91cc\u901a\u8fc7\u4e00\u4e2a\u8868\u683c\u6765\u5c55\u73b0\u6570\u636e\u5e93TOP SQL\u7684\u60c5\u51b5  Django\u5141\u8bb8\u5728html\u6587\u4ef6\u5185\u90e8\u4f7f\u7528for\u5faa\u73af\u7684\u5f62\u5f0f\u6765\u8fed\u4ee3\u5217\u8868",
            "title": "3. template\u6587\u4ef6"
        },
        {
            "location": "/1.5/#5",
            "text": "\u9996\u5148\u662f\u8868\u5355\u63d0\u4ea4\u4e4b\u524d\u7684\u754c\u9762   \u8fd9\u91cc\u9009\u62e9\u9700\u8981\u67e5\u8be2\u7684\u6570\u636e\u5e93\u4ee5\u53ca\u8d77\u6b62\u65f6\u95f4\uff0c\u65f6\u95f4\u8d8a\u77ed\u8d8a\u7cbe\u786e\uff0c\u5176\u4e2dTop\u680f\u4f4d\u4ee3\u8868\u9700\u8981\u83b7\u53d6\u524d\u591a\u5c11\u4e2aTOP SQL\u8bed\u53e5\uff0c\u9ed8\u8ba4\u4e3a10  \u70b9\u51fb\u63d0\u4ea4\u540e\u4f1a\u5c55\u793a\u51faTOP SQL \u8bed\u53e5\u4ee5\u53caTOP \u7b49\u5f85\u4e8b\u4ef6",
            "title": "5.\u6548\u679c\u5c55\u793a"
        },
        {
            "location": "/1.5/#6",
            "text": "\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801  https://github.com/bsbforever/oms_django  TOP SQL\u76d1\u63a7\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u4e0b\u6b21\u8bb2\u5982\u4f55\u5c55\u793a Oracle\u6027\u80fd\u8d8b\u52bf\uff0c\u5982\u7269\u7406\u8bfb\uff0cDB Time\u7b49",
            "title": "6. \u6e90\u4ee3\u7801\u4f4d\u7f6e"
        },
        {
            "location": "/2.1/",
            "text": "redis\u7684\u4ecb\u7ecd\u53ca\u5b89\u88c5\n\n\n2017-12-11 Python \u5b85\u5fc5\u5907\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms \n\n\n\u6570\u636e\u5904\u7406:pandas \n\n\n\u6570\u636e\u5b58\u50a8:MySQL,redis\n\n\n\u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9a\u65f6\u83b7\u53d6TOP SQL\u8bed\u53e5\u4ee5\u53ca\u5982\u4f55\u5229\u7528pandas\u5904\u7406\u6570\u636e\uff0c\u5e76\u8ba9\u5176\u5728\u524d\u7aef\u663e\u793a\n\n\n\u63a5\u4e0b\u6765\u8fd9\u4e2a\u4e13\u9898\u4ecb\u7ecd\u5982\u4f55\u83b7\u53d6\u6570\u636e\u5e93\u7684\u6027\u80fd\u6307\u6807\u7528\u6765\u53cd\u5e94\u6570\u636e\u5e93\u7684\u6027\u80fd\u8d8b\u52bf\n\n\n\u9996\u5148\u4ecb\u7ecd\u4e0b\u7528\u6765\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684redis\n\n\n1. redis\u4ecb\u7ecd\n\n\n\n\nRedis\u662f\u4e00\u4e2a\u4f7f\u7528ANSI C\u7f16\u5199\u7684\u5f00\u6e90\u3001\u652f\u6301\u7f51\u7edc\u3001\u57fa\u4e8e\u5185\u5b58\u3001\u53ef\u9009\u6301\u4e45\u6027\u7684\u952e\u503c\u5bf9\u5b58\u50a8\u6570\u636e\u5e93\u3002\n\n\n\u4ece2015\u5e746\u6708\u5f00\u59cb\uff0cRedis\u7684\u5f00\u53d1\u7531Redis Labs\u8d5e\u52a9\n\n\n\u800c2013\u5e745\u6708\u81f32015\u5e746\u6708\u671f\u95f4\uff0c\u5176\u5f00\u53d1\u7531Pivotal\u8d5e\u52a9\u3002\n\n\n\u57282013\u5e745\u6708\u4e4b\u524d\uff0c\u5176\u5f00\u53d1\u7531VMware\u8d5e\u52a9\u3002\n\n\n\u6839\u636e\u6708\u5ea6\u6392\u884c\u7f51\u7ad9DB-Engines.com\u7684\u6570\u636e\u663e\u793a\uff0cRedis\u662f\u6700\u6d41\u884c\u7684\u952e\u503c\u5bf9\u5b58\u50a8\u6570\u636e\u5e93\u3002\n\n\n2. \u4e3a\u4f55\u4f7f\u7528redis\n\n\n\u6211\u4eec\u4f7f\u7528redis\u4f5c\u4e3a\u4fdd\u5b58Oracle\u7cfb\u7edf\u6570\u636e\u7684\u7684\u6570\u636e\u5e93\uff0c\u6211\u4eec\u5c06\u4e0b\u5217\u6570\u636e\u4fdd\u5b58\u5728\u91cc\u9762\uff0c\u5177\u4f53\u83b7\u53d6\u65b9\u5f0f\u540e\u9762\u505a\u4ecb\u7ecd\n\n\n\n\n\u53e6\u5916\u8be5\u76d1\u63a7\u7cfb\u7edf\u5404\u7cfb\u7edf\u7684CPU\u53ca\u5185\u5b58\u4f7f\u7528\u7387\u4e5f\u4f7f\u7528redis\u5b58\u50a8\n\n\n3. \u5982\u4f55\u5b89\u88c5redis(root\u6216\u666e\u901a\u7528\u6237)\n\n\n\u5bf9\u4e8e\u914d\u7f6e\u6211\u4e5f\u4e0d\u662f\u5b8c\u5168\u4e86\u89e3\uff0c\u5982\u6709\u9519\u8bef\u8bf7\u6307\u6b63\n\n\n\u6211\u4eec\u901a\u8fc7\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d:\n\n\nhttps://redis.io/download\n\n\n3.1 \u4e0b\u8f7d\u89e3\u538bredis\n\n\nwget http://download.redis.io/releases/redis-4.0.6.tar.gz\n\ntar zxvf redis-4.0.6.tar.gz\n\n\n\n\n3.2 \u5b89\u88c5redis\n\n\ncd redis-4.0.6/\n\nmake\n\n\n\n\n3.3 \u6d4b\u8bd5\u5b89\u88c5\n\n\nmake test\n\n\n\n\n\u5982\u51fa\u73b0You need tcl 8.5 or newer in order to run the Redis test.\u9519\u8bef\n\n\n\n\n\u5219\u5b89\u88c5\u6700\u65b0\u7248\u7684tcl\n\n\nyum install tcl\n\n\n\n\n3.4 \u914d\u7f6eredis\n\n\n\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\n\n\n\u5b89\u88c5\u5b8c\u6210\u540eredis\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5728\u5b89\u88c5\u6587\u4ef6\u7684src\u76ee\u5f55\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u5230PATH\u4e2d\n\n\nPATH=$PATH:$HOME/.local/bin:$HOME/bin:/usr/local/python36/bin:/home/oms/software/redis-4.0.2/src\n\n\n\n\n\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\n\n\nredis\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u5728\u5b89\u88c5\u6587\u4ef6\u4e2d\uff0c\u53d6\u6d88\u6ce8\u91ca\u6216\u4fee\u6539\u5982\u4e0b\u53c2\u6570\n\n\ndaemonize yes\n\npidfile /home/oms/redis_6379.pid\n\nsave 900 1\n\nsave 300 10\n\nsave 60 10000\n\ndbfilename dump.rdb\n\nappendonly yes\n\nappendfilename \"appendonly.aof\"\n\nappendfsync everysec\n\n\n\n\n3.5 \u542f\u52a8\u548c\u5173\u95edredis\n\n\n\u542f\u52a8redis\n\n\n\u914d\u7f6e\u6587\u4ef6\u5728\u5b89\u88c5\u6587\u4ef6\u4e2d\u6709\u6a21\u677f\n\n\n\nredis-server  /home/oms/redis.conf  &\n\n\n\n\n\u8fdb\u5165redis CLI\n\n\nredis-cli\n\n\n\n\n\u5173\u95edredis\n\n\n127.0.0.1:6379> shutdown\n\n\n\n\n\u4e00\u4e9b\u7b80\u5355\u7684\u547d\u4ee4\n\n\nkeys DBTime*\n\n\n\n\n\n\nlrange DBTime=10.60.14.70=NP1 0 10\n\n\n\n\n\n\n3.6 \u5b89\u88c5redis for python\n\n\npip3 install redis\n\n\n\n\n\n\n4. redis\u5b66\u4e60\n\n\n\u63a8\u8350\u7f51\u7ad9\u4e86\u89e3\u548c\u5b66\u4e60redis\n\n\nhttp://www.runoob.com/redis/redis-backup.html\n\nhttps://redis.io/documentation\n\n\n\n\n5. \u6e90\u4ee3\u7801\u4f4d\u7f6e\n\n\n\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801\n\n\nhttps://github.com/bsbforever/oms_django\n\n\n\u597d\u4e86 \u5173\u4e8eredis\u5c31\u8bb2\u5230\u8fd9\uff0c\u4e0b\u8282\u5f00\u59cb\u8bb2\u5982\u4f55\u83b7\u53d6\u4fe1\u606f\u5e76\u4fdd\u5b58\u5728redis\u4e2d",
            "title": "1.redis\u7684\u4ecb\u7ecd\u53ca\u5b89\u88c5"
        },
        {
            "location": "/2.1/#redis",
            "text": "2017-12-11 Python \u5b85\u5fc5\u5907  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms   \u6570\u636e\u5904\u7406:pandas   \u6570\u636e\u5b58\u50a8:MySQL,redis  \u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9a\u65f6\u83b7\u53d6TOP SQL\u8bed\u53e5\u4ee5\u53ca\u5982\u4f55\u5229\u7528pandas\u5904\u7406\u6570\u636e\uff0c\u5e76\u8ba9\u5176\u5728\u524d\u7aef\u663e\u793a  \u63a5\u4e0b\u6765\u8fd9\u4e2a\u4e13\u9898\u4ecb\u7ecd\u5982\u4f55\u83b7\u53d6\u6570\u636e\u5e93\u7684\u6027\u80fd\u6307\u6807\u7528\u6765\u53cd\u5e94\u6570\u636e\u5e93\u7684\u6027\u80fd\u8d8b\u52bf  \u9996\u5148\u4ecb\u7ecd\u4e0b\u7528\u6765\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684redis",
            "title": "redis\u7684\u4ecb\u7ecd\u53ca\u5b89\u88c5"
        },
        {
            "location": "/2.1/#1-redis",
            "text": "Redis\u662f\u4e00\u4e2a\u4f7f\u7528ANSI C\u7f16\u5199\u7684\u5f00\u6e90\u3001\u652f\u6301\u7f51\u7edc\u3001\u57fa\u4e8e\u5185\u5b58\u3001\u53ef\u9009\u6301\u4e45\u6027\u7684\u952e\u503c\u5bf9\u5b58\u50a8\u6570\u636e\u5e93\u3002  \u4ece2015\u5e746\u6708\u5f00\u59cb\uff0cRedis\u7684\u5f00\u53d1\u7531Redis Labs\u8d5e\u52a9  \u800c2013\u5e745\u6708\u81f32015\u5e746\u6708\u671f\u95f4\uff0c\u5176\u5f00\u53d1\u7531Pivotal\u8d5e\u52a9\u3002  \u57282013\u5e745\u6708\u4e4b\u524d\uff0c\u5176\u5f00\u53d1\u7531VMware\u8d5e\u52a9\u3002  \u6839\u636e\u6708\u5ea6\u6392\u884c\u7f51\u7ad9DB-Engines.com\u7684\u6570\u636e\u663e\u793a\uff0cRedis\u662f\u6700\u6d41\u884c\u7684\u952e\u503c\u5bf9\u5b58\u50a8\u6570\u636e\u5e93\u3002",
            "title": "1. redis\u4ecb\u7ecd"
        },
        {
            "location": "/2.1/#2-redis",
            "text": "\u6211\u4eec\u4f7f\u7528redis\u4f5c\u4e3a\u4fdd\u5b58Oracle\u7cfb\u7edf\u6570\u636e\u7684\u7684\u6570\u636e\u5e93\uff0c\u6211\u4eec\u5c06\u4e0b\u5217\u6570\u636e\u4fdd\u5b58\u5728\u91cc\u9762\uff0c\u5177\u4f53\u83b7\u53d6\u65b9\u5f0f\u540e\u9762\u505a\u4ecb\u7ecd   \u53e6\u5916\u8be5\u76d1\u63a7\u7cfb\u7edf\u5404\u7cfb\u7edf\u7684CPU\u53ca\u5185\u5b58\u4f7f\u7528\u7387\u4e5f\u4f7f\u7528redis\u5b58\u50a8",
            "title": "2. \u4e3a\u4f55\u4f7f\u7528redis"
        },
        {
            "location": "/2.1/#3-redisroot",
            "text": "\u5bf9\u4e8e\u914d\u7f6e\u6211\u4e5f\u4e0d\u662f\u5b8c\u5168\u4e86\u89e3\uff0c\u5982\u6709\u9519\u8bef\u8bf7\u6307\u6b63  \u6211\u4eec\u901a\u8fc7\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d:  https://redis.io/download",
            "title": "3. \u5982\u4f55\u5b89\u88c5redis(root\u6216\u666e\u901a\u7528\u6237)"
        },
        {
            "location": "/2.1/#31-redis",
            "text": "wget http://download.redis.io/releases/redis-4.0.6.tar.gz\n\ntar zxvf redis-4.0.6.tar.gz",
            "title": "3.1 \u4e0b\u8f7d\u89e3\u538bredis"
        },
        {
            "location": "/2.1/#32-redis",
            "text": "cd redis-4.0.6/\n\nmake",
            "title": "3.2 \u5b89\u88c5redis"
        },
        {
            "location": "/2.1/#33",
            "text": "make test  \u5982\u51fa\u73b0You need tcl 8.5 or newer in order to run the Redis test.\u9519\u8bef   \u5219\u5b89\u88c5\u6700\u65b0\u7248\u7684tcl  yum install tcl",
            "title": "3.3 \u6d4b\u8bd5\u5b89\u88c5"
        },
        {
            "location": "/2.1/#34-redis",
            "text": "\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf  \u5b89\u88c5\u5b8c\u6210\u540eredis\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5728\u5b89\u88c5\u6587\u4ef6\u7684src\u76ee\u5f55\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u5230PATH\u4e2d  PATH=$PATH:$HOME/.local/bin:$HOME/bin:/usr/local/python36/bin:/home/oms/software/redis-4.0.2/src  \u4fee\u6539\u914d\u7f6e\u6587\u4ef6  redis\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u5728\u5b89\u88c5\u6587\u4ef6\u4e2d\uff0c\u53d6\u6d88\u6ce8\u91ca\u6216\u4fee\u6539\u5982\u4e0b\u53c2\u6570  daemonize yes\n\npidfile /home/oms/redis_6379.pid\n\nsave 900 1\n\nsave 300 10\n\nsave 60 10000\n\ndbfilename dump.rdb\n\nappendonly yes\n\nappendfilename \"appendonly.aof\"\n\nappendfsync everysec",
            "title": "3.4 \u914d\u7f6eredis"
        },
        {
            "location": "/2.1/#35-redis",
            "text": "\u542f\u52a8redis  \u914d\u7f6e\u6587\u4ef6\u5728\u5b89\u88c5\u6587\u4ef6\u4e2d\u6709\u6a21\u677f  \nredis-server  /home/oms/redis.conf  &  \u8fdb\u5165redis CLI  redis-cli  \u5173\u95edredis  127.0.0.1:6379> shutdown  \u4e00\u4e9b\u7b80\u5355\u7684\u547d\u4ee4  keys DBTime*   lrange DBTime=10.60.14.70=NP1 0 10",
            "title": "3.5 \u542f\u52a8\u548c\u5173\u95edredis"
        },
        {
            "location": "/2.1/#36-redis-for-python",
            "text": "pip3 install redis",
            "title": "3.6 \u5b89\u88c5redis for python"
        },
        {
            "location": "/2.1/#4-redis",
            "text": "\u63a8\u8350\u7f51\u7ad9\u4e86\u89e3\u548c\u5b66\u4e60redis  http://www.runoob.com/redis/redis-backup.html\n\nhttps://redis.io/documentation",
            "title": "4. redis\u5b66\u4e60"
        },
        {
            "location": "/2.1/#5",
            "text": "\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801  https://github.com/bsbforever/oms_django  \u597d\u4e86 \u5173\u4e8eredis\u5c31\u8bb2\u5230\u8fd9\uff0c\u4e0b\u8282\u5f00\u59cb\u8bb2\u5982\u4f55\u83b7\u53d6\u4fe1\u606f\u5e76\u4fdd\u5b58\u5728redis\u4e2d",
            "title": "5. \u6e90\u4ee3\u7801\u4f4d\u7f6e"
        },
        {
            "location": "/2.2/",
            "text": "\u4f7f\u7528Django\u83b7\u53d6Oracle\u7cfb\u7edf\u72b6\u6001\u6570\u636e\u5e76\u5b58\u653e\u5728redis\u4e2d\n\n\n2017-12-12 Python \u5b85\u5fc5\u5907\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms\n\n\n\u524d\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528Python\u83b7\u53d6TOP SQL\u6570\u636e\u5e76\u5728\u524d\u7aef\u5c55\u73b0\u51fa\u6765\n\n\n\u5bf9\u4e8eOracle\u6570\u636e\u5e93\u7684\u8fd0\u7ef4\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u77e5\u9053\u7cfb\u7edf\u7684\u6574\u4f53\u8fd0\u884c\u72b6\u51b5\uff0c\u4f8b\u5982\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\uff0c\u89e3\u6790\uff0c\u547d\u4e2d\u7387\u7b49\n\n\n\u8fd9\u8282\u5c31\u8bb2\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u83b7\u53d6\n\n\n\u83b7\u53d6\u539f\u7406\n\n\n\u6211\u4eec\u901a\u8fc7\u67e5\u8be2v$sysstat \u7b49\u89c6\u56fe\u6765\u83b7\u53d6\u4fe1\u606f\n\n\n\u5173\u4e8eredis\u5b58\u50a8\uff0c\u6211\u4eec\u9009\u62e9\u7684value\u7684\u6570\u636e\u7c7b\u578b\u4e3a\u5217\u8868\n\n\n1. \u65b0\u5efaMySQL\u8868\u5b58\u653e\u76d1\u63a7\u6570\u636e\n\n\n\u6211\u4eec\u65e0\u9700\u4e8b\u5148\u5efa\u7acbredis\u7684key\u503c\n\n\n2. \u7f16\u5199\u81ea\u5b9a\u4e49\u547d\u4ee4\u83b7\u53d6\u6307\u6807\u5e76\u5b58\u5165\u6570\u636e\u5e93\n\n\n\u5982\u4f55\u521b\u5efa\u81ea\u5b9a\u4e49\u547d\u4ee4\u8bf7\u53c2\u8003\n\n\nhttp://www.zhaibibei.cn/oms/3.1/\n\n\n2.1 \u4e3b\u4f53\u7a0b\u5e8f\n\n\n\u8fd9\u91cc\u6211\u4eec\u7528oracle_hit_sysstat_redis.py\u7a0b\u5e8f\u6765\u83b7\u53d6Oracle TOP SQL\n\n\n\nvim monitor/management/commands/oracle_hit_sysstat_redis.py\n\n\n#coding=utf-8\nfrom django.core.management.base import BaseCommand\nfrom monitor.models import oraclelist\nfrom monitor.models import *\nimport os\nimport redis\nimport time\nfrom monitor.command.getoracle_hit_sysstat import *\nfrom monitor.command.sendmail_phone import *\nclass Command(BaseCommand):\n    def handle(self, *args, **options):\n        r=redis.StrictRedis()\n        #nowtime=str(time.time()).split('.')[0]\n        check_time=time.strftime('%Y%m%d %H', time.localtime())\n        if check_time.split()[1]=='00':\n            flag=1 #flag used to determin when should push two times\n            nowtime=str(time.mktime(time.strptime(check_time,'%Y%m%d %H'))).split('.')[0]\n            nnowtime=str(int(str(time.mktime(time.strptime(check_time,'%Y%m%d %H'))).split('.')[0])-1)\n        else:\n            flag=0\n            nowtime=str(time.mktime(time.strptime(check_time,'%Y%m%d %H'))).split('.')[0]\n        ip=oraclelist.objects.all().order_by('tnsname')\n        for i in ip:\n            if i.monitor_type==1 and i.hit_type==1:\n                ipaddress1=i.ipaddress\n                username=i.username\n                password=i.password\n                port=i.port\n                tnsname1=i.tnsname\n                try:\n                    db = cx_Oracle.connect(username+'/'+password+'@'+ipaddress1+':'+port+'/'+tnsname1 ,mode=cx_Oracle.SYSDBA)\n                except Exception as  e:\n                    content= (i.ipaddress+' is Unreachable,The reason is '+str(e)).strip()\n                    send_mail_phone(to_list,'Oracle Performance Monitor Exception Occured',content)\n                    print( content)\n                #   break\n                else:\n                    cursor = db.cursor()\n                    if i.version !='9i':\n                        dbtime=getdbtime(cursor)\n                        dbtimekey='DBTime='+ipaddress1+'='+tnsname1\n                        dbtimevalue=nowtime+':'+str(dbtime)\n                        r.lpush(dbtimekey,dbtimevalue)\n                        if flag==1:\n                            dbtimevalue1=nnowtime+':'+str(dbtime)\n                            r.lpush(dbtimekey,dbtimevalue1)\n\n                    getlibhit1=getlibhit(cursor)\n                    getdichit1=getdichit(cursor)\n                    getcachehit1=getcachehit(cursor)\n                    #undousage=getundousage(cursor)\n                    tempusage=gettemputilization(cursor)\n                    loadprofile=getloadprofile(cursor)\n                    cursor.close()\n                    db.close()\n                    cpu_time=loadprofile[0][1]\n                    execute=loadprofile[1][1]\n                    logons=loadprofile[2][1]\n                    hard_parse=loadprofile[3][1]\n                    total_parse=loadprofile[4][1]\n                    physical_reads=loadprofile[5][1]\n                    redo_size=loadprofile[6][1]\n                    logical_reads=loadprofile[7][1]\n                    sorts=loadprofile[8][1]\n                    fetch_by_rowid=loadprofile[9][1]\n                    fetch_continued_row=loadprofile[10][1]\n                    scan_rows_gotten=loadprofile[11][1]\n                    user_calls=loadprofile[12][1]\n                    user_commits=loadprofile[13][1]\n                    user_rollbacks=loadprofile[14][1]\n                    pinhit=getlibhit1[2]\n                    reloadhit=getlibhit1[4]\n                    dichit=getdichit1[2]\n                    cachehit=getcachehit1[0]\n\n                    executekey='ExecuteCount='+ipaddress1+'='+tnsname1\n                    executevalue=nowtime+':'+str(execute)\n                    if flag==1:\n                        executevalue1=nnowtime+':'+str(execute)\n                        r.lpush(executekey,executevalue1)\n                    r.lpush(executekey,executevalue)\n\n                    logonskey='Logons='+ipaddress1+'='+tnsname1\n                    logonsvalue=nowtime+':'+str(logons)\n                    if flag==1:\n                        logonsvalue1=nnowtime+':'+str(logons)\n                        r.lpush(logonskey,logonsvalue1)\n                    r.lpush(logonskey,logonsvalue)\n\n                    redosizekey='RedoSize='+ipaddress1+'='+tnsname1\n                    redosizevalue=nowtime+':'+str(redo_size)\n                    if flag==1:\n                        redosizevalue1=nnowtime+':'+str(redo_size)\n                        r.lpush(redosizekey,redosizevalue1)\n                    r.lpush(redosizekey,redosizevalue)\n\n                    sortskey='SortsDisk='+ipaddress1+'='+tnsname1\n                    sortsvalue=nowtime+':'+str(sorts)\n                    if flag==1:\n                        sortsvalue1=nnowtime+':'+str(sorts)\n                        r.lpush(sortskey,sortsvalue1)\n                    r.lpush(sortskey,sortsvalue)\n\n                    cpukey='CPUTime='+ipaddress1+'='+tnsname1\n                    cpuvalue=nowtime+':'+str(cpu_time)\n                    if flag==1:\n                        cpuvalue1=nnowtime+':'+str(cpu_time)\n                        r.lpush(cpukey,cpuvalue1)\n                    r.lpush(cpukey,cpuvalue)\n\n                    fetchbyrowidkey='FetchByRowid='+ipaddress1+'='+tnsname1\n                    fetchbyrowidvalue=nowtime+':'+str(fetch_by_rowid)\n                    if flag==1:\n                        fetchbyrowidvalue1=nnowtime+':'+str(fetch_by_rowid)\n                        r.lpush(fetchbyrowidkey,fetchbyrowidvalue1)\n                    r.lpush(fetchbyrowidkey,fetchbyrowidvalue)\n\n                    fetchconrowkey='FetchContinuedRow='+ipaddress1+'='+tnsname1\n                    fetchconrowvalue=nowtime+':'+str(fetch_continued_row)\n                    if flag==1:\n                        fetchconrowvalue1=nnowtime+':'+str(fetch_continued_row)\n                        r.lpush(fetchconrowkey,fetchconrowvalue1)\n                    r.lpush(fetchconrowkey,fetchconrowvalue)\n\n                    rowsgottenkey='ScanRowsGotten='+ipaddress1+'='+tnsname1\n                    rowsgottenvalue=nowtime+':'+str(scan_rows_gotten)\n                    if flag==1:\n                        rowsgottenvalue1=nnowtime+':'+str(scan_rows_gotten)\n                        r.lpush(rowsgottenkey,rowsgottenvalue1)\n                    r.lpush(rowsgottenkey,rowsgottenvalue)\n\n                    usercallskey='UserCalls='+ipaddress1+'='+tnsname1\n                    usercallsvalue=nowtime+':'+str(user_calls)\n                    if flag==1:\n                        usercallsvalue1=nnowtime+':'+str(user_calls)\n                        r.lpush(usercallskey,usercallsvalue1)\n                    r.lpush(usercallskey,usercallsvalue)\n\n                    hardparsekey='HardParse='+ipaddress1+'='+tnsname1\n                    hardparsevalue=nowtime+':'+str(hard_parse)\n                    if flag==1:\n                        hardparsevalue1=nnowtime+':'+str(hard_parse)\n                        r.lpush(hardparsekey,hardparsevalue1)\n                    r.lpush(hardparsekey,hardparsevalue)\n\n                    totalparsekey='TotalParse='+ipaddress1+'='+tnsname1\n                    totalparsevalue=nowtime+':'+str(total_parse)\n                    if flag==1:\n                        totalparsevalue1=nnowtime+':'+str(total_parse)\n                        r.lpush(totalparsekey,totalparsevalue1)\n                    r.lpush(totalparsekey,totalparsevalue)\n\n                    physicalreadskey='PhysicalReads='+ipaddress1+'='+tnsname1\n                    physicalreadsvalue=nowtime+':'+str(physical_reads)\n                    if flag==1:\n                        physicalreadsvalue1=nnowtime+':'+str(physical_reads)\n                        r.lpush(physicalreadskey,physicalreadsvalue1)\n                    r.lpush(physicalreadskey,physicalreadsvalue)\n\n                    logicalreadskey='LogicalReads='+ipaddress1+'='+tnsname1\n                    logicalreadsvalue=nowtime+':'+str(logical_reads)\n                    if flag==1:\n                        logicalreadsvalue1=nnowtime+':'+str(logical_reads)\n                        r.lpush(logicalreadskey,logicalreadsvalue1)\n                    r.lpush(logicalreadskey,logicalreadsvalue)\n\n                    commitskey='UserCommits='+ipaddress1+'='+tnsname1\n                    commitsvalue=nowtime+':'+str(user_commits)\n                    if flag==1:\n                        commitsvalue1=nnowtime+':'+str(user_commits)\n                        r.lpush(commitskey,commitsvalue1)\n                    r.lpush(commitskey,commitsvalue)\n\n                    rollbackskey='UserRollbacks='+ipaddress1+'='+tnsname1\n                    rollbacksvalue=nowtime+':'+str(user_rollbacks)\n                    if flag==1:\n                        rollbacksvalue1=nnowtime+':'+str(user_rollbacks)\n                        r.lpush(rollbackskey,rollbacksvalue1)\n                    r.lpush(rollbackskey,rollbacksvalue)\n\n                    reloadhitkey='ReloadHit='+ipaddress1+'='+tnsname1\n                    reloadvalue=nowtime+':'+str(reloadhit)\n                    if flag==1:\n                        reloadvalue1=nnowtime+':'+str(reloadhit)\n                        r.lpush(reloadhitkey,reloadvalue1)\n                    r.lpush(reloadhitkey,reloadvalue)\n\n                    pinhitkey='PinHit='+ipaddress1+'='+tnsname1\n                    pinvalue=nowtime+':'+str(pinhit)\n                    if flag==1:\n                        pinvalue1=nnowtime+':'+str(pinhit)\n                        r.lpush(pinhitkey,pinvalue1)\n                    r.lpush(pinhitkey,pinvalue)\n\n                    dichitkey='DicHit='+ipaddress1+'='+tnsname1\n                    dicvalue=nowtime+':'+str(dichit)\n                    if flag==1:\n                        dicvalue1=nnowtime+':'+str(dichit)\n                        r.lpush(dichitkey,dicvalue1)\n                    r.lpush(dichitkey,dicvalue)\n\n                    cachehitkey='CacheHit='+ipaddress1+'='+tnsname1\n                    cachevalue=nowtime+':'+str(cachehit)\n                    if flag==1:\n                        cachevalue1=nnowtime+':'+str(cachehit)\n                        r.lpush(cachehitkey,cachevalue1)\n                    r.lpush(cachehitkey,cachevalue)\n\n                    tempusagekey='TempUsage='+ipaddress1+'='+tnsname1\n                    tempusagevalue=nowtime+':'+str(tempusage)\n                    if flag==1:\n                        tempusagevalue1=nnowtime+':'+str(tempusage)\n                        r.lpush(tempusagekey,tempusagevalue1)\n                    r.lpush(tempusagekey,tempusagevalue)\n                    #undousagekey='UndoUsage='+ipaddress1+'='+tnsname1\n                    #undousagevalue=nowtime+':'+str(undousage)\n                    #r.lpush(undousagekey,undousagevalue)\n\n\n\n\n2.2 \u8c03\u7528\u7684\u51fd\u6570\n\n\n\u4e0a\u9762\u4e3b\u4f53\u7a0b\u5e8f\u8c03\u7528\u4e86\u4e00\u4e9b\u51fd\u6570\u7528\u4e8e\u4eceOracle\u6570\u636e\u5e93\u83b7\u53d6\u5fc5\u8981\u7684\u6570\u636e\n\n\n\u6587\u4ef6\u8def\u5f84\u4e3amonitor/command/getoracle_hit_sysstat.py\n\n\n\u8fd9\u91cc\u9009\u53d6\u51e0\u4e2a\uff0c\u5177\u4f53\u7684\u53c2\u89c1\u6211\u7684github\u4e3b\u9875,\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574\n\n\ndef getlibhit(cursor):\n\n    fp=open(os.environ['HOME_DIR']+'/mysite/monitor/command/sql/getlibhit.sql','r')\n\n    fp1=fp.read()\n\n    s=cursor.execute(fp1)\n\n    fp.close()\n\n    row=s.fetchone()\n\n    return row\n\n\n\ndef getdichit(cursor):\n\n    fp=open(os.environ['HOME_DIR']+'/mysite/monitor/command/sql/getdichit.sql','r')\n\n    fp1=fp.read()\n\n    s=cursor.execute(fp1)\n\n    fp.close()\n\n    row=s.fetchone()\n\n    return row\n\n\n\ndef getcachehit(cursor):\n\n    fp=open(os.environ['HOME_DIR']+'/mysite/monitor/command/sql/getcachehit.sql','r')\n\n    fp1=fp.read()\n\n    s=cursor.execute(fp1)\n\n    fp.close()\n\n    row=s.fetchone()\n\n    return row\n\n\n\ndef getloadprofile(cursor):\n\n    s=cursor.execute('select name, abs(value) from v$sysstat where name in (\\'parse count (hard)\\',\\'parse count (total)\\',\\'physical reads\\',\\'session logical reads\\',\\'user commits\\',\\'user rollbacks\\',\\'user calls\\',\\'sorts (disk)\\',\\'logons cumulative\\',\\'redo size\\',\\'execute count\\',\\'table fetch by rowid\\',\\'table fetch continued row\\',\\'table scan rows gotten\\',\\'CPU used by this session\\') order by name')\n\n    row=s.fetchall()\n\n    return row\n\n\n\n\n\u8fd9\u4e2a\u7a0b\u5e8f\u8bb2\u89e3\u5982\u4e0b:\n\n\n\n\n\n\n\u4e3a\u65b9\u4fbf\u540e\u9762\u7684\u6570\u636e\u5904\u7406\uff0c\u8fd9\u91cc\u83b7\u53d6\u5f53\u524d\u7684\u7edd\u5bf9\u65f6\u95f4(\u598217:01\u5206\u4f1a\u4fdd\u5b58\u4e3a17:00\u5206)\n\n\n\n\n\n\n\u7136\u540e\u4eceoraclelist\u8868\u4e2d\u83b7\u53d6\u4fe1\u606f\n\n\n\n\n\n\n\u904d\u5386\u6bcf\u4e2a\u6570\u636e\u5e93\uff0c\u5f53monitor_type\u4e3a1\u548chit_type\u4e3a1\u65f6\u7ee7\u7eed\n\n\n\n\n\n\n\u5229\u7528\u53d6\u51fa\u6765\u7684\u4fe1\u606f\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u5f53\u8fde\u63a5\u6210\u529f\u540e\u6267\u884c\u76f8\u5e94\u7684\u7a0b\u5e8f\u83b7\u53d6\u5404\u4e2a\u547d\u4e2d\u7387\u548c\u7cfb\u7edf\u6570\u636e\uff0c\u83b7\u53d6\u5b8c\u6210\u540e\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\n\n\n\n\n\n\n\u63a5\u4e0b\u6765\u4f7f\u7528redis\u7684push\u529f\u80fd\u4fdd\u5b58\u6570\u636e\uff0c\u4e3a\u65b9\u4fbf\u540e\u9762\u5904\u7406\u6570\u636e\uff0c\u5982\u679c\u5f53\u524d\u65f6\u95f4\u4e3a2017-12-12-0:00\u5219\u4f1a\u57282017-12-11-23:59\u4fdd\u5b58\u4e00\u6761\u76f8\u540c\u6570\u636e\n\n\n\n\n\n\n2.3 \u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n\n\n\u7531\u4e8e\u6211\u67099i\u7684\u5e93\uff0c\u6240\u4ee5\u9996\u5148\u4f1a\u5224\u65ad\u662f\u5426\u4e3a9i\uff0c\u662f\u7684\u8bdd\u5219\u4e0d\u4f1a\u83b7\u53d6DB Time\u7684\u6570\u636e\n\n\n\n\n\n\n\u5173\u4e8e\u4fdd\u5b58\u7684\u65f6\u95f4\u91c7\u7528\u7edd\u5bf9\u65f6\u95f4\uff0c\u5e76\u4e14\u6bcf\u59290\u70b9\u65f6\u95f4\u6bb5\u4f1a\u4fdd\u5b582\u6b21\n\n\n\n\n\n\n\u8fd9\u91cc\u8c03\u7528\u4e86send_mail\u51fd\u6570\u7528\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u5f02\u5e38\u65f6\u901a\u77e5\u6211\n\n\n\n\n\n\n3. \u6700\u7ec8\u7ed3\u679c\n\n\n\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fd0\u884c\n\n\n/usr/bin/python  /home/oms/mysite/manage.py oracle_hit_sysstat_redis\n\n\n\n\n\n\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\u6570\u636e\u5e93\u7684\u4fe1\u606f\u5df2\u7ecf\u4fdd\u5b58\u5728redis\u6570\u636e\u5e93\u4e2d\u4e86\n\n\n4. \u8bbe\u7f6e\u81ea\u52a8\u8fd0\u884c\n\n\n\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u6bcf\u5c0f\u65f6\u6267\u884c\u4e00\u6b21\uff0c\u5e76\u91cd\u5b9a\u5411\u6240\u6709\u65e5\u5fd7\u81f3\u4e00\u4e2a\u6587\u4ef6\n\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u8be5\u65e5\u5fd7\u6587\u4ef6\u5224\u65ad\u811a\u672c\u662f\u5426\u6b63\u5e38\u8fd0\u884c\n\n\n0   *   *   *   *   /usr/bin/python  /home/oms/mysite/manage.py oracle_hit_sysstat_redis>>/home/oms/mysite/crontab.log  2>&1\n\n\n\n\n5.\u6e90\u4ee3\u7801\u4f4d\u7f6e\n\n\n\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801\n\n\nhttps://github.com/bsbforever/oms_django\n\n\n\u597d\u4e86\uff0c\u8fd9\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528\u81ea\u5b9a\u4e49\u547d\u4ee4\u83b7\u53d6Oracle\u6570\u636e\u5e93\u7684\u6027\u80fd\u6307\u6807\u5e76\u4fdd\u5b58\u5728redis\u6570\u636e\u5e93\u4e2d\n\n\n\u4e0b\u8282\u4ecb\u7ecd\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u5c55\u793a\u5728\u4e00\u4e2a\u9875\u9762\u4e0a",
            "title": "2.\u4f7f\u7528Django\u83b7\u53d6Oracle\u7cfb\u7edf\u72b6\u6001\u6570\u636e\u5e76\u5b58\u653e\u5728redis\u4e2d"
        },
        {
            "location": "/2.2/#djangooracleredis",
            "text": "2017-12-12 Python \u5b85\u5fc5\u5907  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms  \u524d\u9762\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528Python\u83b7\u53d6TOP SQL\u6570\u636e\u5e76\u5728\u524d\u7aef\u5c55\u73b0\u51fa\u6765  \u5bf9\u4e8eOracle\u6570\u636e\u5e93\u7684\u8fd0\u7ef4\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u77e5\u9053\u7cfb\u7edf\u7684\u6574\u4f53\u8fd0\u884c\u72b6\u51b5\uff0c\u4f8b\u5982\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\uff0c\u89e3\u6790\uff0c\u547d\u4e2d\u7387\u7b49  \u8fd9\u8282\u5c31\u8bb2\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u83b7\u53d6",
            "title": "\u4f7f\u7528Django\u83b7\u53d6Oracle\u7cfb\u7edf\u72b6\u6001\u6570\u636e\u5e76\u5b58\u653e\u5728redis\u4e2d"
        },
        {
            "location": "/2.2/#_1",
            "text": "\u6211\u4eec\u901a\u8fc7\u67e5\u8be2v$sysstat \u7b49\u89c6\u56fe\u6765\u83b7\u53d6\u4fe1\u606f  \u5173\u4e8eredis\u5b58\u50a8\uff0c\u6211\u4eec\u9009\u62e9\u7684value\u7684\u6570\u636e\u7c7b\u578b\u4e3a\u5217\u8868",
            "title": "\u83b7\u53d6\u539f\u7406"
        },
        {
            "location": "/2.2/#1-mysql",
            "text": "\u6211\u4eec\u65e0\u9700\u4e8b\u5148\u5efa\u7acbredis\u7684key\u503c",
            "title": "1. \u65b0\u5efaMySQL\u8868\u5b58\u653e\u76d1\u63a7\u6570\u636e"
        },
        {
            "location": "/2.2/#2",
            "text": "\u5982\u4f55\u521b\u5efa\u81ea\u5b9a\u4e49\u547d\u4ee4\u8bf7\u53c2\u8003  http://www.zhaibibei.cn/oms/3.1/",
            "title": "2. \u7f16\u5199\u81ea\u5b9a\u4e49\u547d\u4ee4\u83b7\u53d6\u6307\u6807\u5e76\u5b58\u5165\u6570\u636e\u5e93"
        },
        {
            "location": "/2.2/#21",
            "text": "\u8fd9\u91cc\u6211\u4eec\u7528oracle_hit_sysstat_redis.py\u7a0b\u5e8f\u6765\u83b7\u53d6Oracle TOP SQL  \nvim monitor/management/commands/oracle_hit_sysstat_redis.py\n\n\n#coding=utf-8\nfrom django.core.management.base import BaseCommand\nfrom monitor.models import oraclelist\nfrom monitor.models import *\nimport os\nimport redis\nimport time\nfrom monitor.command.getoracle_hit_sysstat import *\nfrom monitor.command.sendmail_phone import *\nclass Command(BaseCommand):\n    def handle(self, *args, **options):\n        r=redis.StrictRedis()\n        #nowtime=str(time.time()).split('.')[0]\n        check_time=time.strftime('%Y%m%d %H', time.localtime())\n        if check_time.split()[1]=='00':\n            flag=1 #flag used to determin when should push two times\n            nowtime=str(time.mktime(time.strptime(check_time,'%Y%m%d %H'))).split('.')[0]\n            nnowtime=str(int(str(time.mktime(time.strptime(check_time,'%Y%m%d %H'))).split('.')[0])-1)\n        else:\n            flag=0\n            nowtime=str(time.mktime(time.strptime(check_time,'%Y%m%d %H'))).split('.')[0]\n        ip=oraclelist.objects.all().order_by('tnsname')\n        for i in ip:\n            if i.monitor_type==1 and i.hit_type==1:\n                ipaddress1=i.ipaddress\n                username=i.username\n                password=i.password\n                port=i.port\n                tnsname1=i.tnsname\n                try:\n                    db = cx_Oracle.connect(username+'/'+password+'@'+ipaddress1+':'+port+'/'+tnsname1 ,mode=cx_Oracle.SYSDBA)\n                except Exception as  e:\n                    content= (i.ipaddress+' is Unreachable,The reason is '+str(e)).strip()\n                    send_mail_phone(to_list,'Oracle Performance Monitor Exception Occured',content)\n                    print( content)\n                #   break\n                else:\n                    cursor = db.cursor()\n                    if i.version !='9i':\n                        dbtime=getdbtime(cursor)\n                        dbtimekey='DBTime='+ipaddress1+'='+tnsname1\n                        dbtimevalue=nowtime+':'+str(dbtime)\n                        r.lpush(dbtimekey,dbtimevalue)\n                        if flag==1:\n                            dbtimevalue1=nnowtime+':'+str(dbtime)\n                            r.lpush(dbtimekey,dbtimevalue1)\n\n                    getlibhit1=getlibhit(cursor)\n                    getdichit1=getdichit(cursor)\n                    getcachehit1=getcachehit(cursor)\n                    #undousage=getundousage(cursor)\n                    tempusage=gettemputilization(cursor)\n                    loadprofile=getloadprofile(cursor)\n                    cursor.close()\n                    db.close()\n                    cpu_time=loadprofile[0][1]\n                    execute=loadprofile[1][1]\n                    logons=loadprofile[2][1]\n                    hard_parse=loadprofile[3][1]\n                    total_parse=loadprofile[4][1]\n                    physical_reads=loadprofile[5][1]\n                    redo_size=loadprofile[6][1]\n                    logical_reads=loadprofile[7][1]\n                    sorts=loadprofile[8][1]\n                    fetch_by_rowid=loadprofile[9][1]\n                    fetch_continued_row=loadprofile[10][1]\n                    scan_rows_gotten=loadprofile[11][1]\n                    user_calls=loadprofile[12][1]\n                    user_commits=loadprofile[13][1]\n                    user_rollbacks=loadprofile[14][1]\n                    pinhit=getlibhit1[2]\n                    reloadhit=getlibhit1[4]\n                    dichit=getdichit1[2]\n                    cachehit=getcachehit1[0]\n\n                    executekey='ExecuteCount='+ipaddress1+'='+tnsname1\n                    executevalue=nowtime+':'+str(execute)\n                    if flag==1:\n                        executevalue1=nnowtime+':'+str(execute)\n                        r.lpush(executekey,executevalue1)\n                    r.lpush(executekey,executevalue)\n\n                    logonskey='Logons='+ipaddress1+'='+tnsname1\n                    logonsvalue=nowtime+':'+str(logons)\n                    if flag==1:\n                        logonsvalue1=nnowtime+':'+str(logons)\n                        r.lpush(logonskey,logonsvalue1)\n                    r.lpush(logonskey,logonsvalue)\n\n                    redosizekey='RedoSize='+ipaddress1+'='+tnsname1\n                    redosizevalue=nowtime+':'+str(redo_size)\n                    if flag==1:\n                        redosizevalue1=nnowtime+':'+str(redo_size)\n                        r.lpush(redosizekey,redosizevalue1)\n                    r.lpush(redosizekey,redosizevalue)\n\n                    sortskey='SortsDisk='+ipaddress1+'='+tnsname1\n                    sortsvalue=nowtime+':'+str(sorts)\n                    if flag==1:\n                        sortsvalue1=nnowtime+':'+str(sorts)\n                        r.lpush(sortskey,sortsvalue1)\n                    r.lpush(sortskey,sortsvalue)\n\n                    cpukey='CPUTime='+ipaddress1+'='+tnsname1\n                    cpuvalue=nowtime+':'+str(cpu_time)\n                    if flag==1:\n                        cpuvalue1=nnowtime+':'+str(cpu_time)\n                        r.lpush(cpukey,cpuvalue1)\n                    r.lpush(cpukey,cpuvalue)\n\n                    fetchbyrowidkey='FetchByRowid='+ipaddress1+'='+tnsname1\n                    fetchbyrowidvalue=nowtime+':'+str(fetch_by_rowid)\n                    if flag==1:\n                        fetchbyrowidvalue1=nnowtime+':'+str(fetch_by_rowid)\n                        r.lpush(fetchbyrowidkey,fetchbyrowidvalue1)\n                    r.lpush(fetchbyrowidkey,fetchbyrowidvalue)\n\n                    fetchconrowkey='FetchContinuedRow='+ipaddress1+'='+tnsname1\n                    fetchconrowvalue=nowtime+':'+str(fetch_continued_row)\n                    if flag==1:\n                        fetchconrowvalue1=nnowtime+':'+str(fetch_continued_row)\n                        r.lpush(fetchconrowkey,fetchconrowvalue1)\n                    r.lpush(fetchconrowkey,fetchconrowvalue)\n\n                    rowsgottenkey='ScanRowsGotten='+ipaddress1+'='+tnsname1\n                    rowsgottenvalue=nowtime+':'+str(scan_rows_gotten)\n                    if flag==1:\n                        rowsgottenvalue1=nnowtime+':'+str(scan_rows_gotten)\n                        r.lpush(rowsgottenkey,rowsgottenvalue1)\n                    r.lpush(rowsgottenkey,rowsgottenvalue)\n\n                    usercallskey='UserCalls='+ipaddress1+'='+tnsname1\n                    usercallsvalue=nowtime+':'+str(user_calls)\n                    if flag==1:\n                        usercallsvalue1=nnowtime+':'+str(user_calls)\n                        r.lpush(usercallskey,usercallsvalue1)\n                    r.lpush(usercallskey,usercallsvalue)\n\n                    hardparsekey='HardParse='+ipaddress1+'='+tnsname1\n                    hardparsevalue=nowtime+':'+str(hard_parse)\n                    if flag==1:\n                        hardparsevalue1=nnowtime+':'+str(hard_parse)\n                        r.lpush(hardparsekey,hardparsevalue1)\n                    r.lpush(hardparsekey,hardparsevalue)\n\n                    totalparsekey='TotalParse='+ipaddress1+'='+tnsname1\n                    totalparsevalue=nowtime+':'+str(total_parse)\n                    if flag==1:\n                        totalparsevalue1=nnowtime+':'+str(total_parse)\n                        r.lpush(totalparsekey,totalparsevalue1)\n                    r.lpush(totalparsekey,totalparsevalue)\n\n                    physicalreadskey='PhysicalReads='+ipaddress1+'='+tnsname1\n                    physicalreadsvalue=nowtime+':'+str(physical_reads)\n                    if flag==1:\n                        physicalreadsvalue1=nnowtime+':'+str(physical_reads)\n                        r.lpush(physicalreadskey,physicalreadsvalue1)\n                    r.lpush(physicalreadskey,physicalreadsvalue)\n\n                    logicalreadskey='LogicalReads='+ipaddress1+'='+tnsname1\n                    logicalreadsvalue=nowtime+':'+str(logical_reads)\n                    if flag==1:\n                        logicalreadsvalue1=nnowtime+':'+str(logical_reads)\n                        r.lpush(logicalreadskey,logicalreadsvalue1)\n                    r.lpush(logicalreadskey,logicalreadsvalue)\n\n                    commitskey='UserCommits='+ipaddress1+'='+tnsname1\n                    commitsvalue=nowtime+':'+str(user_commits)\n                    if flag==1:\n                        commitsvalue1=nnowtime+':'+str(user_commits)\n                        r.lpush(commitskey,commitsvalue1)\n                    r.lpush(commitskey,commitsvalue)\n\n                    rollbackskey='UserRollbacks='+ipaddress1+'='+tnsname1\n                    rollbacksvalue=nowtime+':'+str(user_rollbacks)\n                    if flag==1:\n                        rollbacksvalue1=nnowtime+':'+str(user_rollbacks)\n                        r.lpush(rollbackskey,rollbacksvalue1)\n                    r.lpush(rollbackskey,rollbacksvalue)\n\n                    reloadhitkey='ReloadHit='+ipaddress1+'='+tnsname1\n                    reloadvalue=nowtime+':'+str(reloadhit)\n                    if flag==1:\n                        reloadvalue1=nnowtime+':'+str(reloadhit)\n                        r.lpush(reloadhitkey,reloadvalue1)\n                    r.lpush(reloadhitkey,reloadvalue)\n\n                    pinhitkey='PinHit='+ipaddress1+'='+tnsname1\n                    pinvalue=nowtime+':'+str(pinhit)\n                    if flag==1:\n                        pinvalue1=nnowtime+':'+str(pinhit)\n                        r.lpush(pinhitkey,pinvalue1)\n                    r.lpush(pinhitkey,pinvalue)\n\n                    dichitkey='DicHit='+ipaddress1+'='+tnsname1\n                    dicvalue=nowtime+':'+str(dichit)\n                    if flag==1:\n                        dicvalue1=nnowtime+':'+str(dichit)\n                        r.lpush(dichitkey,dicvalue1)\n                    r.lpush(dichitkey,dicvalue)\n\n                    cachehitkey='CacheHit='+ipaddress1+'='+tnsname1\n                    cachevalue=nowtime+':'+str(cachehit)\n                    if flag==1:\n                        cachevalue1=nnowtime+':'+str(cachehit)\n                        r.lpush(cachehitkey,cachevalue1)\n                    r.lpush(cachehitkey,cachevalue)\n\n                    tempusagekey='TempUsage='+ipaddress1+'='+tnsname1\n                    tempusagevalue=nowtime+':'+str(tempusage)\n                    if flag==1:\n                        tempusagevalue1=nnowtime+':'+str(tempusage)\n                        r.lpush(tempusagekey,tempusagevalue1)\n                    r.lpush(tempusagekey,tempusagevalue)\n                    #undousagekey='UndoUsage='+ipaddress1+'='+tnsname1\n                    #undousagevalue=nowtime+':'+str(undousage)\n                    #r.lpush(undousagekey,undousagevalue)",
            "title": "2.1 \u4e3b\u4f53\u7a0b\u5e8f"
        },
        {
            "location": "/2.2/#22",
            "text": "\u4e0a\u9762\u4e3b\u4f53\u7a0b\u5e8f\u8c03\u7528\u4e86\u4e00\u4e9b\u51fd\u6570\u7528\u4e8e\u4eceOracle\u6570\u636e\u5e93\u83b7\u53d6\u5fc5\u8981\u7684\u6570\u636e  \u6587\u4ef6\u8def\u5f84\u4e3amonitor/command/getoracle_hit_sysstat.py  \u8fd9\u91cc\u9009\u53d6\u51e0\u4e2a\uff0c\u5177\u4f53\u7684\u53c2\u89c1\u6211\u7684github\u4e3b\u9875,\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574  def getlibhit(cursor):\n\n    fp=open(os.environ['HOME_DIR']+'/mysite/monitor/command/sql/getlibhit.sql','r')\n\n    fp1=fp.read()\n\n    s=cursor.execute(fp1)\n\n    fp.close()\n\n    row=s.fetchone()\n\n    return row\n\n\n\ndef getdichit(cursor):\n\n    fp=open(os.environ['HOME_DIR']+'/mysite/monitor/command/sql/getdichit.sql','r')\n\n    fp1=fp.read()\n\n    s=cursor.execute(fp1)\n\n    fp.close()\n\n    row=s.fetchone()\n\n    return row\n\n\n\ndef getcachehit(cursor):\n\n    fp=open(os.environ['HOME_DIR']+'/mysite/monitor/command/sql/getcachehit.sql','r')\n\n    fp1=fp.read()\n\n    s=cursor.execute(fp1)\n\n    fp.close()\n\n    row=s.fetchone()\n\n    return row\n\n\n\ndef getloadprofile(cursor):\n\n    s=cursor.execute('select name, abs(value) from v$sysstat where name in (\\'parse count (hard)\\',\\'parse count (total)\\',\\'physical reads\\',\\'session logical reads\\',\\'user commits\\',\\'user rollbacks\\',\\'user calls\\',\\'sorts (disk)\\',\\'logons cumulative\\',\\'redo size\\',\\'execute count\\',\\'table fetch by rowid\\',\\'table fetch continued row\\',\\'table scan rows gotten\\',\\'CPU used by this session\\') order by name')\n\n    row=s.fetchall()\n\n    return row  \u8fd9\u4e2a\u7a0b\u5e8f\u8bb2\u89e3\u5982\u4e0b:    \u4e3a\u65b9\u4fbf\u540e\u9762\u7684\u6570\u636e\u5904\u7406\uff0c\u8fd9\u91cc\u83b7\u53d6\u5f53\u524d\u7684\u7edd\u5bf9\u65f6\u95f4(\u598217:01\u5206\u4f1a\u4fdd\u5b58\u4e3a17:00\u5206)    \u7136\u540e\u4eceoraclelist\u8868\u4e2d\u83b7\u53d6\u4fe1\u606f    \u904d\u5386\u6bcf\u4e2a\u6570\u636e\u5e93\uff0c\u5f53monitor_type\u4e3a1\u548chit_type\u4e3a1\u65f6\u7ee7\u7eed    \u5229\u7528\u53d6\u51fa\u6765\u7684\u4fe1\u606f\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u5f53\u8fde\u63a5\u6210\u529f\u540e\u6267\u884c\u76f8\u5e94\u7684\u7a0b\u5e8f\u83b7\u53d6\u5404\u4e2a\u547d\u4e2d\u7387\u548c\u7cfb\u7edf\u6570\u636e\uff0c\u83b7\u53d6\u5b8c\u6210\u540e\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5    \u63a5\u4e0b\u6765\u4f7f\u7528redis\u7684push\u529f\u80fd\u4fdd\u5b58\u6570\u636e\uff0c\u4e3a\u65b9\u4fbf\u540e\u9762\u5904\u7406\u6570\u636e\uff0c\u5982\u679c\u5f53\u524d\u65f6\u95f4\u4e3a2017-12-12-0:00\u5219\u4f1a\u57282017-12-11-23:59\u4fdd\u5b58\u4e00\u6761\u76f8\u540c\u6570\u636e",
            "title": "2.2 \u8c03\u7528\u7684\u51fd\u6570"
        },
        {
            "location": "/2.2/#23",
            "text": "\u7531\u4e8e\u6211\u67099i\u7684\u5e93\uff0c\u6240\u4ee5\u9996\u5148\u4f1a\u5224\u65ad\u662f\u5426\u4e3a9i\uff0c\u662f\u7684\u8bdd\u5219\u4e0d\u4f1a\u83b7\u53d6DB Time\u7684\u6570\u636e    \u5173\u4e8e\u4fdd\u5b58\u7684\u65f6\u95f4\u91c7\u7528\u7edd\u5bf9\u65f6\u95f4\uff0c\u5e76\u4e14\u6bcf\u59290\u70b9\u65f6\u95f4\u6bb5\u4f1a\u4fdd\u5b582\u6b21    \u8fd9\u91cc\u8c03\u7528\u4e86send_mail\u51fd\u6570\u7528\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u5f02\u5e38\u65f6\u901a\u77e5\u6211",
            "title": "2.3 \u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879"
        },
        {
            "location": "/2.2/#3",
            "text": "\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fd0\u884c  /usr/bin/python  /home/oms/mysite/manage.py oracle_hit_sysstat_redis     \u53ef\u4ee5\u770b\u51fa\u6570\u636e\u5e93\u7684\u4fe1\u606f\u5df2\u7ecf\u4fdd\u5b58\u5728redis\u6570\u636e\u5e93\u4e2d\u4e86",
            "title": "3. \u6700\u7ec8\u7ed3\u679c"
        },
        {
            "location": "/2.2/#4",
            "text": "\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u6bcf\u5c0f\u65f6\u6267\u884c\u4e00\u6b21\uff0c\u5e76\u91cd\u5b9a\u5411\u6240\u6709\u65e5\u5fd7\u81f3\u4e00\u4e2a\u6587\u4ef6  \u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u8be5\u65e5\u5fd7\u6587\u4ef6\u5224\u65ad\u811a\u672c\u662f\u5426\u6b63\u5e38\u8fd0\u884c  0   *   *   *   *   /usr/bin/python  /home/oms/mysite/manage.py oracle_hit_sysstat_redis>>/home/oms/mysite/crontab.log  2>&1",
            "title": "4. \u8bbe\u7f6e\u81ea\u52a8\u8fd0\u884c"
        },
        {
            "location": "/2.2/#5",
            "text": "\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801  https://github.com/bsbforever/oms_django  \u597d\u4e86\uff0c\u8fd9\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528\u81ea\u5b9a\u4e49\u547d\u4ee4\u83b7\u53d6Oracle\u6570\u636e\u5e93\u7684\u6027\u80fd\u6307\u6807\u5e76\u4fdd\u5b58\u5728redis\u6570\u636e\u5e93\u4e2d  \u4e0b\u8282\u4ecb\u7ecd\u5982\u4f55\u5c06\u8fd9\u4e9b\u6570\u636e\u5c55\u793a\u5728\u4e00\u4e2a\u9875\u9762\u4e0a",
            "title": "5.\u6e90\u4ee3\u7801\u4f4d\u7f6e"
        },
        {
            "location": "/2.3/",
            "text": "\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6Oracle\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u5e76\u683c\u5f0f\u5316\u4e3ahighcharts\u9700\u8981\u7684\u683c\u5f0f\n\n\n2017-12-14 Oracle \u5b85\u5fc5\u5907\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms \n\n\n\u6570\u636e\u5904\u7406:pandas \n\n\n\u524d\u7aef\u5c55\u793a:highcharts\n\n\n\u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528Django\u83b7\u53d6\u6570\u636e\u5e93\u7684\u7cfb\u7edf\u72b6\u6001\u4fe1\u606f\u5e76\u5c06\u5176\u5b58\u5165redis\u6570\u636e\u5e93\n\n\n\u8fd9\u8282\u8bb2\u5982\u4f55\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6Oracle\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\n\n\n1. HighCharts\u683c\u5f0f\u8981\u6c42\n\n\n\u8fd9\u91cc\u4ee5\u5b98\u7f51\u7684\u6298\u7ebf\u56fe\u4e3a\u4f8b\n\n\n\n\n\u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u5185\u5bb9\u6709:\n\n\n\n\n\n\ntitle:\u6807\u9898\n\n\n\n\n\n\nsubtitle:\u5b50\u6807\u9898\n\n\n\n\n\n\nyAxis: Y\u8f74\u5185\u5bb9\n\n\n\n\n\n\nxAxis: X\u8f74\u5185\u5bb9(\u56fe\u4e2d\u4e3a\u663e\u793a)\n\n\n\n\n\n\nseries:\u5177\u4f53\u7684\u5185\u5bb9\uff0c\u662f\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e3a\u5b57\u5178\uff0c\u5b57\u5178\u5305\u542bname\u548cdata\u952e\uff0c\u952e\u5bf9\u5e94\u7684\u503c\u4e5f\u4e3a\u5217\u8868,\u6bcf\u4e2aname\u4ee3\u8868\u4e00\u6761\u7ebf\n\n\n\n\n\n\n\u6240\u4ee5\u6700\u540e\u6211\u4eec\u4f20\u9012\u7ed9template\u7684\u503c\u9700\u8981\u5305\u542b\u4e0a\u9762\u7684\u5185\u5bb9\uff0c\u5176\u4e2dtitle,subtilt,yAxis\u5185\u5bb9\u6211\u4eec\u901a\u8fc7\u8d4b\u503c\u7684\u65b9\u5f0f\n\n\nxAxis\u4ee5\u53caseries\u7684\u5185\u5bb9\u6211\u4eec\u901a\u8fc7pandas\u5904\u7406\u540e\u7684\u6570\u636e\u5f97\u5230\n\n\n\u5177\u4f53\u65b9\u6cd5\u89c1\u4e0b\u9762\u8bb2\u89e3\n\n\n2. Oracle\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u83b7\u53d6\u539f\u7406\n\n\n\u901a\u8fc7\u524d\u9762\u7684\u7ae0\u8282\u6211\u4eec\u83b7\u53d6\u4e86\u6bcf\u4e2a\u5c0f\u65f6v$sysstat\u89c6\u56fe\u91cc\u9762\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4ee5\nDBTime=10.65.1.119=DCPROD\n\u4e3a\u4f8b\uff0c\u5177\u4f53\u6570\u636e\u5982\u4e0b\u56fe\n\n\n\n\n\u5192\u53f7\u5de6\u8fb9\u4ee3\u8868\u65f6\u95f4\uff0c\u91c7\u7528Unix\u65f6\u95f4\u6233\u7684\u5f62\u5f0f\n\n\n\u5192\u53f7\u53f3\u8fb9\u4e3aDBTime\u7684\u503c\n\n\n\u8fd9\u91cc\u6211\u4eec\u52062\u90e8\u5206\u8bb2\u89e3\n\n\n\n\n\n\n\u4e00\u4e2a\u662f\u4ee5\u5929\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u7ec4\uff0c\u8ba1\u7b97\u6bcf\u5929\u7684DBTime\u5dee\u503c\n\n\n\n\n\n\n\u4e00\u4e2a\u662f\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u7ec4\uff0c\u8ba1\u7b97\u4e00\u5929\u4e2d\u6bcf\u5c0f\u65f6\u4e4b\u95f4\u7684\u5dee\u503c\n\n\n\n\n\n\n2.1 \u4ee5\u5929/\u5468\u4e3a\u5355\u4f4d\n\n\n1.\n \u9996\u5148\u904d\u5386redis\u4e2d\u5bf9\u5e94\u7684Key\u7684\u5217\u8868\u7684\u503c\uff0c\u5c06\u7b26\u5408\u65f6\u95f4\u6bb5\u7684\u63d0\u53d6\u51fa\u6765\uff0c\u4e4b\u540e\u5c06\u53d6\u51fa\u6765\u7684\u503c\u5904\u7406\u540e\u683c\u5f0f\u5316\u6210pandas\u7684DataFrame\u683c\u5f0f\n\n\n\u6ce8\u610f\uff1a\u5982\u679c\u6709\u5929\u6ca1\u6709\u76d1\u63a7\u6570\u636e\u5219\u4e0d\u4f1a\u6709\u8be5\u65e5\u671f\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e0b\u9762\u6709\u8bb2\n\n\nresult=pd.DataFrame({'week':dweek,'date':ddate,'time':dtime,'value':dvalue})\n\n\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5c06\u65e5\u671f\u548c\u5468\u522b\u5355\u72ec\u63d0\u53d6\u51fa\u6765\u4e86\n\n\n2.\n \u63a5\u4e0b\u6765\u6211\u4eec\u4ee5date\u6216week\u6765\u8fdb\u884c\u5206\u7ec4\n\n\nday_df=result['value'].groupby(result['date'])\n\n\n\n\n3.\n \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5206\u7ec4value\u7684\u7b2c\u4e00\u4e2a\u503c\u51cf\u53bb\u6700\u540e\u4e00\u4e2a\u503c\u5f97\u5230\u8be5\u5929\u7684DBTime\u6570\u503c\n\n\nday_result=(day_df.first() - day_df.last())/unit\n\n\n\n\n4. \n\u63a5\u4e0b\u6765\u5c06\u5f97\u5230\u7684\u5dee\u503c\u7684\u7ed3\u679c\u4ee5\u53ca\u65e5\u671f\u8f6c\u6362\u6210\u5217\u8868\u518d\u6b21\u683c\u5f0f\u5316\u6210DataFrame\u683c\u5f0f\n\n\nseries_reindex=pd.DataFrame({'date':day_result.index.values.tolist(),'value':day_result.values.tolist()})\n\n\n\n\n\n\n5.\n \u4e4b\u540e\u5c06dataframe\u7684index\u503c\u53d8\u4e3adate\u7684\u503c\n\n\nseries_reindex.set_index('date',inplace=True)\n\n\n\n\n\n\n6.\n \u4e3a\u9632\u6b62\u6709\u5929\u6570\u672a\u6709\u503c\u5bfc\u81f4\u753b\u56fe\u4e0d\u51c6\u786e\uff0c\u9700\u8981\u5c06\u8be5dataframe\u91cd\u65b0index\u4e0b\n\n\n\u4f8b\u5982\u6211\u8981\u67e5\u770b12/1-12/20\u7684\u8d8b\u52bf\uff0c\u5982\u679c12/10\u76d1\u63a7\u7cfb\u7edf\u6545\u969c\u5bfc\u81f4\u6ca1\u6709\u6570\u636e\uff0c\u8fd9\u65f6\u4e0a\u9762\u51fa\u6765\u7684\u7ed3\u679c\u662f\u6ca1\u670912/10\u8fd9\u4e00\u5929\u7684\uff0c\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u5f3a\u5236reindex\u4e0b\uff0c\u5c0612/10\u8fd9\u5929\u7684\u5dee\u503c\u8bbe\u4e3a0\n\n\n\u8fd9\u91cc\u7684x\u4e3a\u6839\u636e\u524d\u540e\u65f6\u95f4\u6bb5\u7b97\u51fa\u6765\u7684\u5929\u6570\u3001\n\n\ns=series_reindex.reindex(x,fill_value=0)\n\n\n\n\n7\n. \u6700\u540e\u6211\u4eec\u5c06\u7ed3\u679c\u53d8\u6210highcharts\u6240\u9700\u8981\u7684\u683c\u5f0f\n\n\nseries_singal['name']=key\n\nseries_singal['data']= s['value'].values.tolist()\n\nseries_singal['x']=s.index.values.tolist()\n\n\n\n\n\n\n\n\n2.2 \u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d\n\n\n1.\n \u9996\u5148\u904d\u5386redis\u4e2d\u5bf9\u5e94\u7684Key\u7684\u5217\u8868\u7684\u503c\uff0c\u5c06\u7b26\u5408\u65f6\u95f4\u6bb5\u7684\u63d0\u53d6\u51fa\u6765\uff0c\u4e4b\u540e\u5c06\u53d6\u51fa\u6765\u7684\u503c\u5904\u7406\u540e\u683c\u5f0f\u5316\u6210pandas\u7684DataFrame\u683c\u5f0f\n\n\n\u6ce8\u610f\uff1a\u5982\u679c\u6709\u7684\u5c0f\u65f6\u6ca1\u6709\u76d1\u63a7\u6570\u636e\u5219\u4e0d\u4f1a\u6709\u8be5\u65e5\u671f\uff0c\u598212/14 11:00 \u89e3\u51b3\u65b9\u6cd5\u4e0b\u9762\u6709\u8bb2\n\n\n\n\n2.\n \u63a5\u4e0b\u6765\u6211\u4eec\u4ee5date\u6765\u8fdb\u884c\u5206\u7ec4\n\n\nday_df=result.groupby(result['date'])\n\n\n\n\n3.\n \u4e4b\u540e\u904d\u5386\u5206\u7ec4\u7684\u540d\u79f0(name)\u548c\u5206\u7ec4\u503c(group)\n\n\n\u6bcf\u6b21\u8fed\u4ee3\u7684\u503c\u4ee3\u8868\u4e00\u5929\u768424\u5c0f\u65f6\uff0c\n\n\n\n\n4.\n \u4e4b\u540e\u5bf9\u6bcf\u4e00\u5929\u768424\u5c0f\u65f6\u8fdb\u884c\u7d22\u5f15\u91cd\u65b0\u8bbe\u7f6e\u53ca\u586b\u5145\uff0c\u8fd9\u91cc\u586b\u5145\u7684\u662f\u5e73\u5747\u503c\n\n\ngroup.set_index('time',inplace=True)\n\ns=group.reindex(new_index,fill_value=group['value'].mean())\n\n\n\n\n5.\n \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5c06\u8fd924\u5c0f\u65f6\u8ba1\u7b97\u5dee\u503c(25\u4e2a\u503c)\n\n\n\u91c7\u7528\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5c0625\u4e2a\u503c\u7684\u5217\u8868\u9519\u4f4d\u62c6\u5206\u4e3a2\u4e2a\u5217\u8868\uff0c\u4e4b\u540e\u76f8\u51cf\n\n\nj=flist[1:]\n\nk=flist[0:-1]\n\nfor i in range(0,len(j)):\n\n    flist1.append(j[i]-k[i])\n\n\n\n\n\n6.\n \u6700\u540e\u6211\u4eec\u5c06\u7ed3\u679c\u53d8\u6210highcharts\u6240\u9700\u8981\u7684\u683c\u5f0f\n\n\nseries_singal['name']=name\n\nfinal_series.append(series_singal)\n\n\n\n\n\n\n\n\n\n3. \u6e90\u4ee3\u7801\u4f4d\u7f6e\n\n\n\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801\n\n\nhttps://github.com/bsbforever/oms_django\n\n\nmonitor/command/views_performance.py\u4e2d\u7684loadprofile_highcharts\u51fd\u6570\n\n\nmonitor/command/views_oracleperformance.py\u4e2d\u7684oracle_performance_day\u51fd\u6570\n\n\n\u4e0b\u8282\u4e3a\u5982\u4f55\u8bb2\u5982\u4f55\u5728\u524d\u7aef\u663e\u793a",
            "title": "3.\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6Oracle\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u5e76\u683c\u5f0f\u5316\u4e3ahighcharts\u9700\u8981\u7684\u683c\u5f0f"
        },
        {
            "location": "/2.3/#pandasoraclehighcharts",
            "text": "2017-12-14 Oracle \u5b85\u5fc5\u5907  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms   \u6570\u636e\u5904\u7406:pandas   \u524d\u7aef\u5c55\u793a:highcharts  \u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u4f7f\u7528Django\u83b7\u53d6\u6570\u636e\u5e93\u7684\u7cfb\u7edf\u72b6\u6001\u4fe1\u606f\u5e76\u5c06\u5176\u5b58\u5165redis\u6570\u636e\u5e93  \u8fd9\u8282\u8bb2\u5982\u4f55\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6Oracle\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf",
            "title": "\u4f7f\u7528pandas\u5904\u7406\u6570\u636e\u83b7\u53d6Oracle\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u5e76\u683c\u5f0f\u5316\u4e3ahighcharts\u9700\u8981\u7684\u683c\u5f0f"
        },
        {
            "location": "/2.3/#1-highcharts",
            "text": "\u8fd9\u91cc\u4ee5\u5b98\u7f51\u7684\u6298\u7ebf\u56fe\u4e3a\u4f8b   \u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u5185\u5bb9\u6709:    title:\u6807\u9898    subtitle:\u5b50\u6807\u9898    yAxis: Y\u8f74\u5185\u5bb9    xAxis: X\u8f74\u5185\u5bb9(\u56fe\u4e2d\u4e3a\u663e\u793a)    series:\u5177\u4f53\u7684\u5185\u5bb9\uff0c\u662f\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e3a\u5b57\u5178\uff0c\u5b57\u5178\u5305\u542bname\u548cdata\u952e\uff0c\u952e\u5bf9\u5e94\u7684\u503c\u4e5f\u4e3a\u5217\u8868,\u6bcf\u4e2aname\u4ee3\u8868\u4e00\u6761\u7ebf    \u6240\u4ee5\u6700\u540e\u6211\u4eec\u4f20\u9012\u7ed9template\u7684\u503c\u9700\u8981\u5305\u542b\u4e0a\u9762\u7684\u5185\u5bb9\uff0c\u5176\u4e2dtitle,subtilt,yAxis\u5185\u5bb9\u6211\u4eec\u901a\u8fc7\u8d4b\u503c\u7684\u65b9\u5f0f  xAxis\u4ee5\u53caseries\u7684\u5185\u5bb9\u6211\u4eec\u901a\u8fc7pandas\u5904\u7406\u540e\u7684\u6570\u636e\u5f97\u5230  \u5177\u4f53\u65b9\u6cd5\u89c1\u4e0b\u9762\u8bb2\u89e3",
            "title": "1. HighCharts\u683c\u5f0f\u8981\u6c42"
        },
        {
            "location": "/2.3/#2-oracle",
            "text": "\u901a\u8fc7\u524d\u9762\u7684\u7ae0\u8282\u6211\u4eec\u83b7\u53d6\u4e86\u6bcf\u4e2a\u5c0f\u65f6v$sysstat\u89c6\u56fe\u91cc\u9762\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4ee5 DBTime=10.65.1.119=DCPROD \u4e3a\u4f8b\uff0c\u5177\u4f53\u6570\u636e\u5982\u4e0b\u56fe   \u5192\u53f7\u5de6\u8fb9\u4ee3\u8868\u65f6\u95f4\uff0c\u91c7\u7528Unix\u65f6\u95f4\u6233\u7684\u5f62\u5f0f  \u5192\u53f7\u53f3\u8fb9\u4e3aDBTime\u7684\u503c  \u8fd9\u91cc\u6211\u4eec\u52062\u90e8\u5206\u8bb2\u89e3    \u4e00\u4e2a\u662f\u4ee5\u5929\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u7ec4\uff0c\u8ba1\u7b97\u6bcf\u5929\u7684DBTime\u5dee\u503c    \u4e00\u4e2a\u662f\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u7ec4\uff0c\u8ba1\u7b97\u4e00\u5929\u4e2d\u6bcf\u5c0f\u65f6\u4e4b\u95f4\u7684\u5dee\u503c",
            "title": "2. Oracle\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u83b7\u53d6\u539f\u7406"
        },
        {
            "location": "/2.3/#21",
            "text": "1.  \u9996\u5148\u904d\u5386redis\u4e2d\u5bf9\u5e94\u7684Key\u7684\u5217\u8868\u7684\u503c\uff0c\u5c06\u7b26\u5408\u65f6\u95f4\u6bb5\u7684\u63d0\u53d6\u51fa\u6765\uff0c\u4e4b\u540e\u5c06\u53d6\u51fa\u6765\u7684\u503c\u5904\u7406\u540e\u683c\u5f0f\u5316\u6210pandas\u7684DataFrame\u683c\u5f0f  \u6ce8\u610f\uff1a\u5982\u679c\u6709\u5929\u6ca1\u6709\u76d1\u63a7\u6570\u636e\u5219\u4e0d\u4f1a\u6709\u8be5\u65e5\u671f\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e0b\u9762\u6709\u8bb2  result=pd.DataFrame({'week':dweek,'date':ddate,'time':dtime,'value':dvalue})   \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5c06\u65e5\u671f\u548c\u5468\u522b\u5355\u72ec\u63d0\u53d6\u51fa\u6765\u4e86  2.  \u63a5\u4e0b\u6765\u6211\u4eec\u4ee5date\u6216week\u6765\u8fdb\u884c\u5206\u7ec4  day_df=result['value'].groupby(result['date'])  3.  \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5206\u7ec4value\u7684\u7b2c\u4e00\u4e2a\u503c\u51cf\u53bb\u6700\u540e\u4e00\u4e2a\u503c\u5f97\u5230\u8be5\u5929\u7684DBTime\u6570\u503c  day_result=(day_df.first() - day_df.last())/unit  4.  \u63a5\u4e0b\u6765\u5c06\u5f97\u5230\u7684\u5dee\u503c\u7684\u7ed3\u679c\u4ee5\u53ca\u65e5\u671f\u8f6c\u6362\u6210\u5217\u8868\u518d\u6b21\u683c\u5f0f\u5316\u6210DataFrame\u683c\u5f0f  series_reindex=pd.DataFrame({'date':day_result.index.values.tolist(),'value':day_result.values.tolist()})   5.  \u4e4b\u540e\u5c06dataframe\u7684index\u503c\u53d8\u4e3adate\u7684\u503c  series_reindex.set_index('date',inplace=True)   6.  \u4e3a\u9632\u6b62\u6709\u5929\u6570\u672a\u6709\u503c\u5bfc\u81f4\u753b\u56fe\u4e0d\u51c6\u786e\uff0c\u9700\u8981\u5c06\u8be5dataframe\u91cd\u65b0index\u4e0b  \u4f8b\u5982\u6211\u8981\u67e5\u770b12/1-12/20\u7684\u8d8b\u52bf\uff0c\u5982\u679c12/10\u76d1\u63a7\u7cfb\u7edf\u6545\u969c\u5bfc\u81f4\u6ca1\u6709\u6570\u636e\uff0c\u8fd9\u65f6\u4e0a\u9762\u51fa\u6765\u7684\u7ed3\u679c\u662f\u6ca1\u670912/10\u8fd9\u4e00\u5929\u7684\uff0c\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u5f3a\u5236reindex\u4e0b\uff0c\u5c0612/10\u8fd9\u5929\u7684\u5dee\u503c\u8bbe\u4e3a0  \u8fd9\u91cc\u7684x\u4e3a\u6839\u636e\u524d\u540e\u65f6\u95f4\u6bb5\u7b97\u51fa\u6765\u7684\u5929\u6570\u3001  s=series_reindex.reindex(x,fill_value=0)  7 . \u6700\u540e\u6211\u4eec\u5c06\u7ed3\u679c\u53d8\u6210highcharts\u6240\u9700\u8981\u7684\u683c\u5f0f  series_singal['name']=key\n\nseries_singal['data']= s['value'].values.tolist()\n\nseries_singal['x']=s.index.values.tolist()",
            "title": "2.1 \u4ee5\u5929/\u5468\u4e3a\u5355\u4f4d"
        },
        {
            "location": "/2.3/#22",
            "text": "1.  \u9996\u5148\u904d\u5386redis\u4e2d\u5bf9\u5e94\u7684Key\u7684\u5217\u8868\u7684\u503c\uff0c\u5c06\u7b26\u5408\u65f6\u95f4\u6bb5\u7684\u63d0\u53d6\u51fa\u6765\uff0c\u4e4b\u540e\u5c06\u53d6\u51fa\u6765\u7684\u503c\u5904\u7406\u540e\u683c\u5f0f\u5316\u6210pandas\u7684DataFrame\u683c\u5f0f  \u6ce8\u610f\uff1a\u5982\u679c\u6709\u7684\u5c0f\u65f6\u6ca1\u6709\u76d1\u63a7\u6570\u636e\u5219\u4e0d\u4f1a\u6709\u8be5\u65e5\u671f\uff0c\u598212/14 11:00 \u89e3\u51b3\u65b9\u6cd5\u4e0b\u9762\u6709\u8bb2   2.  \u63a5\u4e0b\u6765\u6211\u4eec\u4ee5date\u6765\u8fdb\u884c\u5206\u7ec4  day_df=result.groupby(result['date'])  3.  \u4e4b\u540e\u904d\u5386\u5206\u7ec4\u7684\u540d\u79f0(name)\u548c\u5206\u7ec4\u503c(group)  \u6bcf\u6b21\u8fed\u4ee3\u7684\u503c\u4ee3\u8868\u4e00\u5929\u768424\u5c0f\u65f6\uff0c   4.  \u4e4b\u540e\u5bf9\u6bcf\u4e00\u5929\u768424\u5c0f\u65f6\u8fdb\u884c\u7d22\u5f15\u91cd\u65b0\u8bbe\u7f6e\u53ca\u586b\u5145\uff0c\u8fd9\u91cc\u586b\u5145\u7684\u662f\u5e73\u5747\u503c  group.set_index('time',inplace=True)\n\ns=group.reindex(new_index,fill_value=group['value'].mean())  5.  \u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5c06\u8fd924\u5c0f\u65f6\u8ba1\u7b97\u5dee\u503c(25\u4e2a\u503c)  \u91c7\u7528\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5c0625\u4e2a\u503c\u7684\u5217\u8868\u9519\u4f4d\u62c6\u5206\u4e3a2\u4e2a\u5217\u8868\uff0c\u4e4b\u540e\u76f8\u51cf  j=flist[1:]\n\nk=flist[0:-1]\n\nfor i in range(0,len(j)):\n\n    flist1.append(j[i]-k[i])  6.  \u6700\u540e\u6211\u4eec\u5c06\u7ed3\u679c\u53d8\u6210highcharts\u6240\u9700\u8981\u7684\u683c\u5f0f  series_singal['name']=name\n\nfinal_series.append(series_singal)",
            "title": "2.2 \u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d"
        },
        {
            "location": "/2.3/#3",
            "text": "\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801  https://github.com/bsbforever/oms_django  monitor/command/views_performance.py\u4e2d\u7684loadprofile_highcharts\u51fd\u6570  monitor/command/views_oracleperformance.py\u4e2d\u7684oracle_performance_day\u51fd\u6570  \u4e0b\u8282\u4e3a\u5982\u4f55\u8bb2\u5982\u4f55\u5728\u524d\u7aef\u663e\u793a",
            "title": "3. \u6e90\u4ee3\u7801\u4f4d\u7f6e"
        },
        {
            "location": "/2.4/",
            "text": "\u5229\u7528Django\u5728\u524d\u7aef\u5c55\u793aOracle \u72b6\u6001\u8d8b\u52bf\n\n\n2017-12-15 Python \u5b85\u5fc5\u5907\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms \n\n\n\u6570\u636e\u5904\u7406:pandas \n\n\n\u524d\u7aef\u5c55\u793a:highcharts\n\n\n\u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9a\u65f6\u83b7\u53d6\u7cfb\u7edfOracle\u72b6\u6001\u8bed\u53e5\u4ee5\u53ca\u5982\u4f55\u5229\u7528pandas\u5904\u7406\u6210highcharts\u8bc6\u522b\u7684\u683c\u5f0f\n\n\n\u8fd9\u8282\u8bb2\u5982\u4f55\u8ba9\u5176\u5728\u524d\u7aef\u663e\u793a\n\n\n\u5efa\u7acb\u9875\u9762\u7684\u6b65\u9aa4\n\n\n\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u8fd9\u5f20\u56fe\u7684\u6b65\u9aa4\u6765\u8bf4\u660e\u5982\u4f55\u5efa\u7acb\u9875\u9762\n\n\n\n\n1. urls.py\u9875\u9762\n\n\nfrom django.conf.urls import  url, include\nfrom monitor import views\n\nurlpatterns = [\n    url(r'^$', views.index, name='index'),\n    url(r'^oracle_command/$',views.oracle_command, name='oracle_command'),\n    url(r'^commandresult/$',views.commandresult, name='commandresult'),\n    url(r'^oracle_status$',views.oracle_status, name='oracle_status'),\n    url(r'^oracle_performance$',views.oracle_performance, name='oracle_performance'),\n    url(r'^performance$',views.performance, name='performance'),\n    url(r'^oracle_topevent$',views.oracle_topevent, name='oracle_topevent'),\n    url(r'^check_topsql$',views.check_topsql, name='check_topsql'),\n    url(r'^addbaseline$',views.addbaseline, name='addbaseline'),\n    url(r'^check_hitratio$',views.check_hitratio, name='check_hitratio'),\n    url(r'^linux_list$',views.linux_list, name='linux_list'),\n]\n\n\n\n\n\n\n\n\noracle_performance\u5206\u522b\u4e3a\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u7684\u9875\u9762(\u4ee5\u5929\u4e3a\u5355\u4f4d) \n\n\n\n\n\n\nperformance\u5206\u522b\u4e3a\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u7684\u9875\u9762(\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d)\n\n\n\n\n\n\n2. views.py\n\n\n\u8fd9\u91cc\u4ee5oracle_performance\u51fd\u6570\u505a\u4f8b\u5b50\u8bb2\u89e3\n\n\ndef oracle_performance(request):\n    baseline=[]\n    ip=[]\n    ip1=oraclelist.objects.all().order_by('ipaddress')\n    for i in ip1:\n        ip.append(i.ipaddress+':'+i.tnsname)\n    if request.method == 'POST': # If the form has been submitted...\n        #return HttpResponse('ss')\n        form = charts_oracle_performance(request.POST) # A form bound to the POST data\n        if form.is_valid(): # All validation rules pass\n            starttime1  = request.POST['starttime']\n            endtime1  = request.POST['endtime']\n            performance_type= form.cleaned_data['performance_type']\n            ipaddress_tnsname_list=form.cleaned_data['ipaddress']\n            interval=request.POST['interval']\n            if starttime1 =='' or endtime1 =='':\n                return HttpResponse('Please give the Start and End time')\n            else:\n                starttime=int(str(time.mktime(time.strptime(starttime1,'%Y%m%d'))).split('.')[0])\n                endtime=int(str(time.mktime(time.strptime(endtime1,'%Y%m%d'))).split('.')[0])\n            if  starttime>endtime:\n                return HttpResponse('The Start time must larger than the End time')\n                #starttime=int(str(time.mktime(time.strptime(starttime1,'%Y%m%d %H:%M:%S'))))\n                #endtime=int(str(time.mktime(time.strptime(endtime1,'%Y%m%d %H:%M:%S'))))\n            else:\n                    title='Oracle Performance '+'-'+performance_type\n                    subtitle=performance_type\n                    title_y=' Blocks/Seconds'\n                    if performance_type in ['PhysicalReads','LogicalReads']:\n                        unit='blocks/s'\n                    elif performance_type in ['RedoSize']:\n                        unit='bytes/s'\n                    elif performance_type in ['DBTime','CPUTime']:\n                        unit='Minites'\n                    else:\n                        unit='times/s'\n                    final_series=[]\n                    #final_series=oracle_performance_day(performance_type,ipaddress_tnsname_list,starttime,endtime,interval)\n                    #return HttpResponse(final_series)\n                    if interval=='day':\n                        final_series=oracle_performance_day(performance_type,ipaddress_tnsname_list,starttime,endtime,interval)\n                        x_categories=final_series[0]['x']\n                    elif interval=='week':\n                        final_series=oracle_performance_week(performance_type,ipaddress_tnsname_list,starttime,endtime,interval)\n                        x_categories=final_series[0]['x']\n                    #return HttpResponse(final_series)\n                    dic={'categories':x_categories,'series':final_series,'title':title,'subtitle':subtitle,'unit':unit,'title_y':title_y}\n                    #return render_to_response('highcharts_histogram.html',dic) # Redirect after POST\n                    #return HttpResponse (final_series)\n                    return render_to_response('highcharts.html',dic) # Redirect after POST\n        else:\n           return render(request, 'oracle_performance.html', {'form': form})\n    else:\n        form = charts_oracle_performance() # An unbound form\n        d1=datetime.datetime.now()\n        etime= d1.strftime(\"%Y%m%d\")\n        stime=(d1-datetime.timedelta(hours=720)).strftime(\"%Y%m%d\")\n        #etime= d1.strftime(\"%Y%m%d %H\")\n        #stime=(d1-datetime.timedelta(hours=24)).strftime(\"%Y%m%d %H\")\n        dic={'form':form,'etime':etime,'stime':stime}\n        #dic={'form':form,'ip':ip,'ipaddress_checked':ipaddress_checked,'etime':etime,'stime':stime}\n        return render(request, 'oracle_performance.html', dic)\n\n\n\n\n\u4e0a\u9762\u7684url\u8bbe\u5b9a\u8c03\u7528views.py\u91cc\u9762\u7684oracle_performance\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8bb2\u89e3\u5982\u4e0b:\n\n\n\n\n\n\n\u9996\u5148\u5224\u65ad\u8bf7\u6c42\u7684\u65b9\u6cd5\u662f\u4e0d\u662fpost(\u63d0\u4ea4\u8868\u5355\u524d)\uff0c\u5982\u679c\u4e0d\u662f\u5219\u6253\u5f00oracle_performance.html\u9875\u9762\uff0ccharts_oracle_performance\u4e3a\u5b9a\u4e49\u7684\u8868\u5355\uff0c\u53ef\u5728forms.py\u4e2d\u5b9a\u4e49\n\n\n\n\n\n\n\u5982\u679c\u8bf7\u6c42\u65b9\u6cd5\u4e3apost(\u63d0\u4ea4\u8868\u5355\u540e)\uff0c\u9996\u5148\u9a8c\u8bc1\u8f93\u5165\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u6b63\u786e\u5219\u83b7\u53d6\u76f8\u5e94\u7684ipaddress,tnsname,performance_type\u7b49\u4fe1\u606f,\n\n\n\n\n\n\n\u63a5\u4e0b\u6765\u6839\u636eperformance_type\u7684\u7c7b\u578b(\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\u7b49)\u8c03\u7528monitor/command/views_oracleperformance.py\u6587\u4ef6\u91cc\u9762\u7684\u65b9\u6cd5\u6765\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8bb2\u89e3\u5728\u6628\u5929\u7684\u516c\u4f17\u53f7\uff0c\u5927\u5bb6\u53ef\u81ea\u884c\u67e5\u770b\n\n\n\n\n\n\n\u6700\u540e\u6211\u4eec\u5c06TOP SQL\u76f8\u5173\u7684\u5185\u5bb9\u5c01\u88c5\u6210\u5b57\u5178\u91cd\u5b9a\u5411\u5230\u76f8\u5e94\u7684template\u6587\u4ef6\u4e2d\n\n\n\n\n\n\n3. template\u6587\u4ef6\n\n\n\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528highcharts.html\u6587\u4ef6\u6765\u663e\u793a\u8d8b\u52bf\u56fe\n\n\n<div id='newadd'>\n<script>\n$(function () {\n    $('#container').highcharts({\n        title: {\n            text: '{{title|safe}}',\n            x: -20 //center\n        },\n        xAxis: {\n            categories: {{categories|safe}}\n        },\n        yAxis: {\n            title: {\n                text: '{{unit}}'\n            },\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: '#808080'\n            }]\n        },\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'middle',\n            borderWidth: 0\n        },\n\n         plotOptions: {\n            series: {\n                cursor: 'pointer',\n                point: {\n                events: {\n                    click: function(e) {\n                         $(\"#test3\").val(this.y+'s'+this.x);\n                        //\u4e0a\u9762\u662f\u5f53\u524d\u9875\u8df3\u8f6c\uff0c\u5982\u679c\u662f\u8981\u8df3\u51fa\u65b0\u9875\u9762\uff0c\u90a3\u5c31\u7528\n                        //window.open(e.point.url);\n                        //\u8fd9\u91cc\u7684url\u8981\u540e\u9762\u7684data\u91cc\u7ed9\u51fa\n                }\n                }\n\n            },\n            }\n           },\n\n\n        series:[\n                {% for i in series %}\n                {\n                    name: '{{i.name}}',\n                    data: {{i.data}}\n                    },\n                {% endfor %}\n                ]                    \n        });\n});                       \n</script>\n</div>\n\n\n\n\n\u8fd9\u91cc\u901a\u8fc7highcharts\u6765\u5c55\u73b0\u6570\u636e\u5e93\u6027\u80fd\u8d8b\u52bf\u72b6\u6001\n\n\nDjango\u5141\u8bb8\u5728html\u6587\u4ef6\u5185\u90e8\u4f7f\u7528\u7a0bfor\u5faa\u73af\u7684\u5f62\u5f0f\u6765\u8fed\u4ee3\u5217\u8868\n\n\n\u5173\u4e8eoracle_peforance\u9875\u9762\u5c31\u8bf4\u5230\u8fd9\u4e86\uff0cperformance\u9875\u9762\u53ef\u81ea\u884c\u53c2\u8003\u6e90\u7801\n\n\n4. \u6548\u679c\u5c55\u793a\n\n\n1.\u6570\u636e\u5e93\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf(\u5929\u4e3a\u5355\u4f4d)\n\n\n\u9996\u5148\u662f\u8868\u5355\u63d0\u4ea4\u4e4b\u524d\u7684\u754c\u9762\n\n\n\n\n\n\n\n\n\u8fd9\u91cc\u9009\u62e9\u9700\u8981\u67e5\u8be2\u7684\u6570\u636e\u5e93\uff0c\u652f\u6301\u591a\u4e2a\u6570\u636e\u5e93\u540c\u65f6\u67e5\u8be2\n\n\n\n\n\n\n\u7136\u540e\u662f\u8d77\u6b62\u65f6\u95f4\u4ee5\u53ca\u6027\u80fd\u7c7b\u578b\n\n\n\n\n\n\n\u6700\u540e\u53ef\u4ee5\u9009\u62e9\u5929\u548c\u5468\u4e3a\u5355\u4f4d\n\n\n\n\n\n\n\u70b9\u51fb\u63d0\u4ea4\u540e\u4f1a\u5c55\u793a\u5404\u4e2a\u6570\u636e\u5e93\u8be5\u65f6\u95f4\u6bb5\u7684\u8d8b\u52bf\u56fe\n\n\n\n\n\n\n 2.\u6570\u636e\u5e93\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf(\u5c0f\u65f6\u4e3a\u5355\u4f4d)\n\n\n\u9996\u5148\u662f\u8868\u5355\u63d0\u4ea4\u4e4b\u524d\u7684\u754c\u9762\n\n\n\n\n\n\n\n\n\u8fd9\u91cc\u9009\u62e9\u9700\u8981\u67e5\u8be2\u7684\u6570\u636e\u5e93\n\n\n\n\n\n\n\u7136\u540e\u662f\u8d77\u6b62\u65f6\u95f4\u4ee5\u53ca\u6027\u80fd\u7c7b\u578b\n\n\n\n\n\n\n\u6700\u540e\u662f\u662f\u5426\u6bd4\u8f83\u57fa\u7ebf,\u8fd9\u4e2a\u540e\u7eed\u4f1a\u6709\u5355\u72ec\u4ecb\u7ecd\n\n\n\n\n\n\n\u70b9\u51fb\u63d0\u4ea4\u540e\u4f1a\u5c55\u793a\u51fa\u6bcf\u5929\u5404\u4e2a\u65f6\u95f4\u6bb5\u7684\u8d8b\u52bf\u56fe\n\n\n\n\n5. \u6e90\u4ee3\u7801\u4f4d\u7f6e\n\n\n\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801\n\n\nhttps://github.com/bsbforever/oms_django",
            "title": "4.\u5229\u7528Django\u5728\u524d\u7aef\u5c55\u793aOracle \u72b6\u6001\u8d8b\u52bf"
        },
        {
            "location": "/2.4/#djangooracle",
            "text": "2017-12-15 Python \u5b85\u5fc5\u5907  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms   \u6570\u636e\u5904\u7406:pandas   \u524d\u7aef\u5c55\u793a:highcharts  \u901a\u8fc7\u4e0a\u9762\u6211\u4eec\u5df2\u4ecb\u7ecd\u4e86\u5982\u4f55\u5b9a\u65f6\u83b7\u53d6\u7cfb\u7edfOracle\u72b6\u6001\u8bed\u53e5\u4ee5\u53ca\u5982\u4f55\u5229\u7528pandas\u5904\u7406\u6210highcharts\u8bc6\u522b\u7684\u683c\u5f0f  \u8fd9\u8282\u8bb2\u5982\u4f55\u8ba9\u5176\u5728\u524d\u7aef\u663e\u793a",
            "title": "\u5229\u7528Django\u5728\u524d\u7aef\u5c55\u793aOracle \u72b6\u6001\u8d8b\u52bf"
        },
        {
            "location": "/2.4/#_1",
            "text": "\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u8fd9\u5f20\u56fe\u7684\u6b65\u9aa4\u6765\u8bf4\u660e\u5982\u4f55\u5efa\u7acb\u9875\u9762",
            "title": "\u5efa\u7acb\u9875\u9762\u7684\u6b65\u9aa4"
        },
        {
            "location": "/2.4/#1-urlspy",
            "text": "from django.conf.urls import  url, include\nfrom monitor import views\n\nurlpatterns = [\n    url(r'^$', views.index, name='index'),\n    url(r'^oracle_command/$',views.oracle_command, name='oracle_command'),\n    url(r'^commandresult/$',views.commandresult, name='commandresult'),\n    url(r'^oracle_status$',views.oracle_status, name='oracle_status'),\n    url(r'^oracle_performance$',views.oracle_performance, name='oracle_performance'),\n    url(r'^performance$',views.performance, name='performance'),\n    url(r'^oracle_topevent$',views.oracle_topevent, name='oracle_topevent'),\n    url(r'^check_topsql$',views.check_topsql, name='check_topsql'),\n    url(r'^addbaseline$',views.addbaseline, name='addbaseline'),\n    url(r'^check_hitratio$',views.check_hitratio, name='check_hitratio'),\n    url(r'^linux_list$',views.linux_list, name='linux_list'),\n]    oracle_performance\u5206\u522b\u4e3a\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u7684\u9875\u9762(\u4ee5\u5929\u4e3a\u5355\u4f4d)     performance\u5206\u522b\u4e3a\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf\u7684\u9875\u9762(\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d)",
            "title": "1. urls.py\u9875\u9762"
        },
        {
            "location": "/2.4/#2-viewspy",
            "text": "\u8fd9\u91cc\u4ee5oracle_performance\u51fd\u6570\u505a\u4f8b\u5b50\u8bb2\u89e3  def oracle_performance(request):\n    baseline=[]\n    ip=[]\n    ip1=oraclelist.objects.all().order_by('ipaddress')\n    for i in ip1:\n        ip.append(i.ipaddress+':'+i.tnsname)\n    if request.method == 'POST': # If the form has been submitted...\n        #return HttpResponse('ss')\n        form = charts_oracle_performance(request.POST) # A form bound to the POST data\n        if form.is_valid(): # All validation rules pass\n            starttime1  = request.POST['starttime']\n            endtime1  = request.POST['endtime']\n            performance_type= form.cleaned_data['performance_type']\n            ipaddress_tnsname_list=form.cleaned_data['ipaddress']\n            interval=request.POST['interval']\n            if starttime1 =='' or endtime1 =='':\n                return HttpResponse('Please give the Start and End time')\n            else:\n                starttime=int(str(time.mktime(time.strptime(starttime1,'%Y%m%d'))).split('.')[0])\n                endtime=int(str(time.mktime(time.strptime(endtime1,'%Y%m%d'))).split('.')[0])\n            if  starttime>endtime:\n                return HttpResponse('The Start time must larger than the End time')\n                #starttime=int(str(time.mktime(time.strptime(starttime1,'%Y%m%d %H:%M:%S'))))\n                #endtime=int(str(time.mktime(time.strptime(endtime1,'%Y%m%d %H:%M:%S'))))\n            else:\n                    title='Oracle Performance '+'-'+performance_type\n                    subtitle=performance_type\n                    title_y=' Blocks/Seconds'\n                    if performance_type in ['PhysicalReads','LogicalReads']:\n                        unit='blocks/s'\n                    elif performance_type in ['RedoSize']:\n                        unit='bytes/s'\n                    elif performance_type in ['DBTime','CPUTime']:\n                        unit='Minites'\n                    else:\n                        unit='times/s'\n                    final_series=[]\n                    #final_series=oracle_performance_day(performance_type,ipaddress_tnsname_list,starttime,endtime,interval)\n                    #return HttpResponse(final_series)\n                    if interval=='day':\n                        final_series=oracle_performance_day(performance_type,ipaddress_tnsname_list,starttime,endtime,interval)\n                        x_categories=final_series[0]['x']\n                    elif interval=='week':\n                        final_series=oracle_performance_week(performance_type,ipaddress_tnsname_list,starttime,endtime,interval)\n                        x_categories=final_series[0]['x']\n                    #return HttpResponse(final_series)\n                    dic={'categories':x_categories,'series':final_series,'title':title,'subtitle':subtitle,'unit':unit,'title_y':title_y}\n                    #return render_to_response('highcharts_histogram.html',dic) # Redirect after POST\n                    #return HttpResponse (final_series)\n                    return render_to_response('highcharts.html',dic) # Redirect after POST\n        else:\n           return render(request, 'oracle_performance.html', {'form': form})\n    else:\n        form = charts_oracle_performance() # An unbound form\n        d1=datetime.datetime.now()\n        etime= d1.strftime(\"%Y%m%d\")\n        stime=(d1-datetime.timedelta(hours=720)).strftime(\"%Y%m%d\")\n        #etime= d1.strftime(\"%Y%m%d %H\")\n        #stime=(d1-datetime.timedelta(hours=24)).strftime(\"%Y%m%d %H\")\n        dic={'form':form,'etime':etime,'stime':stime}\n        #dic={'form':form,'ip':ip,'ipaddress_checked':ipaddress_checked,'etime':etime,'stime':stime}\n        return render(request, 'oracle_performance.html', dic)  \u4e0a\u9762\u7684url\u8bbe\u5b9a\u8c03\u7528views.py\u91cc\u9762\u7684oracle_performance\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8bb2\u89e3\u5982\u4e0b:    \u9996\u5148\u5224\u65ad\u8bf7\u6c42\u7684\u65b9\u6cd5\u662f\u4e0d\u662fpost(\u63d0\u4ea4\u8868\u5355\u524d)\uff0c\u5982\u679c\u4e0d\u662f\u5219\u6253\u5f00oracle_performance.html\u9875\u9762\uff0ccharts_oracle_performance\u4e3a\u5b9a\u4e49\u7684\u8868\u5355\uff0c\u53ef\u5728forms.py\u4e2d\u5b9a\u4e49    \u5982\u679c\u8bf7\u6c42\u65b9\u6cd5\u4e3apost(\u63d0\u4ea4\u8868\u5355\u540e)\uff0c\u9996\u5148\u9a8c\u8bc1\u8f93\u5165\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u6b63\u786e\u5219\u83b7\u53d6\u76f8\u5e94\u7684ipaddress,tnsname,performance_type\u7b49\u4fe1\u606f,    \u63a5\u4e0b\u6765\u6839\u636eperformance_type\u7684\u7c7b\u578b(\u7269\u7406\u8bfb\uff0c\u903b\u8f91\u8bfb\u7b49)\u8c03\u7528monitor/command/views_oracleperformance.py\u6587\u4ef6\u91cc\u9762\u7684\u65b9\u6cd5\u6765\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8bb2\u89e3\u5728\u6628\u5929\u7684\u516c\u4f17\u53f7\uff0c\u5927\u5bb6\u53ef\u81ea\u884c\u67e5\u770b    \u6700\u540e\u6211\u4eec\u5c06TOP SQL\u76f8\u5173\u7684\u5185\u5bb9\u5c01\u88c5\u6210\u5b57\u5178\u91cd\u5b9a\u5411\u5230\u76f8\u5e94\u7684template\u6587\u4ef6\u4e2d",
            "title": "2. views.py"
        },
        {
            "location": "/2.4/#3-template",
            "text": "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528highcharts.html\u6587\u4ef6\u6765\u663e\u793a\u8d8b\u52bf\u56fe  <div id='newadd'>\n<script>\n$(function () {\n    $('#container').highcharts({\n        title: {\n            text: '{{title|safe}}',\n            x: -20 //center\n        },\n        xAxis: {\n            categories: {{categories|safe}}\n        },\n        yAxis: {\n            title: {\n                text: '{{unit}}'\n            },\n            plotLines: [{\n                value: 0,\n                width: 1,\n                color: '#808080'\n            }]\n        },\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'middle',\n            borderWidth: 0\n        },\n\n         plotOptions: {\n            series: {\n                cursor: 'pointer',\n                point: {\n                events: {\n                    click: function(e) {\n                         $(\"#test3\").val(this.y+'s'+this.x);\n                        //\u4e0a\u9762\u662f\u5f53\u524d\u9875\u8df3\u8f6c\uff0c\u5982\u679c\u662f\u8981\u8df3\u51fa\u65b0\u9875\u9762\uff0c\u90a3\u5c31\u7528\n                        //window.open(e.point.url);\n                        //\u8fd9\u91cc\u7684url\u8981\u540e\u9762\u7684data\u91cc\u7ed9\u51fa\n                }\n                }\n\n            },\n            }\n           },\n\n\n        series:[\n                {% for i in series %}\n                {\n                    name: '{{i.name}}',\n                    data: {{i.data}}\n                    },\n                {% endfor %}\n                ]                    \n        });\n});                       \n</script>\n</div>  \u8fd9\u91cc\u901a\u8fc7highcharts\u6765\u5c55\u73b0\u6570\u636e\u5e93\u6027\u80fd\u8d8b\u52bf\u72b6\u6001  Django\u5141\u8bb8\u5728html\u6587\u4ef6\u5185\u90e8\u4f7f\u7528\u7a0bfor\u5faa\u73af\u7684\u5f62\u5f0f\u6765\u8fed\u4ee3\u5217\u8868  \u5173\u4e8eoracle_peforance\u9875\u9762\u5c31\u8bf4\u5230\u8fd9\u4e86\uff0cperformance\u9875\u9762\u53ef\u81ea\u884c\u53c2\u8003\u6e90\u7801",
            "title": "3. template\u6587\u4ef6"
        },
        {
            "location": "/2.4/#4",
            "text": "1.\u6570\u636e\u5e93\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf(\u5929\u4e3a\u5355\u4f4d)  \u9996\u5148\u662f\u8868\u5355\u63d0\u4ea4\u4e4b\u524d\u7684\u754c\u9762     \u8fd9\u91cc\u9009\u62e9\u9700\u8981\u67e5\u8be2\u7684\u6570\u636e\u5e93\uff0c\u652f\u6301\u591a\u4e2a\u6570\u636e\u5e93\u540c\u65f6\u67e5\u8be2    \u7136\u540e\u662f\u8d77\u6b62\u65f6\u95f4\u4ee5\u53ca\u6027\u80fd\u7c7b\u578b    \u6700\u540e\u53ef\u4ee5\u9009\u62e9\u5929\u548c\u5468\u4e3a\u5355\u4f4d    \u70b9\u51fb\u63d0\u4ea4\u540e\u4f1a\u5c55\u793a\u5404\u4e2a\u6570\u636e\u5e93\u8be5\u65f6\u95f4\u6bb5\u7684\u8d8b\u52bf\u56fe     2.\u6570\u636e\u5e93\u7cfb\u7edf\u72b6\u6001\u8d8b\u52bf(\u5c0f\u65f6\u4e3a\u5355\u4f4d)  \u9996\u5148\u662f\u8868\u5355\u63d0\u4ea4\u4e4b\u524d\u7684\u754c\u9762     \u8fd9\u91cc\u9009\u62e9\u9700\u8981\u67e5\u8be2\u7684\u6570\u636e\u5e93    \u7136\u540e\u662f\u8d77\u6b62\u65f6\u95f4\u4ee5\u53ca\u6027\u80fd\u7c7b\u578b    \u6700\u540e\u662f\u662f\u5426\u6bd4\u8f83\u57fa\u7ebf,\u8fd9\u4e2a\u540e\u7eed\u4f1a\u6709\u5355\u72ec\u4ecb\u7ecd    \u70b9\u51fb\u63d0\u4ea4\u540e\u4f1a\u5c55\u793a\u51fa\u6bcf\u5929\u5404\u4e2a\u65f6\u95f4\u6bb5\u7684\u8d8b\u52bf\u56fe",
            "title": "4. \u6548\u679c\u5c55\u793a"
        },
        {
            "location": "/2.4/#5",
            "text": "\u6b22\u8fce\u8bbf\u95ee\u6211\u7684github\u4e3b\u9875\u67e5\u770b\u6e90\u7801  https://github.com/bsbforever/oms_django",
            "title": "5. \u6e90\u4ee3\u7801\u4f4d\u7f6e"
        },
        {
            "location": "/2.5/",
            "text": "\u5229\u7528Django\u76d1\u63a7\u6570\u636e\u5e93\u6027\u80fd\u5e76\u5b9a\u4f4d\u95ee\u9898\n\n\n2017-12-18 Python \u5b85\u5fc5\u5907\n\n\n\u5f00\u53d1\u73af\u5883\n\n\n\u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4 \n\n\nPython\u7248\u672c :3.6 \n\n\nDjango\u7248\u672c: 1.10.5 \n\n\n\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms \n\n\n\u6570\u636e\u5904\u7406:pandas \n\n\n\u524d\u7aef\u5c55\u793a:highcharts\n\n\n\u4e0a\u5468\u6211\u4eec\u901a\u8fc7\u4e00\u5468\u7684\u65f6\u95f4\u8bb2\u8ff0\u4e86\u5982\u4f55\u76d1\u63a7\u6570\u636e\u5e93\u7684\u6027\u80fd\u8d8b\u52bf\u5e76\u627e\u51fa\u5177\u4f53\u7684\u8bed\u53e5\n\n\n\u8fd9\u5468\u6211\u4eec\u5c06\u8fd9\u4e9b\u5e94\u7528\u5728\u65e5\u5e38\u7684\u5de5\u4f5c\u4e2d\n\n\n1. Oralce\u6027\u80fd\u72b6\u6001\u8d8b\u52bf(\u5929)\n\n\n\u9996\u5148\u662f\u6574\u4f53\u7684\u8d8b\u52bf\uff0c\u4ee5\u5929\u4e3a\u5355\u4f4d\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u4f1a\u5bf9\u6211\u4eec\u7ef4\u62a4\u7684\u6570\u636e\u5e93\u4e86\u7136\u4e8e\u5fc3\n\n\n\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6bcf\u5929\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u67d0\u5929\u7684\u5f02\u5e38\u6211\u4eec\u7ee7\u7eed\u4e0b\u4e00\u6b65\u67e5\u770b\u66f4\u8be6\u7ec6\u7684\n\n\n2.Oracle\u6027\u80fd\u72b6\u6001\u8d8b\u52bf(\u5c0f\u65f6)\n\n\n\u8fd9\u91cc\u6211\u4eec\u89c2\u5bdf\u5230\u6bcf\u5929\u5404\u4e2a\u65f6\u95f4\u6bb5\u7684\u60c5\u51b5\uff0c\u5b9a\u4f4d\u5230\u5177\u4f53\u7684\u65f6\u95f4\u70b9\n\n\n\n\n\u5b9a\u4f4d\u5230\u65f6\u95f4\u70b9\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7TOP SQL \u754c\u9762\u5b9a\u4f4d\u5230\u8bed\u53e5\n\n\n3. \u67e5\u627e\u5404\u4e2a\u65f6\u95f4\u6bb5\u7684TOP \u8bed\u53e5\u548c\u7b49\u5f85\u4e8b\u4ef6\n\n\n\u4e5f\u53ef\u4ee5\u67e5\u627e\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u7684\u7b49\u5f85\u4e8b\u4ef6",
            "title": "5.\u5229\u7528Django\u76d1\u63a7\u6570\u636e\u5e93\u6027\u80fd\u5e76\u5b9a\u4f4d\u95ee\u9898"
        },
        {
            "location": "/2.5/#django",
            "text": "2017-12-18 Python \u5b85\u5fc5\u5907  \u5f00\u53d1\u73af\u5883  \u64cd\u4f5c\u7cfb\u7edf:CentOS 7.4   Python\u7248\u672c :3.6   Django\u7248\u672c: 1.10.5   \u64cd\u4f5c\u7cfb\u7edf\u7528\u6237:oms   \u6570\u636e\u5904\u7406:pandas   \u524d\u7aef\u5c55\u793a:highcharts  \u4e0a\u5468\u6211\u4eec\u901a\u8fc7\u4e00\u5468\u7684\u65f6\u95f4\u8bb2\u8ff0\u4e86\u5982\u4f55\u76d1\u63a7\u6570\u636e\u5e93\u7684\u6027\u80fd\u8d8b\u52bf\u5e76\u627e\u51fa\u5177\u4f53\u7684\u8bed\u53e5  \u8fd9\u5468\u6211\u4eec\u5c06\u8fd9\u4e9b\u5e94\u7528\u5728\u65e5\u5e38\u7684\u5de5\u4f5c\u4e2d",
            "title": "\u5229\u7528Django\u76d1\u63a7\u6570\u636e\u5e93\u6027\u80fd\u5e76\u5b9a\u4f4d\u95ee\u9898"
        },
        {
            "location": "/2.5/#1-oralce",
            "text": "\u9996\u5148\u662f\u6574\u4f53\u7684\u8d8b\u52bf\uff0c\u4ee5\u5929\u4e3a\u5355\u4f4d\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u4f1a\u5bf9\u6211\u4eec\u7ef4\u62a4\u7684\u6570\u636e\u5e93\u4e86\u7136\u4e8e\u5fc3   \u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6bcf\u5929\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u67d0\u5929\u7684\u5f02\u5e38\u6211\u4eec\u7ee7\u7eed\u4e0b\u4e00\u6b65\u67e5\u770b\u66f4\u8be6\u7ec6\u7684",
            "title": "1. Oralce\u6027\u80fd\u72b6\u6001\u8d8b\u52bf(\u5929)"
        },
        {
            "location": "/2.5/#2oracle",
            "text": "\u8fd9\u91cc\u6211\u4eec\u89c2\u5bdf\u5230\u6bcf\u5929\u5404\u4e2a\u65f6\u95f4\u6bb5\u7684\u60c5\u51b5\uff0c\u5b9a\u4f4d\u5230\u5177\u4f53\u7684\u65f6\u95f4\u70b9   \u5b9a\u4f4d\u5230\u65f6\u95f4\u70b9\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7TOP SQL \u754c\u9762\u5b9a\u4f4d\u5230\u8bed\u53e5",
            "title": "2.Oracle\u6027\u80fd\u72b6\u6001\u8d8b\u52bf(\u5c0f\u65f6)"
        },
        {
            "location": "/2.5/#3-top",
            "text": "\u4e5f\u53ef\u4ee5\u67e5\u627e\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u7684\u7b49\u5f85\u4e8b\u4ef6",
            "title": "3. \u67e5\u627e\u5404\u4e2a\u65f6\u95f4\u6bb5\u7684TOP \u8bed\u53e5\u548c\u7b49\u5f85\u4e8b\u4ef6"
        }
    ]
}